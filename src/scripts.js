export function loadScripts()
	{	
		game.wfrp4e.config.effectScripts = {"00ZCnahnTGvzG9KA":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.weczkAMPlTjX7lqU\");\nthis.actor.createEmbeddedDocuments(\"Item\", [item]);\n","01VFjGVxkjb5P1ve":"return args.item?.system?.isRanged && args.data.targets[0]?.actor?.sizeNum < 3\n","03mJu59V4iByWlsO":"// The imbiber immediately\n// takes 3 Poisoned Conditions that cannot be resisted at first,\nawait this.actor.addCondition(\"poisoned\", 3);\n\n// recovers a number of Wounds equal to their Toughness Bonus,\nawait this.actor.modifyWounds(this.actor.system.characteristics.t.bonus);\n\n// and acquires the Regenerate Creature Trait.\nconst hasRegenerate = this.actor.has(\"Regenerate\");\nif (hasRegenerate === undefined) {\n\tfromUuid(\"Compendium.wfrp4e-core.items.SfUUdOGjdYpr3KSR\").then((trait) => {\n\t\tconst traitItem = trait.toObject();\n\t\tthis.actor.createEmbeddedDocuments(\"Item\", [traitItem], {\n\t\t\tfromEffect: this.effect.id,\n\t\t});\n\t});\n}\n\nthis.script.scriptMessage(\n\t`<p><strong>${this.actor.prototypeToken.name}</strong> has \n    <ul>\n      <li>gained 3 Poisoned Conditions that cannot be resisted at first</li>\n      <li>recovered ${this.actor.system.characteristics.t.bonus} Wounds</li>\n      <li>acquired the Regenerate Creature Trait.</li>\n    </ul>\n    It’s up to Ranald if their regenerating can outpace their poisoning.</p>\n    <p>When all Poisoned Conditions are lost, so too is Regenerate.</p>`,\n\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\"), blind: true },\n);\n","04bAiHISSW53w94Y":"this.actor.addCondition(\"blinded\", 3);\n","06IaVCOC0RCJbxEf":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.8piWcBKFlQ2J1E3A\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nthis.actor.createEmbeddedDocuments(\"Item\", [data]);\n","09sSpnW8z2zcVEdf":"if (!args.flags.quietenedApplied) {\n\targs.fields.modifier += 10;\n\targs.flags.quietenedApplied = true;\n}\n","0abwNjpzo3SbEOeO":"if (args.applyAP && args.modifiers.ap.metal) {\n\targs.modifiers.ap.ignored += args.modifiers.ap.metal;\n\targs.modifiers.ap.details.push(\n\t\t`<strong>${this.effect.name}</strong>: Ignore Metal (${args.modifiers.ap.metal})`,\n\t);\n\targs.modifiers.ap.metal = 0;\n}\n","0BP5l7bIkf744G1k":"return !args.options.terror  && !args.extendedTest?.flags.wfrp4e?.fear\n","0e0UZT2FodOJDdgW":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.GbDyBCu8ZjDp6dkj\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","0e7OkamNAaAk4Oit":"const item1 = await fromUuid(\"Compendium.wfrp4e-core.items.3S4OYOZLauXctmev\");\nconst item2 = await fromUuid(\"Compendium.wfrp4e-core.items.7mCcI3q7hgWcmbBU\");\n\nconst data1 = item1.toObject();\ndata1.system.location.key = this.item.system.location.key;\n\nconst data2 = item2.toObject();\ndata2.system.location.key = this.item.system.location.key;\n\nthis.actor.createEmbeddedDocuments(\"Item\", [data1, data2], {\n\tfromEffect: this.effect.id,\n});\n","0FNOq4J1AdPd2A0q":"return !args.skill?.name.includes(game.i18n.localize(\"NAME.Row\")) && !args.skill?.name.includes(game.i18n.localize(\"NAME.Sail\"));\n","0FWto1oEr3jbWggw":"const spells = await game.wfrp4e.utility.findAll(\"spell\", \"Loading Spells\");\n\nconst text = (\n\tawait game.wfrp4e.tables.rollTable(\"random-caster\", { hideDSN: true })\n).result;\n\nlore = Array.from(text.matchAll(/{(.+?)}/gm))[0][1];\n\nif (text === \"GM's Choice\") {\n\treturn this.script.scriptNotification(text)\n}\n\nif (spellsWithLore.length > 0) {\n\tconst spellsWithLore = spells.filter(\n\t\t(i) => game.wfrp4e.config.magicLores[i.system.lore.value] === lore,\n\t);\n\tconst selectedSpell =\n\t\tspellsWithLore[\n\t\t\tMath.floor(CONFIG.Dice.randomUniform() * spellsWithLore.length)\n\t\t];\n\tthis.script.scriptNotification(selectedSpell.name);\n\tthis.actor.createEmbeddedDocuments(\"Item\", [selectedSpell]);\n} else {\n\tui.notifications.notify(`Could not find ${lore} spell. Try Again`);\n}\n","0iTLDgFHO9Rgc010":"args.fields.modifier -= 20;\n","0KG3HoTNoZhaINIj":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.4CMKeDTDrRQZbPIJ\");\nconst fixation = await game.wfrp4e.tables.rollTable(\"fixations\");\nconst data = item.toObject();\ndata.system.specification.value = fixation.result;\nthis.item.updateSource({ name: (this.item.name += ` (${fixation.result})`) });\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","0LCQtsiK2aUfYRmD":"return ![\"t\", \"wp\"].includes(args.characteristic)\n","0mrUnxzufYgsR0Ph":"this.actor\n\t.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t})\n\t.then(async (test) => {\n\t\tawait test.roll();\n\t\tif (test.failed) {\n\t\t\tthis.actor.addCondition(\"stunned\");\n\t\t}\n\t});\n","0R0QAr3D024kWPfo":"const table = game.wfrp4e.tables.findTable(\"mutatephys\");\nif (!table) {\n\treturn ui.notifications.error(\"Mutation table not found, please ensure a table with the `mutatephys` key is imported in the world.\")\n}\nconst result = (await table.roll()).results[0];\nconst uuid = `Compendium.${result.documentCollection}.${result.documentId}`;\nconst item = await fromUuid(uuid);\n\nif (item) {\n\tthis.script.scriptNotification(`${item.name} added`);\n\tthis.actor.createEmbeddedDocuments(\"Item\", [item]);\n} else {\n\tui.notifications.error(`Item could not be found: ${uuid}`);\n}\n","0Uly7OmkH0zqYbxQ":"const location = this.item.system.location.key;\n\nif (location) {\n\tconst dropped = this.item.system.weaponsAtLocation;\n\n\tif (dropped.length) {\n\t\tthis.script.scriptNotification(\n\t\t\t`Dropped ${dropped.map((i) => i.name).join(\", \")}!`,\n\t\t);\n\t\tfor (const weapon of dropped) {\n\t\t\tawait weapon.system.toggleEquip();\n\t\t}\n\t}\n}\n\nconst roll = await new Roll(\n\t\"max(1, 1d10 - @system.characteristics.t.bonus)\",\n\tthis.actor,\n).roll();\n\nroll.toMessage(\n\tthis.script.getChatData({ flavor: `${this.effect.name} (Duration)` }),\n);\n\nthis.effect.updateSource({ \"duration.rounds\": roll.total });\n","0vaYwAlMWTmOBl8k":"if (!args.flags.strikeToStun) {\n\targs.flags.strikeToStun = true;\n\targs.fields.modifier += 20;\n\targs.fields.hitLocation = \"head\";\n}\nargs.fields.successBonus++;\n","0YKQGbsKdHSmYGE7":"if (args.skill?.name !== game.i18n.localize(\"NAME.Gossip\")) {\n\treturn true;\n} else {\n\targs.data.canReverse = true; // Kind of a kludge here, the talent Tests has a specific condition, but the description simply says \"any gossip test can be reversed\" so check it here instead of submission\n}\n","0yyofYHeDRQlFliO":"return args.options.terror  || args.extendedTest?.flags.wfrp4e?.fear\n","11uCC0mK2uL783al":"const type = this.item.getFlag(\"wfrp4e\", \"breath\");\n\nif ([\"fire\", \"electricity\", \"poison\"].includes(type)) {\n\targs.applyAP = false;\n}\n","16nCOByUaSFDym1V":"args.fields.modifier -= 20;\n","190PHSHKGaJ74wsR":"if (\n\t!this.item.name.includes(\"(\") ||\n\tthis.item.system.tests.value.includes(\"Terrain\")\n) {\n\tlet tests = this.item.system.tests.value;\n\tlet name = this.item.name;\n\n\t// If name already specifies, make sure tests value reflects that\n\tif (name.includes(\"(\")) {\n\t\tconst terrain = name.split(\"(\")[1].split(\")\")[0];\n\t\ttests = tests.replace(\"the Terrain\", terrain);\n\t} // If no sense specified, provide dialog choice\n\telse {\n\t\tconst choice = await ItemDialog.create(\n\t\t\tItemDialog.objectToArray(\n\t\t\t\t{\n\t\t\t\t\tcoastal: \"Coastal\",\n\t\t\t\t\tdeserts: \"Deserts\",\n\t\t\t\t\tmarshes: \"Marshes\",\n\t\t\t\t\trocky: \"Rocky\",\n\t\t\t\t\ttundra: \"Tundra\",\n\t\t\t\t\twoodlands: \"Woodlands\",\n\t\t\t\t},\n\t\t\t\tthis.item.img,\n\t\t\t),\n\t\t\t1,\n\t\t\t\"Choose Terrain\",\n\t\t);\n\t\tif (choice[0]) {\n\t\t\tname = `${name.split(\"(\")[0].trim()} (${choice[0].name})`;\n\t\t\ttests = tests.replace(\"the Terrain\", `${choice[0].name} Terrain`);\n\t\t}\n\t}\n\n\tthis.effect.updateSource({ name });\n\tthis.item.updateSource({ name, \"system.tests.value\": tests });\n}\n","1A87vGLh2PXH0rG0":"return !args.skill?.name.includes(game.i18n.localize(\"NAME.Language\"));\n","1BT0MWM2cbhlEnrn":"const characteristics = {\n\tws: 5,\n\tbs: 5,\n\ts: 5,\n\tt: 0,\n\ti: 5,\n\tag: 5,\n\tdex: 5,\n\tint: 0,\n\twp: 5,\n\tfel: 5,\n};\nconst items = [];\n\nconst updateObj = this.actor.toObject();\n\nconst talents = (\n\tawait Promise.all([\n\t\tgame.wfrp4e.tables.rollTable(\"talents\"),\n\t\tgame.wfrp4e.tables.rollTable(\"talents\"),\n\t\tgame.wfrp4e.tables.rollTable(\"talents\"),\n\t])\n).map((i) => i.text);\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n","1E47r2ba6IGe8uFK":"return args.characteristic !== \"t\"\n","1exiWlVUHsXDLLAH":"this.script.scriptNotification(`Cannot enter ${this.effect.name}!`);\n","1fQr1Dg7DX0vfz3r":"const healed = Number.parseInt(this.effect.sourceTest.result.SL);\nthis.actor.modifyWounds(healed);\nthis.script.scriptMessage(`Healed ${healed} Wounds`);\n","1IodsW9ImamYoEYz":"args.actor.details.move.run += 4;\n","1JwxZujbDcueLWBL":"await this.actor.addCondition(\"ablaze\", 2);\nawait this.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(this.effect.sourceTest.result.damage, {\n\t\tsuppressMsg: true,\n\t}),\n);\n","1kB2su7hLRYDhZ2H":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (!test.succeeded) {\n\tconst item = await fromUuid(\"Compendium.wfrp4e-core.items.ZhMADOqoo0y8Q9bx\");\n\tconst data = item.toObject();\n\tif (this.item.system.location.key === \"rLeg\") {\n\t\tdata.system.location.value = \"Right Toe\";\n\t\tdata.system.location.key = \"rToe\";\n\t} else if (this.item.system.location.key === \"lLeg\") {\n\t\tdata.system.location.value = \"Left Toe\";\n\t\tdata.system.location.key = \"lToe\";\n\t}\n\tthis.actor.createEmbeddedDocuments(\"Item\", [data]);\n}\nthis.effect.delete();\n","1l7Jz2ZHbAWko7Vm":"args.options.ballockKnife = true;\n","1LDm3OB32skZe6Xv":"return args.characteristic !== \"wp\"\n","1MDOKny7IirJPoI6":"const test = await this.actor.setupCharacteristic(\"wp\", {\n\tskipTargets: true,\n\tappendTitle: ` ${this.effect.name}`,\n});\nawait test.roll();\nif (test.succeeded) {\n\tthis.effect.delete();\n}\n","1mNkLj9JYNr3ofC6":"this.actor\n\t.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t})\n\t.then(async (test) => {\n\t\tawait test.roll();\n\t\tif (test.failed) {\n\t\t\tthis.actor.addCondition(\"stunned\", 3);\n\t\t}\n\t});\n","1OpT3CXs07XFWWCT":"args.options.cardsharp = true;\n","1PQPxFjmRlulHHzo":"if (\n\targs.opposedTest.result.hitloc.value === this.item.system.location.key &&\n\targs.totalWoundLoss > 0\n) {\n\targs.actor.addCondition(\"bleeding\", 2);\n}\n","1UalUmNzjB4rp3SZ":"return [\"ws\", \"bs\", \"s\", \"ag\", \"t\", \"dex\"].includes(args.characteristic)\n","1wEjrgff7ASxKVmy":"if (args.effect.conditionId === \"bleeding\") args.data.damage -= 1;\n","1wKVvxRTHOyV4Qdv":"return !args.skill?.name?.includes(game.i18n.localize(\"NAME.Sail\"))\n","1wrPvP6lJwIAfmsl":"const choice = await ItemDialog.create(\n\tItemDialog.objectToArray(game.wfrp4e.config.locations),\n\t1,\n\t\"Choose Location\",\n);\n\nconst location = choice[0].id;\n\nconst itemTargeted = this.actor.items.get(\n\tthis.effect.getFlag(\"wfrp4e\", \"itemTargets\")[0],\n);\n\nif (itemTargeted) {\n\titemTargeted.update({\n\t\t[`system.APdamage.${location}`]: itemTargeted.system.APdamage[location] + 1,\n\t});\n}\n","1yOvw74jzFfaI87b":"return args.options.reload\n","1ZArMNUI8qqH6zkX":"const test = await args.actor.setupCharacteristic(\"wp\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tcontext: { failure: \"Gained a Stunned Condition\" },\n});\nawait test.roll();\nif (test.failed) {\n\targs.actor.addCondition(\"stunned\");\n}\n","1ZrzpfVwPJHdwp23":"this.actor.status.addArmour(1, { source: this.effect, magical: true });\n","22bW97lkvCqisfHX":"return args.type !== \"channelling\" && !args.skill?.name.includes(game.i18n.localize(\"NAME.Channelling\"))\n","23HgjCB1oecxANvA":"if (args.item.range?.bands) {\n\targs.item.range.bands[game.i18n.localize(\"Long Range\")].modifier = 0;\n\targs.item.range.bands[game.i18n.localize(\"Extreme\")].modifier /= 2;\n}\n","23vWiHUjxtRQ3Efz":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.eWPN3CV2Eddwz8aM\");\nconst data = item.toObject();\ndata.system.location.value = \"Back\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","2AdSBXw7IwCiqawQ":"return args.skill?.name === game.i18n.localize(\"NAME.Bribery\") || args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\"));\n","2AOo7KUyzMrgIlgM":"game.wfrp4e.utility.postCorruptionTest(this.item.system.specification.value, {\n\tspeaker: { alias: this.actor.prototypeToken.name },\n});\n","2cKarG9ToyW2ptCd":"if (this.item.system.quantity.value) {\n\tthis.item.update({\n\t\t\"system.quantity.value\": this.item.system.quantity.value - 0.25,\n\t});\n\tconst actor = Array.from(game.user.targets)[0]?.actor || this.actor;\n\tactor.applyEffect({\n\t\teffectData: [this.item.effects.contents[1].convertToApplied()],\n\t});\n} else {\n\tthis.script.scriptNotification(\"None left!\", \"error\");\n}\n","2Cw5j0iGAnFNegWr":"return args.item?.system.attackType\n","2GYAd4OC888oQFBp":"return ![\"fel\"].includes(args.characteristic)\n","2hzDv8ROulOe1elK":"return args.skill?.name.includes(game.i18n.localize(\"NAME.Lore\"));\n","2mFNelLOAQ6iJsZl":"if (args.test.isFumble) {\n\targs.test.result.other.push(\"@Table[doomrocket-fumble]\");\n}\n","2miWWeRrEpq1beG4":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.qn4ZpvTQIX4rcJDl\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","2NLINicPQWbuvp2n":"return args.item?.name !== game.i18n.localize(\"NAME.Navigation\")\n","2OqLHRqEBEjBm2LW":"args.fields.slBonus += this.actor.system.characteristics.wp.bonus;\n","2p9IK6Y5Z4NQD6FY":"args.prefillModifiers.difficulty = \"hard\";\n","2Qi1hwLYhdE6v6Hs":"if (![\"rLeg\", \"lLeg\"].includes(this.effect.getFlag(\"wfrp4e\", \"location\")))\n\treturn true;\n\nif (args.options.dodge) {\n\targs.abort = true;\n\tthis.script.scriptNotification(\"Cannot Dodge!\");\n}\nreturn [\"t\", \"int\", \"wp\", \"fel\"].includes(args.characteristic)\n","2rzxQlL7A9ujZ9uK":"if (args.opposedTest.result.winner === \"attacker\") {\n\tif (\n\t\targs.opposedTest.defenderTest.weapon &&\n\t\targs.opposedTest.defenderTest.item.properties.qualities.shield\n\t) {\n\t\tui.notifications.notify(\n\t\t\t`<b>${this.effect.name}</b>: Gained ${this.item.Advances} Advantage`,\n\t\t);\n\t\tthis.actor.setAdvantage(this.item.Advances);\n\t}\n}\n","2sDH6RvoOAR40oqH":"if (![\"Goblin\", \"Orc\"].includes(this.actor.system.details.species.value)) {\n\tconst test = await this.actor.setupSkill(\n\t\tgame.i18n.localize(\"NAME.Endurance\"),\n\t\t{ appendTitle: ` - ${this.effect.name}` },\n\t);\n\tawait test.roll();\n\tif (test.failed) {\n\t\tconst infection = await fromUuid(\n\t\t\t\"Compendium.wfrp4e-core.items.Item.1hQuVFZt9QnnbWzg\",\n\t\t);\n\t\tthis.actor.createEmbeddedDocuments(\"Item\", [infection]);\n\t}\n}\n\n// Since wounds change when the effect is deleted, need to wait until after\n// the max wounds have been recalculated to apply damage\ngame.wfrp4e.utility.sleep(1000).then(async () => {\n\tconst roll = await new Roll(\"1d10\").roll();\n\n\troll.toMessage(this.script.getChatData());\n\tthis.script.scriptMessage(\n\t\tawait this.actor.applyBasicDamage(roll.total, {\n\t\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\t\t\tsuppressMsg: true,\n\t\t}),\n\t);\n});\n","2VNnVrtktdGUqXEV":"if (args.totalWoundLoss > 0) {\n\tconst test = await args.actor.setupSkill(\n\t\tgame.i18n.localize(\"NAME.Endurance\"),\n\t\t{ skipTargets: true, appendTitle: ` - ${this.effect.name}` },\n\t);\n\tawait test.roll();\n\tif (\n\t\ttest.failed &&\n\t\tNumber.parseInt(args.opposedTest.attackerTest.result.SL) > 0\n\t) {\n\t\targs.actor.addCondition(\n\t\t\t\"stunned\",\n\t\t\tNumber.parseInt(args.opposedTest.attackerTest.result.SL),\n\t\t);\n\t}\n}\n","2vTVR0quRZQtjNfQ":"const currentCareer = this.actor.system.currentCareer;\nif (!currentCareer) {\n\treturn;\n}\n\nconst talents = [\n\t\"Aethyric Attunement\",\n\t\"Arcane Magic (Any)\",\n\t\"Chaos Magic (Tzeentch)\",\n\t\"Fast Hands\",\n\t\"Instinctive Diction\",\n\t\"Magical Sense\",\n\t\"Petty Magic\",\n\t\"Second Sight\",\n\t\"War Wizard\",\n\t\"Witch!\",\n].filter((t) => !currentCareer.system.talents.includes(t));\n\ncurrentCareer.system.talents = currentCareer.system.talents.concat(talents);\n","2W9uMTT6iJhfQ044":"const skill = `Trade (${this.item.parenthesesText})`;\nconst currentCareer = this.actor.system.currentCareer;\nconst existingSkill = this.actor.itemTypes.skill.find((i) => i.name === skill);\n\nif (!currentCareer) return\n\nconst inCurrentCareer = currentCareer.system.skills.includes(skill);\nif (existingSkill && inCurrentCareer) {\n\texistingSkill.system.advances.costModifier = -5;\n} else {\n\tcurrentCareer.system.skills.push(skill);\n}\n","2WBq5gW780C6zfCp":"if (args.weapon && this.item.system.usesLocation(args.weapon)) {\n\targs.bleedingHand = true;\n\tconst success = await this.effect.manualScripts[0].execute({\n\t\tactor: this.actor,\n\t});\n\tif (!success) {\n\t\targs.abort = true;\n\t}\n}\n","2wk0yrRPlPsdqr3L":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.9GNpAqgsKzxZKJpp\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","2WSN306tL4apjRtD":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.9h82z72XGo9tfgQS\");\nconst data = item.toObject();\ndata.name = data.name += \" (Hearing)\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","2yctEihGmdCfTTVx":"args.data.canReverse = true;\nargs.options.fieldDressing = true;\n","2zeP2nMSURjxrqYz":"const wounds = this.actor.system.status.wounds;\nif (wounds.value === 0)\n\treturn this.script.scriptNotification(\"No effect at 0 Wounds\", \"error\")\n\nthis.script.scriptNotification(\n\t`Healed ${this.actor.characteristics.t.bonus} Wounds`,\n);\nawait this.actor.modifyWounds(this.actor.characteristics.t.bonus);\n","33PWizq5F7pkKnQT":"if (args.item.type === \"spell\") {\n\targs.item.cn.value = Math.floor(args.item.cn.value / 2);\n}\n","33US8YRgaMqYu2We":"return !args.options.handling\n","37UN17gb8suFeZIW":"this.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(8, {\n\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP,\n\t\tsuppressMsg: true,\n\t}),\n);\n","3aEzK0DehSHtVykd":"this.effect.manualScripts[0].execute({ actor: this.actor });\n","3Cn2TlRahlm5LkSj":"args.fields.successBonus += 1;\n","3D5ImpMgpOTPucvv":"if (args.test.options.cardsharp && args.test.succeeded) {\n\tconst SL =\n\t\tMath.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10);\n\tconst ones = Number(args.test.result.roll.toString().split(\"\").pop());\n\n\tif (ones > SL)\n\t\targs.test.result.other.push(\n\t\t\t`<span class=\"hide-option\"><b>${this.effect.name}</b>: ${\n\t\t\t\tones + args.test.successBonus + args.test.slBonus\n\t\t\t} SL</span>`,\n\t\t);\n}\n","3eSaX0BeaUalNkEP":"return args.options.mutate\n","3fdCQ3h3iVuhdDs9":"args.fields.slBonus += this.actor.characteristics.ag.bonus;\n","3hfMQkUKYI4rCuBy":"return args.skill?.name !== game.i18n.localize(\"NAME.CharmAnimal\") && !args.skill?.name.includes(game.i18n.localize(\"NAME.AnimalTraining\"));\n","3IGO7xEjRjat937X":"const fatigue = this.actor.hasCondition(\"fatigued\");\nif (fatigue) {\n\tthis.script.scriptNotification(\n\t\t\"Removing Fatigued Condition, disabled effect\",\n\t);\n\tthis.effect.update({ disabled: true });\n\tawait this.actor.removeCondition(\"fatigued\");\n}\n","3JEzEzF1SeYA9lsV":"const choice = await ItemDialog.create(\n\tItemDialog.objectToArray(game.wfrp4e.config.locations, this.effect.img),\n\t1,\n\t\"Choose Location\",\n);\nif (choice[0]) {\n\tthis.effect.updateSource({ name: `${this.effect.name} (${choice[0].name})` });\n\tthis.effect.updateSource({ \"flags.wfrp4e.location\": choice[0].id });\n}\n\nconst location = choice[0].id;\n\nif ([\"lArm\", \"rArm\"].includes(location)) {\n\tconst dropped = this.actor.itemTypes.weapon.filter(\n\t\t(i) => i.isEquipped & i.system.usesHands.includes(location),\n\t);\n\n\tif (dropped.length) {\n\t\tthis.script.scriptNotification(\n\t\t\t`Dropped ${dropped.map((i) => i.name).join(\", \")}!`,\n\t\t);\n\t\tfor (const weapon of dropped) {\n\t\t\tawait weapon.system.toggleEquip();\n\t\t}\n\t}\n}\n\nif (location === \"body\") {\n\tawait this.actor.addCondition(\"fatigued\");\n\ttest = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\t\tfields: { difficulty: \"hard\" },\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t});\n\tawait test.roll();\n\tif (test.failed) {\n\t\tthis.actor.addCondition(\"prone\");\n\t}\n}\n\nif (location === \"head\") {\n\tawait this.actor.addCondition(\"stunned\");\n\ttest = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\t\tfields: { difficulty: \"average\" },\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t});\n\tawait test.roll();\n\tif (test.failed) {\n\t\tthis.actor.addCondition(\"unconscious\");\n\t}\n}\n","3jm0NoYpgB6ZuUSl":"args.options.useOnesAttractive = true;\n","3l7MQSa10Kve2K3P":"this.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(\n\t\tMath.ceil(CONFIG.Dice.randomUniform() * 10) + 6,\n\t\t{ damageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP, suppressMsg: true },\n\t),\n);\nthis.actor.addCondition(\"ablaze\");\n","3LLiSgj6KGtgqcmo":"return !args.skill?.name.includes(game.i18n.localize(\"NAME.Language\"));\n","3plV9WFqs2prfAdp":"return ![\"NAME.Evaluate\", \"NAME.Gamble\"].map(i => game.i18n.localize(i)).includes(args.skill?.name)\n","3R6Y4NpNTqPc83wh":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.IPKRMGry6WotuS1G\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","3sfD1nedXLzuYoXJ":"if (this.actor.hasCondition(\"surprised\")) {\n\tthis.actor\n\t\t.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\t\t\tfields: { difficulty: \"average\" },\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: ` - ${this.effect.name}`,\n\t\t})\n\t\t.then((test) => test.roll());\n}\n","3tE8gFSl28EhCmo5":"await args.actor.addCondition(\"ablaze\");\nawait args.actor.addCondition(\"prone\");\n","3TesBGh8HnlGuafu":"const modifier =\n\tthis.effect.sourceTest?.result.overcast.usage.other.current || 0;\n\nconst test = await this.actor.setupCharacteristic(\"dex\", {\n\tfields: { modifier },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.script.label}`,\n});\n\ntest.roll();\n","3Vbe6gdW8N0bIvXJ":"if (args.item.type === \"weapon\" || args.item.type === \"trait\") {\n\targs.item.qualities.value.push({ name: \"penetrating\" });\n\targs.item.qualities.value.push({ name: \"impale\" });\n}\n","454x3Q95pLvZm0Kx":"return args.skill?.name === game.i18n.localize(\"NAME.ConsumeAlcohol\");\n","4cOZzUvu1nytcqNn":"args.initiative = \"-10\";\n","4FGKZk2f0xrmIDnp":"return args.skill?.name !== game.i18n.localize(\"NAME.Research\") && !args.skill?.name?.includes(game.i18n.localize(\"NAME.Language\"));\n","4fnTKgl0HW9ZrWyJ":"this.actor\n\t.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t\tfields: { difficulty: \"average\" },\n\t})\n\t.then(async (test) => {\n\t\tawait test.roll();\n\t\tif (test.failed) {\n\t\t\tconst char = Math.ceil(CONFIG.Dice.randomUniform() * 2) === 2 ? \"s\" : \"t\";\n\t\t\tthis.script.scriptMessage(\n\t\t\t\t`<strong>${this.actor.name}</strong> lost 1 point of ${game.wfrp4e.config.characteristics[char]}`,\n\t\t\t);\n\t\t\tthis.actor.update({\n\t\t\t\t[`system.characteristics.${char}.initial`]:\n\t\t\t\t\tthis.actor.system.characteristics[char].initial - 1,\n\t\t\t});\n\t\t}\n\t});\n","4gkz3LR7CK1b8ulK":"return args.item?.system.attackType !== \"ranged\" || this.actor.uuid !== this.effect.sourceActor.uuid\n","4HN98hMdQJxM35pA":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.gz2xy41OSVZ8YBgI\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nthis.actor.createEmbeddedDocuments(\"Item\", [data]);\n","4iuTz0uInAfMaoGl":"return args.skill?.name?.includes(game.i18n.localize(\"NAME.Language\")) || args.type === \"cast\"\n","4JVIy5xtVwvadoqv":"this.actor.details.move.run *= 2;\n","4MQ7u4INxp51oyyR":"const characteristics = {\n\tws: 25,\n\tbs: 10,\n\ts: 15,\n\tt: 15,\n\ti: 25,\n\tag: 20,\n\tdex: 0,\n\tint: 10,\n\twp: 25,\n\tfel: 10,\n};\nconst skills = [\n\t\"Хладнокровие\",\n\t\"Уклонение\",\n\t\"Intimidate\",\n\t\"Intuition\",\n\t\"Leadership\",\n\t\"Lore (Warfare)\",\n\t\"Perception\",\n];\nconst skillAdvancements = [15, 15, 15, 15, 15, 10, 10];\nconst talents = [\n\t\"Combat Aware\",\n\t\"Combat Reflexes\",\n\t\"Feint\",\n\t\"Inspiring\",\n\t\"Resolute\",\n\t\"War Leader\",\n];\nconst trappings = [\"Hand Weapon\", \"Shield\"];\nconst items = [];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${trapping}`, { permanent: true });\n\t}\n}\n\nupdateObj.name = updateObj.name += ` ${this.effect.name}`;\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","4pQW4WLyhjbZR85k":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"average\" },\n\tcontext: { failure: \"1 Corruption Point Gained\" },\n});\nawait test.roll();\nif (test.failed && this.actor.type === \"character\") {\n\tthis.actor.update({\n\t\t\"system.status.corruption.value\":\n\t\t\tNumber.parseInt(this.actor.status.corruption.value) + 1,\n\t});\n\tthis.script.scriptMessage(\"Gained a Corruption point\", {\n\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t});\n}\n","4QoxhoekgVeZcQA7":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.M5QSWOYt2Rbv2yxW\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","4rb7LfMq9CTnlrpn":"if (args.totalWoundLoss > 0) {\n\tconst test = await args.actor.setupSkill(\n\t\tgame.i18n.localize(\"NAME.Endurance\"),\n\t\t{ skipTargets: true, appendTitle: ` - ${this.effect.name}` },\n\t);\n\tawait test.roll();\n\tif (test.failed) {\n\t\targs.totalWoundLoss += 5;\n\t\targs.modifiers.other.push({ label: this.effect.name, value: 5 });\n\t}\n}\n","4rhxLzau7jZ4SDxg":"await args.actor.addCondition(\"grappling\");\nawait args.actor.addCondition(\"entangled\");\n","4rTmV3TNxctUe0ly":"const test = await this.actor.setupCharacteristic(\"ag\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"bleeding\");\n}\n","4XrAeL2DitxE8OaK":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.0hn6UaKq8CoZP2zD\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","52kbfuWrOh6dsTtd":"if (!this.actor.hasCondition(\"blinded\"))\n\tthis.actor.addCondition(\"blinded\", 1, { \"flags.wfrp4e.flockOfDoom\": true });\n","52mwb33mGrQjq89B":"return args.skill?.name !== game.i18n.localize(\"NAME.Research\");\n","53HFDNuMnX1Aw1a4":"return [\"ws\", \"bs\", \"s\", \"ag\", \"dex\", \"int\", \"wp\", \"fel\"].includes(args.characteristic)\n","58rFc9HiBoX66J6p":"const sourceActor = this.effect.sourceActor;\nconst damage = args.totalWoundLoss;\nconst tb = sourceActor.system.characteristics.t.bonus;\nargs.abort = `<strong>${this.effect.name}</strong>: Damage applied to ${sourceActor.name}`;\n\nconst message = await sourceActor.applyBasicDamage(damage - tb, {\n\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP,\n\tsuppressMsg: true,\n});\n\nthis.script.scriptMessage(message.replace(`${tb} TB`, `${tb} × 2 TB`));\nargs.abort = true;\n","5DI6cHAg1LHo54Yv":"if (\n\targs.opposedTest.result.differenceSL >= 0 &&\n\targs.opposedTest.result.differenceSL <= 2 &&\n\targs.opposedTest.result.winner === \"attacker\"\n) {\n\tthis.actor.update({\n\t\t\"system.status.fortune.value\": Math.max(\n\t\t\t0,\n\t\t\tthis.actor.system.status.fortune?.value - 1 || 0,\n\t\t),\n\t});\n\tthis.script.scriptMessage(\n\t\t`Fortune point stolen from <strong>${this.actor.name}</strong>`,\n\t\t{ blind: true, whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n","5dR7Erj3nwsxLAV7":"const characteristics = {\n\tws: 35,\n\tbs: 10,\n\ts: 25,\n\tt: 30,\n\ti: 30,\n\tag: 25,\n\tdex: 0,\n\tint: 15,\n\twp: 35,\n\tfel: 15,\n};\nconst skills = [\n\t\"Хладнокровие\",\n\t\"Уклонение\",\n\t\"Intimidate\",\n\t\"Intuition\",\n\t\"Leadership\",\n\t\"Lore (Warfare)\",\n\t\"Perception\",\n];\nconst skillAdvancements = [25, 15, 25, 25, 30, 20, 20];\nconst talents = [\n\t\"Combat Aware\",\n\t\"Combat Reflexes\",\n\t\"Feint\",\n\t\"Inspiring\",\n\t\"Luck\",\n\t\"Resolute\",\n\t\"Unshakable\",\n\t\"War Leader\",\n];\nconst trappings = [\"Hand Weapon\", \"Shield\"];\nconst items = [];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${trapping}`, { permanent: true });\n\t}\n}\n\nupdateObj.name = updateObj.name += ` ${this.effect.name}`;\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","5Fe1ELaS6Gnvy0Cj":"return args.skill?.name.includes(\"Концентрация\") || args.type === \"channelling\" || args.skill?.name === game.i18n.localize(\"NAME.Charm\") || args.skill?.name.includes(\"Язык (магический)\") || args.type === \"cast\"\n","5IoYTyedCMYwt3ys":"args.fields.slBonus += 2;\n","5JvKJZPcd6Hz5zvn":"const characteristics = {\n\tws: 10,\n\tbs: 0,\n\ts: 10,\n\tt: 10,\n\ti: 20,\n\tag: 10,\n\tdex: 0,\n\tint: 0,\n\twp: 15,\n\tfel: 0,\n};\nconst skills = [\"Хладнокровие\", \"Уклонение\", \"Intimidate\", \"Leadership\"];\nconst skillAdvancements = [15, 15, 10, 5];\nconst talents = [\"Combat Aware\", \"Combat Reflexes\", \"Feint\", \"Resolute\"];\nconst trappings = [\n\t\"Mail Coat\",\n\t\"Mail Chausses\",\n\t\"Mail Coif\",\n\t\"Hand Weapon\",\n\t\"Shield\",\n];\nconst items = [];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${trapping}`, { permanent: true });\n\t}\n}\n\nupdateObj.name = `${this.effect.name} ${updateObj.name}`;\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","5JWC0l3JEpOsqbR9":"const characteristics = {\n\tws: 0,\n\tbs: 5,\n\ts: 0,\n\tt: 0,\n\ti: 10,\n\tag: 10,\n\tdex: 0,\n\tint: 0,\n\twp: 5,\n\tfel: 0,\n};\nconst skills = [\"Уклонение\", \"Perception\"];\nconst skillAdvancements = [10, 10];\nconst talents = [\"Flee!\", \"Marksman\"];\nconst trappings = [\"Hand Weapon\"];\nconst items = [];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${trapping}`, { permanent: true });\n\t}\n}\n\nupdateObj.name = updateObj.name += ` ${this.effect.name}`;\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","5lc1eHIYQNpSRWip":"if ([\"death\", \"necromancy\"].includes(args.spell?.system.lore.value)) {\n\targs.fields.successBonus += 1;\n} else if (\n\t[\"life\", \"light\", \"heavens\"].includes(args.spell?.system.lore.value)\n) {\n\targs.fields.modifier -= 10;\n}\n","5LdJCKfQem1AQK24":"if (!args.flags.howlingWarpGale) {\n\targs.fields.modifier -= 10;\n\targs.flags.howlingWarpGale = true; // prevent double application\n}\n","5M6IgCUncCwyxHok":"const etiquette = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.Item.sYbgpSnRqSZWgwFP\")\n).toObject();\netiquette.name += \" (Followers of Tzeentch)\";\n\nconst animosity = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.Item.0VpT5yubw4UL7j6f\")\n).toObject();\nanimosity.system.specification.value = \"Followers of Nurgle\";\n\nconst roll = await new Roll(\"ceil(1d10 / 3)\").roll();\n\nroll.toMessage(this.script.getChatData());\n\nconst mutations = [];\nlet msg = \"<p><strong>Mutations Gained</strong></p>\";\nfor (let i = 0; i < roll.total; i++) {\n\tlet item;\n\tlet uuid;\n\tlet result;\n\tif (i % 2 === 0) {\n\t\tresult = await game.wfrp4e.tables.rollTable(\n\t\t\t\"mutatemental\",\n\t\t\t{ hideDSN: true },\n\t\t\t\"Tzeentch\",\n\t\t);\n\t} else {\n\t\tresult = await game.wfrp4e.tables.rollTable(\n\t\t\t\"mutatephys\",\n\t\t\t{ hideDSN: true },\n\t\t\t\"Tzeentch\",\n\t\t);\n\t}\n\tuuid = `Compendium.${result.object.documentCollection}.${result.object.documentId}`;\n\titem = await fromUuid(uuid);\n\tif (item) {\n\t\tmsg += `<p>@UUID[${uuid}]{${item.name}}</p>`;\n\t\tmutations.push(item.toObject());\n\t}\n}\nthis.actor.createEmbeddedDocuments(\n\t\"Item\",\n\tmutations.concat([etiquette, animosity]),\n\t{ fromEffect: this.effect.id },\n);\nthis.script.scriptMessage(msg);\n","5MxRDXzUBPfp2KKD":"args.options.useOnesSupportive = true;\n","5o1XiceC4rutjMms":"return !args.item?.name.includes(game.i18n.localize(\"NAME.Stealth\"))\n","5sI9iYh5j2nx2XyT":"return !([\"Animal Care\", \"Charm Animal\"].includes(args.item?.name) || args.item?.name.includes(\"Ride\") || args.item?.name.includes(\"Animal Training\"))\n","62Ky6bC1EnTllSJA":"if (this.effect.sourceActor.uuid !== args.actor.uuid) {\n\tthis.script.scriptMessage(\n\t\tawait this.actor.applyBasicDamage(\n\t\t\tthis.effect.sourceTest.result.overcast.usage.other.current,\n\t\t\t{\n\t\t\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\t\t\t\tsuppressMsg: true,\n\t\t\t},\n\t\t),\n\t);\n}\n","65o8pQj6oGNnXce6":"const ch = this.effect.getFlag(\"wfrp4e\", \"characteristic\");\nthis.actor.system.characteristics[ch].modifier += 10;\n","65xE9OV5sA1ZWT7j":"if (args.test.options.diceman && args.test.succeeded) {\n\tconst SL =\n\t\tMath.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10);\n\tconst ones = Number(args.test.result.roll.toString().split(\"\").pop());\n\n\tif (ones > SL)\n\t\targs.test.result.other.push(\n\t\t\t`<span class=\"hide-option\"><b>${this.effect.name}</b>: ${\n\t\t\t\tones + args.test.successBonus + args.test.slBonus\n\t\t\t} SL</span>`,\n\t\t);\n}\n","6Aqq4F4Xui923sc6":"// Imbibing this substance grants the user the Painless Creature Trait.\nconst hasColdBlooded = this.actor.has(\"Cold Blooded\");\nif (hasColdBlooded === undefined) {\n\tconst item = await fromUuid(\"Compendium.wfrp4e-core.items.mCh1KK9jomwFZcLB\");\n\tconst data = item.toObject();\n\tthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\t\tfromEffect: this.effect.id,\n\t});\n\n\tthis.script.scriptMessage(\n\t\t`<p><strong>${this.actor.prototypeToken.name}</strong> has gained the Cold Blooded Creature Trait and may reverse any failed Willpower based Tests.</p>\n  <p>If they gain a Surprised Condition, this Condition is not lost the first time it should be (which is typically at the end of the Round or if they victim is attacked).</p>`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\"), blind: true },\n\t);\n}\n","6BmvV9c03FkfisnE":"// Apply changes when the mask is worn\n\nif (args.equipped) {\n\tthis.actor.createEmbeddedDocuments(\"ActiveEffect\", [\n\t\tthis.item.effects.contents[1]?.convertToApplied(),\n\t]);\n\tthis.script.scriptMessage(\n\t\t`${this.actor.name} dons the <strong>${this.item.name}</strong>. <br>\n      They gain +1 Corruption point if an exposure Test is failed, which will need to be manually applied.<br>If they wear the mask for more than an hour or benefit from any of its effects, they are exposed to @Corruption[moderate]{Moderate Corruption} \n      `,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n\n// Notify of lingering effects when mask is removed\nelse if (!args.equipped) {\n\tawait this.item.effects.contents[0].delete();\n\tawait this.item.update({ name: (this.item.name += \" (Used)\") });\n\tthis.script.scriptMessage(\n\t\t`<strong>${this.item.name}</strong> on ${this.actor.name} has been taken off and loses its properties. However, the effects last for [[1d10+4]] days, after which they should be manually removed.`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n","6elUNF58TaiYjxcx":"const test = await this.actor.setupCharacteristic(\"wp\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tcontext: { failure: \"Gained a Stunned Condition\" },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"stunned\");\n}\n","6EXkbVTRBhKTEu81":"if (!args.flags.bothEyes) {\n\targs.flags.bothEyes = true;\n\targs.fields.modifier -= 30;\n}\n","6Fe8M5MdklKS2olx":"return args.characteristic !== \"fel\"\n","6fElmBxTjdAaubbK":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"average\" },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"prone\");\n}\n","6H6vNjzvMGl2ZqCR":"if (args.totalWoundLoss > 0)\n\tthis.script.scriptMessage(\n\t\t`<b>Blade of Nurglitch: ${args.actor.name}</b> must pass an <b>Difficult (-10) Endurance</b> Test or gain a @UUID[Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb]{Festering Wound}`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n","6hAgggYpNR3r4QWC":"let item = await fromUuid(\"Compendium.wfrp4e-core.items.Q2MCUrG2HppMcvN0\");\nitem = item.toObject();\nconst species = args.actor.Species || \" of your species\";\nitem.name = `Animosity (all not ${species})`;\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","6jcTzK1XEuWqAacN":"args.abort = true;\nthis.script.scriptNotification(\n\t`Cannot use ${\n\t\tgame.wfrp4e.config.locations[this.effect.getFlag(\"wfrp4e\", \"location\")]\n\t}!`,\n\t\"error\",\n);\n","6JrUjs3g5x6bFnj3":"const bite = await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\");\nconst sense = await fromUuid(\"Compendium.wfrp4e-core.items.9h82z72XGo9tfgQS\");\nconst biteData = bite.toObject();\nconst senseData = sense.toObject();\n\nbiteData.system.specification.value = 6 - this.actor.characteristics.s.bonus;\nsenseData.name = senseData.name += \" (Smell)\";\nthis.actor.createEmbeddedDocuments(\"Item\", [biteData, senseData], {\n\tfromEffect: this.effect.id,\n});\n","6kifXp2jXEaQVJsg":"const useWard = await Dialog.wait({\n\ttitle: this.effect.name,\n\tcontent: `<p>Use Ward provided by <strong>${this.effect.name}</strong>?`,\n\tbuttons: {\n\t\tyes: {\n\t\t\tlabel: \"Yes\",\n\t\t\tcallback: () => {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t\tno: {\n\t\t\tlabel: \"No\",\n\t\t\tcallback: () => {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t},\n\t},\n});\n\nif (useWard) args.ward = 9;\n","6Mjy0jDqczA8BxhS":"return ![\"roll\", \"none\"].includes(args.fields.hitLocation)\n","6mpw9cGseG4W4eyd":"if (this.actor.system.status.advantage.value >= 2) {\n\tawait this.actor.modifyAdvantage(-2);\n\tthis.script.scriptNotification(\"Advantage Subtracted\");\n} else {\n\treturn this.script.scriptNotification(\"Not enough Advantage!\", \"error\")\n}\n\nconst test = await this.actor.setupTrait(this.item);\nawait test.roll();\n","6MSodMuZ5xk2JJJ9":"if (!this.actor.hasCondition(\"ablaze\")) {\n\tthis.effect.delete();\n}\n","6qUKKep5vhFYmo1J":"return args.type === \"channelling\" || args.skill?.name.includes(game.i18n.localize(\"NAME.Channelling\"))\n","6QZUX7ZrFxOzqI0b":"const regenerate = this.actor.items.getName(\"Regenerate\");\n\nif (regenerate) {\n\tconst effect = regenerate.effects.contents[0];\n\tconst scriptData = effect.getFlag(\"wfrp4e\", \"scriptData\");\n\n\tscriptData[0].script = scriptData[0].script.replace(\"1d10\", \"1d10 * 2\");\n}\n","6tjn0RH4VyOPFneS":"return [\"NAME.Row\", \"NAME.Swim\"].map(i => game.i18n.localize(i)).includes(args.skill?.name);\n","6U8xox4mBrn5eYIp":"if (args.totalWoundLoss > 0) args.actor.addCondition(\"ablaze\");\n","6uldpFvKOCoW92cC":"let item = await fromUuid(\"Compendium.wfrp4e-core.items.uqGxFOEqeurwkAO3\");\nitem = item.toObject();\n\nitem.system.specification.value = 10;\nitem.name += \" (Fire)\";\nsetProperty(item, \"flags.wfrp4e.breath\", \"fire\");\n\nItem.create(item, { parent: this.actor, fromEffect: this.effect.id });\n","6V3qHON3mcerlBlB":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"prone\");\n}\n","6xTtJEhRc4OjcDTf":"if (getProperty(args.data, \"system.status.fortune.value\")) {\n\tthis.script.scriptNotification(\"Cannot update Fortune\");\n\targs.data.system.status.wounds.value = undefined;\n}\n","6XWJWOUQPgKMsFul":"return args.item?.system.attackType !== \"ranged\" || args.flags.howlingWarpGale\n","6ZS1rQLkNvMDO0Fp":"const roll = Math.ceil(CONFIG.Dice.randomUniform() * 10);\nif (args.test.isFumble && roll === 1 && !args.test.result.misfire) {\n\targs.test.result.misfire = `${game.i18n.localize(\"Misfire\")} (Rolled 1)`;\n\targs.test.result.misfireDamage = eval(\n\t\tNumber.parseInt(args.test.result.roll.toString().split(\"\").pop()) +\n\t\t\targs.test.item.Damage,\n\t);\n} else if (args.test.isFumble && roll !== 1) {\n\targs.test.result.other.push(`Misfire Roll: ${roll}`);\n}\n","715G1Bf0haOHvmYQ":"return !(args.skill?.name === game.i18n.localize(\"NAME.Bribery\") || args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\")))\n","71DmrxCTKGYL4Z7X":"return [\"fel\"].includes(args.characteristic)\n","7Ck0fkzE4WQ62qVe":"if (args.item.type === \"skill\" && args.item.name === \"Melee (Basic)\") {\n\targs.item.system.modifier.value += 20;\n}\n","7e8FgQUF2oANANmx":"return args.skill?.name === \"Melee (Brawling)\" || args.item?.weaponGroup?.value === \"brawling\"\n","7F3miqRA0ceMUBIu":"return args.characteristic !== \"int\" || args.skill\n","7F6aGxZJjwxm5e5P":"if (args.test.result.castOutcome === \"failure\") {\n\tValueDialog.create(\n\t\t\"Enter Wounds Lost to gain SL\",\n\t\tthis.effect.name,\n\t\t\"0\",\n\t).then(async (value) => {\n\t\tvalue = Math.clamped(value, 0, 3);\n\t\tif (value === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (Number.isNumeric(value)) {\n\t\t\tthis.script.scriptNotification(`Lost ${value} Wounds`);\n\t\t\tthis.actor.modifyWounds(-1 * value);\n\t\t\tawait this.item.system.toggleEquip();\n\t\t\targs.test.addSL(value);\n\t\t\targs.test.preData.other.push(\n\t\t\t\t`<strong>${this.effect.name}</strong>: +${value} SL`,\n\t\t\t);\n\t\t}\n\t});\n}\n","7f6OsttTzE7Hvzfk":"if (this.actor.statuses.has(\"infighting\"))\n\t// Only add +10 if already infighting\n\targs.prefillModifiers.modifier += 10;\n\nargs.prefillModifiers.successBonus += 1;\n","7H6wYyJ6cpaoc2QQ":"return args.skill?.name === game.i18n.localize(\"NAME.Cool\");\n","7JW9t8AYSDkkzG2V":"// Apply changes when the mask is worn\n\nif (args.equipped) {\n\tthis.actor.createEmbeddedDocuments(\"ActiveEffect\", [\n\t\tthis.item.effects.contents[1]?.convertToApplied(),\n\t]);\n\tthis.script.scriptMessage(\n\t\t`${this.actor.name} dons the <strong>${this.item.name}</strong>. <br>\n      If they wear the mask for more than an hour or benefit from any of its effects, they are exposed to @Corruption[moderate]{Moderate Corruption}. \n      `,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n\n// Notify of lingering effects when mask is removed\nelse if (!args.equipped) {\n\tawait this.item.effects.contents[0].delete();\n\tawait this.item.update({ name: (this.item.name += \" (Used)\") });\n\tthis.script.scriptMessage(\n\t\t`<strong>${this.item.name}</strong> on ${this.actor.name} has been taken off and loses its properties. However, the effects last for [[1d10+4]] days, after which they should be manually removed.`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n","7n3SEAGRA5ESK8gV":"args.options.disarm = true;\n","7OmrMjaU48o2FEZi":"this.actor.characteristics.t.bonus = 10;\n\nthis.actor.details.move.value = 0;\nthis.actor.details.move.walk = 0;\nthis.actor.details.move.run = 0;\n","7ScfB4o1QhXnNUfq":"return ![\"int\", \"wp\"].includes(args.characteristic)\n","7szLG4VALuuy1cPm":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"easy\" },\n});\nawait test.roll();\nif (test.failed) {\n\tawait this.actor.addCondition(\"fatigued\");\n}\n","7VAhXHov6pR1SkgD":"return args.item?.name === game.i18n.localize(\"NAME.Endurance\");\n","7wBWUw05q0igh508":"// Imbibing this substance grants the user the Painless Creature Trait.\nconst hasPainless = this.actor.has(\"Painless\");\nif (hasPainless === undefined) {\n\tconst item = await fromUuid(\"Compendium.wfrp4e-core.items.wMwSRDmgiF2IdCJr\");\n\tconst data = item.toObject();\n\tthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\t\tfromEffect: this.effect.id,\n\t});\n\n\tthis.script.scriptMessage(\n\t\t`<p><strong>${this.actor.prototypeToken.name}</strong> has gained the Painless Creature Trait. This\n    effect lasts for one hour, after which it dissipates and the full effect\n    of all the imbiber's wounds come crashing down at once.</p>\n    <p>Note that this does not prevent the user from acquiring a Critical\n    Wound or dying from one. It merely allows them to ignore most\n    of their effects.</p>`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\"), blind: true },\n\t);\n}\n","7WR2hJjHPhHhHxAq":"const poisoned = args.actor.hasCondition(\"poisoned\");\nif (poisoned) {\n\tthis.script.scriptNotification(\n\t\t`Removed ${poisoned.conditionValue} Poisoned Conditions`,\n\t);\n\tpoisoned.delete();\n} else this.script.scriptNotification(\"No Poisoned Conditions\");\n","7ZoFUMDG2WJd8RMg":"this.script.scriptMessage(`Claimed <strong>${this.effect.name}</strong> Bonus`);\n","84IB8CWa55XzoAkv":"return ([\"Animal Care\", \"Charm Animal\"].includes(args.item?.name) || args.item?.name.includes(\"Ride\") || args.item?.name.includes(\"Animal Training\"))\n","87rrZ3ojHrXa3lCn":"this.actor.modifyWounds(1);\n","8AoA4bnstBtglRGZ":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.wMwSRDmgiF2IdCJr\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","8araLuwmBq8GKEw3":"const APIgnored = args.AP.layers.reduce(\n\t(prev, current) =>\n\t\tprev + (current.weakpoints && !current.ignored ? current.value : 0),\n\t0,\n);\n\nif (APIgnored) {\n\targs.modifiers.ap.ignored += APIgnored;\n\targs.modifiers.ap.details.push(\n\t\t`<strong>${this.effect.name}</strong>: Ignore AP with Weakpoints (${APIgnored})`,\n\t);\n}\n","8ByuHnUZ4RNTdGVv":"const strLoss = Math.ceil(CONFIG.Dice.randomUniform() * 10);\nconst tghLoss = Math.ceil(CONFIG.Dice.randomUniform() * 10);\n\nif (!this.actor.has(\"Undead\") && !this.actor.has(\"Daemonic\")) {\n\tthis.actor\n\t\t.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\t\t\tappendTitle: ` - ${this.effect.name}`,\n\t\t\tfields: { difficulty: \"average\" },\n\t\t\tcontext: { failure: `Lost ${strLoss} Strength and ${tghLoss} Toughness` },\n\t\t})\n\t\t.then(async (test) => {\n\t\t\tawait test.roll();\n\t\t\tif (test.failed) {\n\t\t\t\tthis.actor.update({\n\t\t\t\t\t\"system.characteristics.s.initial\":\n\t\t\t\t\t\tthis.actor.system.characteristics.s.initial - strLoss,\n\t\t\t\t\t\"system.characteristics.t.initial\":\n\t\t\t\t\t\tthis.actor.system.characteristics.t.initial - tghLoss,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n} else {\n\tthis.script.scriptNotification(\n\t\t`<strong>${this.actor.name}</strong> is immune to ${this.effect.name}`,\n\t);\n}\n","8fefDfiYKFOWdPER":"args.update({\n\ttexture: {\n\t\tscaleX: 2,\n\t\tscaleY: 2,\n\t\tsrc: \"modules/wfrp4e-core/tokens/popout/gor.webp\",\n\t},\n});\n","8g2iitsgaJarKQpr":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.V0c3qBU1CMm8bmsW\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","8gCja0mfKt4nYVZc":"args.fields.slBonus += 2;\n","8GyJgdHVBaLrHCY8":"let type = this.item.getFlag(\"wfrp4e\", \"breath\");\nconst types = {\n\tnone: \"None\",\n\tcold: \"Cold\",\n\tcorrosion: \"Corrosion\",\n\tfire: \"Fire\",\n\telectricity: \"Electricity\",\n\tpoison: \"Poison\",\n\tsmoke: \"Smoke\",\n\tvarious: \"Various\",\n};\nif (!type) {\n\ttype = (\n\t\tawait ItemDialog.create(\n\t\t\tItemDialog.objectToArray(types, this.item.img),\n\t\t\t1,\n\t\t\t\"Choose Breath\",\n\t\t)\n\t)[0]?.id;\n\tthis.item.updateSource({ \"flags.wfrp4e.breath\": type });\n}\n\nif (!this.item.name.includes(\"(\") && types[type] && type !== \"none\") {\n\tthis.item.updateSource({\n\t\tname: (this.item.name += ` (${types[type]})`),\n\t\t\"system.specification.value\": this.item.system.specification.value\n\t\t\t.replace(\"(Type)\", \"\")\n\t\t\t.trim(),\n\t});\n}\n","8hIyWDyfbgGAig65":"return [\"ws\", \"bs\", \"s\", \"t\", \"ag\", \"dex\"].includes(args.characteristic)\n","8jvEVPUCg3rKG48Y":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.9fq6p9Q6H02LjaSi\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","8K9tpCwvFC9INk5V":"if ([\"t\", \"wp\"].includes(args.characteristic)) {\n\targs.fields.modifier += 10;\n} else if ([\"ag\", \"i\", \"int\"].includes(args.characteristic)) {\n\targs.fields.modifier -= 10;\n}\n","8LmUVQxOwTLSeabg":"return args.data.targets.length > 0 || !args.weapon?.system.qualities.value.find(i => i.name === \"shield\") // Should count even if they don't have the skill\n","8N3Uqjq1ZxPxo4pk":"return !args.skill?.name?.includes(game.i18n.localize(\"NAME.Lore\"))\n","8noxHUQKR55Kx1YN":"this.actor.system.status.corruption.max += 1;\n","8oE0DTzz0krOfFlV":"args.item.system.qualities.value.push({ name: \"magical\" });\nargs.item.system.qualities.value.push({ name: \"impact\" });\n","8RNziYGGb4sp3BGQ":"if (!args.test.weapon?.name.includes(\"Drakefire\")) {\n\targs.test.result.misfire = game.i18n.localize(\"Misfire\");\n\targs.test.result.misfireDamage = (0, eval)(\n\t\tNumber.parseInt(args.test.result.roll.toString().split(\"\").pop()) +\n\t\t\targs.test.weapon.system.Damage,\n\t);\n}\n","8rq4GL5d5nCn4kO7":"const caster = this.effect.sourceActor;\nif (caster) {\n\tconst healed = caster.characteristics.wp.bonus;\n\tthis.actor.modifyWounds(healed);\n\tthis.script.scriptMessage(\n\t\t`<strong>${this.actor.prototypeToken.name}</strong> regains ${healed} Wounds`,\n\t);\n}\n","8ShLVT0bK1eQpinj":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.k00PimCWkff11IA0\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nthis.actor.createEmbeddedDocuments(\"Item\", [data]);\n","8ThudCYRqkjQIwJH":"if (args.opposedTest.attackerTest.result.critical) {\n\targs.actor.addCondition(\"ablaze\");\n}\n","8TRiAJ8thIKE4IoL":"const SL = Number(\n\tgetProperty(this.item, \"flags.wfrp4e.sourceTest.result.SL\") || 1,\n);\n\nargs.actor.characteristics.i.modifier += 10 * SL;\nargs.actor.characteristics.ag.modifier += 10 * SL;\n","8tyMXDfHR8AJBdDu":"const weakpointsAP = args.AP.layers\n\t.filter((i) => !i.ignored && i.weakpoints)\n\t.reduce((ap, layer) => ap + layer.value, 0);\n\nif (weakpointsAP > 0) {\n\targs.modifiers.ap.ignored += weakpointsAP;\n\targs.modifiers.ap.details.push(\n\t\t`${this.effect.name} - Ignore Weakpoints (${weakpointsAP})`,\n\t);\n}\n","8vpAtJ93GIeye1qj":"return args.type === \"cast\"\n","8WeYU5e5LN9UeWFs":"if (args.item.type === \"spell\") {\n\tconst range = Number.parseInt(args.item.Range);\n\tif (Number.isNumeric(range)) {\n\t\targs.item.system.range.value = `2 * ${args.item.system.range.value}`;\n\t}\n}\n","8wG9l4T9fc1bM0TN":"const item = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.Item.kJNAY1YRaCy9IgmT\")\n).toObject();\nitem.system.specification.value = 1;\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","8WJsecxdndaHRxxS":"this.actor.status.addArmour(this.actor.characteristics.wp.bonus, {\n\tsource: this.effect,\n\tmagical: true,\n});\n","8yBr6VbdKcrWUuqw":"this.actor.characteristics.i.value = \"-\";\nthis.actor.characteristics.int.value = \"-\";\nthis.actor.characteristics.wp.value = \"-\";\nthis.actor.characteristics.fel.value = \"-\";\n","8ZAUBSH9CM9OTpTL":"const test = await this.actor.setupSkill(\n\tgame.i18n.localize(\"NAME.Perception\"),\n\t{\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t\tfields: { difficulty: \"easy\" },\n\t},\n);\nawait test.roll();\n\nif (test.succeeded) {\n\tthis.actor.addCondition(\"stunned\");\n} else if (test.failed) {\n\tthis.actor.addCondition(\"poisoned\", 2);\n}\n","8zTkDVziBPaNbMQX":"let filters = [\n\t{\n\t\tproperty: \"type\",\n\t\tvalue: \"spell\",\n\t},\n\t{\n\t\tproperty: \"system.lore.value\",\n\t\tvalue: \"petty\",\n\t},\n];\n\nconst petty = await game.wfrp4e.apps.ItemDialog.createFromFilters(\n\tfilters,\n\t6,\n\t\"Choose 6 Petty Spells\",\n);\n\nfilters = [\n\t{\n\t\tproperty: \"type\",\n\t\tvalue: \"spell\",\n\t},\n\t{\n\t\tproperty: \"system.lore.value\",\n\t\tvalue: \"\",\n\t},\n];\n\nconst arcane = await game.wfrp4e.apps.ItemDialog.createFromFilters(\n\tfilters,\n\t9,\n\t\"Choose 9 Arcane Spells\",\n);\n\nconst items = petty.concat(arcane).map((i) => i.toObject());\n\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n","91S2GnBFYFbxmOCK":"this.actor.characteristics.s.bonus += 1;\nthis.actor.characteristics.s.calculationBonusModifier -= 1;\n","93K85NnVwjVNXlZq":"return !args.skill?.name.includes(game.i18n.localize(\"NAME.Trade\"));\n","956dUb5sd6OtbWZR":"args.fields.successBonus++;\n","96Y1yIH1lRjTs5hL":"if (args.test.succeeded) return\n\nif (args.test.characteristicKey === \"wp\") this.actor.addCondition(\"broken\");\n","98nKfcimlaPeM9h5":"await this.actor.addCondition(\"bleeding\");\nawait this.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(10, { suppressMsg: true }),\n);\n","9A7rYY3FKi5XLihG":"fromUuid(\"Compendium.wfrp4e-core.items.5QcrpLQWWrsbKR79\").then((item) => {\n\tconst data = item.toObject();\n\tdata.system.tests.value = data.system.tests.value.replace(\n\t\t\"coins\",\n\t\t\"metal objects\",\n\t);\n\tdata.system.description.value +=\n\t\t\"<p>This Talent also extends to any metal object because of <strong>Metallic Affinity</strong></p>\";\n\tthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\t\tfromEffect: this.effect.id,\n\t});\n});\n","9bJGJrLqslV5lBya":"return args.characteristic === \"bs\"\n","9EVj4bmZJex45Mt7":"return args.skill?.name !== game.i18n.localize(\"NAME.Athletics\");\n","9eWR4mdaoCSQawDT":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.GlShFJF2TpsNh1FX\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","9fK07tqqZyPg7dpx":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"veasy\" },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.script.scriptNotification(\"Gained a <strong>Festering Wound</strong>\");\n\tconst item = await fromUuid(\"Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb\");\n\tthis.actor.createEmbeddedDocuments(\"Item\", [item.toObject()]);\n} else {\n\tthis.script.scriptNotification(\"Avoided a <strong>Festering Wound</strong>\");\n}\n","9JnPK1jNUEso7Pv8":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.9h82z72XGo9tfgQS\");\nconst data = item.toObject();\ndata.name += \" (Smell)\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","9MDi3ok9gPwtbALf":"args.actor.details.move.value /= 2;\n","9MwRUzRinhq1IjhG":"args.actor.addCondition(\"grappling\");\n","9nroaZDkW3WXNkB7":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.4MJJCiOKPkBByYwW\",\n);\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","9ob2lPnk3PDot9Tx":"this.actor.addCondition(\"blinded\", this.effect.sourceTest.result.SL);\n","9qWUuEF8F5nehF1y":"args.item.system.qualities.value = args.item.system.qualities.value.concat([\n\t{ name: \"magical\" },\n\t{ name: \"unbreakable\" },\n]);\nargs.item.system.damage.value += ` + ${this.effect.sourceActor.system.characteristics.wp.bonus}`;\n","9RFoasDcFnYZ1txR":"return args.skill?.name === game.i18n.localize(\"NAME.Perception\");\n","9VfeubiCV83LN9iY":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.AtpAudHA4ybXVlWM\");\nconst data = item.toObject();\ndata.name += \" (When Charging)\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","9WZa63lr0K3SsP4G":"const sourceItem = this.effect.sourceItem;\n\nif (sourceItem) {\n\tthis.actor.applyEffect({\n\t\teffectUuids: [sourceItem.effects.contents[2].uuid],\n\t});\n\tthis.script.scriptNotification(\"Applied after effects\");\n}\n","9Yn9uViEjcuaESJ2":"if (this.item.getFlag(\"wfrp4e\", \"failedCool\")) {\n\tthis.item.name += \" (No AP)\";\n\tthis.item.system.AP = {\n\t\thead: 0,\n\t\tlArm: 0,\n\t\trArm: 0,\n\t\tlLeg: 0,\n\t\trLeg: 0,\n\t\tbody: 0,\n\t};\n}\n","9ZFPDCk8M2TQxh7x":"args.fields.modifier += 20;\n","a02tlRCXpaoaDjSN":"const careers = await game.wfrp4e.utility.findAll(\"career\", \"\", true);\ncareers.forEach((c) => {\n\tif (!c.id) {\n\t\tc.id = c._id;\n\t}\n});\nconst choice = await ItemDialog.create(careers, 1, \"Choose Double Life Career\");\nif (choice[0]) {\n\tconst career = await fromUuid(choice[0].uuid);\n\tconst data = career.toObject();\n\tsetProperty(data, \"flags.wfrp4e.doubleLife\", true);\n\tthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\t\tfromEffect: this.effect.id,\n\t});\n\tthis.effect.updateSource({ name: `${this.effect.name} (${data.name})` });\n}\n","A0OK0qAMmnf8iNJf":"if (args.test.result.SL < 0) {\n\tthis.script.scriptMessage(\n\t\t`Gained ${Math.abs(args.test.result.SL)} Corruption points`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n\tif (args.test.failed && this.actor.type === \"character\") {\n\t\tthis.actor.update({\n\t\t\t\"system.status.corruption.value\":\n\t\t\t\tNumber.parseInt(this.actor.status.corruption.value) +\n\t\t\t\tMath.abs(args.test.result.SL),\n\t\t});\n\t}\n}\n","a0YU3whUm16wGBNu":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"average\" },\n});\nawait test.roll();\n\nif (test.failed) {\n\tthis.actor.addCondition(\"fatigued\");\n}\n","A1odAcuRbq9797ZB":"const choice1 = [\n\t{\n\t\ttype: \"skill\",\n\t\tname: \"Melee (Basic)\",\n\t\tdiff: {\n\t\t\tsystem: {\n\t\t\t\tadvances: {\n\t\t\t\t\tvalue: 10,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n];\nconst choice2 = [\n\t{\n\t\ttype: \"skill\",\n\t\tname: \"Melee (Polearm)\",\n\t\tdiff: {\n\t\t\tsystem: {\n\t\t\t\tadvances: {\n\t\t\t\t\tvalue: 10,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n];\n\nconst choice = await Dialog.wait({\n\ttitle: \"Choice\",\n\tcontent: `<p>\n    Select your choice\n    </p>\n    <ol>\n    <li>Melee (Basic)</li>\n    <li>Melee (Polearm)</li>\n    </ol> \n    `,\n\tbuttons: {\n\t\t1: {\n\t\t\tlabel: \"Basic\",\n\t\t\tcallback: () => {\n\t\t\t\treturn choice1;\n\t\t\t},\n\t\t},\n\t\t2: {\n\t\t\tlabel: \"Polearm\",\n\t\t\tcallback: () => {\n\t\t\t\treturn choice2;\n\t\t\t},\n\t\t},\n\t},\n});\n\nconst updateObj = this.actor.toObject();\nconst items = [];\nfor (const c of choice) {\n\tlet existing;\n\tif (c.type === \"skill\") {\n\t\texisting = updateObj.items.find(\n\t\t\t(i) => i.name === c.name && i.type === c.type,\n\t\t);\n\t\tif (existing && c.diff?.system?.advances?.value) {\n\t\t\texisting.system.advances.value += c.diff.system.advances.value;\n\t\t}\n\t}\n\n\tif (!existing) {\n\t\tlet item = await game.wfrp4e.utility.find(c.name, c.type);\n\t\tif (item) {\n\t\t\titem = item.toObject();\n\t\t\tequip(item);\n\t\t\titems.push(mergeObject(item, c.diff || {}));\n\t\t} else\n\t\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","A3fvV69RS1lYgma0":"if (this.actor.type === \"character\") this.actor.corruptionDialog(\"minor\");\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tawait this.actor.addCondition(\"unconscious\");\n\tconst secondTest = await this.actor.setupSkill(\n\t\tgame.i18n.localize(\"NAME.Cool\"),\n\t\t{\n\t\t\tfields: { difficulty: \"easy\" },\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: \" - Despair\",\n\t\t},\n\t);\n\tawait secondTest.roll();\n\tif (secondTest.failed) {\n\t\tawait this.actor.addCondition(\"fatigued\");\n\t}\n}\n","A3MW0UksYrHGa0Qw":"return [\"fel\", \"wp\", \"int\", \"t\"].includes(args.characteristic);\n","a4Aza4a9v8JMU8dC":"const talents = await Promise.all(\n\t[\"Frenzy\", \"Magic Resistance\"].map(game.wfrp4e.utility.findTalent),\n);\nthis.actor.createEmbeddedDocuments(\"Item\", talents, {\n\tfromEffect: this.effect.id,\n});\n","A6DcKPzAGntzSCil":"const roll = await new Roll(\"1d10\").roll();\n\nroll.toMessage(\n\tthis.script.getChatData({ flavor: `${this.effect.name} (Duration)` }),\n);\n\nthis.effect.updateSource({ \"duration.rounds\": roll.total });\n","a6gacHsvgwtsIFSQ":"if (\n\targs.test.item &&\n\targs.test.item.name === game.i18n.localize(\"NAME.Research\")\n)\n\targs.test.preData.canReverse = true;\n","a7pEvCycVnFBXGAQ":"const test = await this.actor.setupCharacteristic(\"i\", {\n\tskipTargets: true,\n\tappendTitle: \" - Stunned\",\n\tfields: { difficulty: \"easy\" },\n});\nawait test.roll();\n\nif (!test.succeeded) {\n\tthis.actor.addCondition(\"stunned\");\n}\n","a8i0sA1RBnD8nHZt":"const caster = this.effect.sourceActor;\nconst targetedItem = this.actor.items.get(\n\tthis.effect.flags.wfrp4e.itemTargets[0],\n);\n\nconst qualities = foundry.utils.deepClone(game.wfrp4e.config.itemQualities);\nconst flaws = foundry.utils.deepClone(game.wfrp4e.config.itemFlaws);\n\nif (targetedItem.type === \"weapon\") {\n\tmergeObject(qualities, game.wfrp4e.config.weaponQualities);\n\tmergeObject(flaws, game.wfrp4e.config.weaponFlaws);\n} else if (targetedItem.type === \"armour\") {\n\tmergeObject(qualities, game.wfrp4e.config.armorQualities);\n\tmergeObject(flaws, game.wfrp4e.config.armorFlaws);\n}\n\nfor (const q in qualities) {\n\t// If the weapon already has a flaw, don't put it in the dialog\n\tif (targetedItem.system.properties.qualities[q]) {\n\t\tdelete qualities[q];\n\t}\n}\nfor (const f in flaws) {\n\t// If a weapon doesn't have a flaw, don't put it in the dialog\n\tif (!targetedItem.system.properties.flaws[f]) {\n\t\tdelete flaws[f];\n\t}\n}\n\nconst added = await ItemDialog.create(\n\tItemDialog.objectToArray(qualities),\n\t\"unlimited\",\n\t\"Choose Qualities to add\",\n);\nlet removed = [];\nif (!foundry.utils.isEmpty(flaws)) {\n\tremoved = await ItemDialog.create(\n\t\tItemDialog.objectToArray(flaws),\n\t\t\"unlimited\",\n\t\t\"Choose Flaws to remove\",\n\t);\n}\n\nthis.effect.updateSource({\n\t\"flags.wfrp4e.propertiesChanged\": {\n\t\tadded: added.map((i) => i.id),\n\t\tremoved: removed.map((i) => i.id),\n\t},\n});\n","a8RabrnJ08O07rDX":"if (args.totalWoundLoss > 0) {\n\t// I'm assuming the endurance test specified is for the end-round check\n\tawait args.actor.addCondition(\"poisoned\", 2);\n}\n","aAvJrAKLzXhS9qN6":"return args.item?.name === game.i18n.localize(\"NAME.Climb\")\n","abLWYtNTu1UVDQAs":"if (\n\targs.opposedTest.result.hitloc.value === this.effect.flags.wfrp4e.location\n) {\n\t// e.g. 'head', rLeg, 'lArm'\n\tthis.scriptMessage(\n\t\t`Gains a @Condition[Blinded] condition as their <strong>${this.item.name}</strong> was hit`,\n\t);\n\tthis.actor.addCondition(\"blinded\");\n}\n","abVIvJBzuskNzCQv":"const amount = this.effect.sourceTest.result.overcast.usage.other.current;\n\nconst sss = await fromUuid(\"Compendium.wfrp4e-core.items.MGEPI4jNhymNIRVz\");\nconst strider = await fromUuid(\"Compendium.wfrp4e-core.items.1dUizIgLBgn4jICC\");\n\nconst items = Array(amount).fill(sss).concat(Array(amount).fill(strider));\n\nthis.actor.createEmbeddedDocuments(\"Item\", items, {\n\tfromEffect: this.effect.id,\n});\n","ACgKpKrEEHoNGG0h":"return !args.skill?.name.includes(\"Концентрация\") && args.type !== \"channelling\"\n","ACtDCTLZXmd5uXjX":"let halve;\nif (args.opposedTest.attackerTest.item?.type !== \"spell\") {\n\thalve = await Dialog.confirm({\n\t\ttitle: this.effect.name,\n\t\tcontent:\n\t\t\t\"Halve Damage? (Halves all damage other than fire, cold, and magic)\",\n\t});\n} else {\n\thalve = false;\n}\n\nif (halve) {\n\targs.totalWoundLoss /= 2;\n\targs.modifiers.other.push({\n\t\tlabel: this.effect.name,\n\t\tdetails: \"Halved\",\n\t\tvalue: \"× 0.5\",\n\t});\n}\n","aCVtaW8ag1WibcAr":"args.attacker.modifyWounds(1);\nthis.script.scriptMessage(\n\t`<strong>${args.attacker.prototypeToken.name}</strong> recovers 1 Wound.`,\n);\n","Adgs6Zs0FdefO6qx":"if (args.test.options.pilot && args.test.result.reversed) {\n\targs.test.data.result.SL = `+${Math.min(\n\t\t1,\n\t\tNumber(args.test.data.result.SL),\n\t)}`;\n\targs.test.result.other.push(`<b>${this.effect.name}</b>: SL limited to 1`);\n}\n","afdmOvPGMpEdZvCb":"return (args.skill?.name === game.i18n.localize(\"NAME.Perception\") || args.characteristic === \"fel\")\n","AGD7zCyV4zruvnWu":"return args.type !== \"cast\" || ![\"death\", \"necromancy\", \"life\", \"light\", \"heavens\"].includes(args.spell?.system.lore.value)\n","agsm3NI1NDtHRG4y":"this.actor\n\t.getActiveTokens()\n\t.forEach((t) =>\n\t\tt.document.update(\n\t\t\t{ texture: this.actor.prototypeToken.texture },\n\t\t\t{ animate: false },\n\t\t),\n\t);\n","Ah2wyywkL8hjJNXM":"args.options.healWounds = true;\n","ahbA7o5G9dzMFl76":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.SfUUdOGjdYpr3KSR\",\n);\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","AHZ8f7dfN8jNsYk6":"const token = this.actor.getActiveTokens()[0];\nconst target = args.data.targets[0];\nconst weapon = args.weapon;\n\nif (!target || !token) {\n\treturn;\n}\n\nconst distance = canvas.grid.measureDistances(\n\t[\n\t\t{\n\t\t\tray: new Ray(\n\t\t\t\t{ x: token.center.x, y: token.center.y },\n\t\t\t\t{ x: target.center.x, y: target.center.y },\n\t\t\t),\n\t\t},\n\t],\n\t{ gridSpaces: true },\n)[0];\nlet currentBand;\n\nfor (const band in weapon.range.bands) {\n\tif (\n\t\tdistance >= weapon.range.bands[band].range[0] &&\n\t\tdistance <= weapon.range.bands[band].range[1]\n\t) {\n\t\tcurrentBand = band;\n\t\tbreak;\n\t}\n}\n\nreturn [game.i18n.localize(\"Long Range\"), game.i18n.localize(\"Extreme\")].includes(currentBand)\n","AI6bFrjWk4NH9FBd":"this.actor.addCondition(\n\t\"entangled\",\n\tthis.effect.sourceTest.result.overcast.usage.other.current,\n);\n","aIYUsBIDKWJ3CEtj":"this.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(20, { suppressMsg: true }),\n);\n","AjC4dsiuhVCOnRGI":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.MVI0lXcg6vvtooAF\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","alJgj25l3239h2SW":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.hTgrGkWnmIR4xhVe\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","ALuPRzf85dmkEfLo":"return args.skill?.name === game.i18n.localize(\"NAME.Intuition\");\n","aMHGjWyn6BXCI4pw":"const frenzy = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.hXcfygzujgyMN1uI\",\n);\nthis.actor.createEmbeddedDocuments(\"Item\", [frenzy], {\n\tfromEffect: this.effect.id,\n});\n","AMI2wDJqsIZsoq1e":"if (\n\targs.opposedTest.result.differenceSL >= 0 &&\n\targs.opposedTest.result.differenceSL <= 2 &&\n\targs.opposedTest.result.winner === \"attacker\"\n) {\n\tthis.script.scriptMessage(\n\t\t`Emits a cloud of foul-smelling blackpowder. Enable the <strong>Fellowship Penalty</strong> Active Effect on @UUID[${this.actor.uuid}].`,\n\t\t{ blind: true, whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n","AmOMCUaWLJ2iJAt5":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.IFKWu98qmWpaSfUi\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","AmpDbT0BkDHeaRzf":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.pTorrE0l3VybAbtn\",\n);\nconst data = item.toObject();\ndata.system.specification.value = 1;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","AMxezwtYnWCF6Oza":"return args.skill?.name === \"Ranged (Blackpowder)\"\n","ApaLcUhuty3EzJoP":"const fortunePoints =\n\tthis.effect.sourceTest.result.overcast.usage.other.current;\nconst current = this.actor.status.fortune.value;\n\nthis.actor.update({ \"system.status.fortune.value\": fortunePoints + current });\n\nthis.script.scriptMessage(\n\t`<b>${\n\t\tthis.actor.prototypeToken.name\n\t}</b> fortune points increased from ${current} to ${fortunePoints + current}`,\n);\n","AqHLHp4kH6KULk3e":"if (this.item.system.quantity.value) {\n\tthis.item.system.reduceQuantity();\n\tconst actor = Array.from(game.user.targets)[0]?.actor || this.actor;\n\tconst effectData = this.item.effects.contents[0].convertToApplied();\n\teffectData.flags.wfrp4e.sourceItem = this.item.uuid;\n\tactor.applyEffect({ effectData: [effectData] });\n} else {\n\tthis.script.scriptNotification(\"None left!\", \"error\");\n}\n","AS7CstSosuCrwZ19":"this.actor.getActiveTokens().forEach((t) =>\n\tt.document.update({\n\t\tlight: {\n\t\t\tdim: 20,\n\t\t\tbright: 10,\n\t\t\tangle: 360,\n\t\t\talpha: 0.4,\n\t\t\tanimation: {\n\t\t\t\tspeed: 3,\n\t\t\t\tintensity: 3,\n\t\t\t\ttype: \"torch\",\n\t\t\t},\n\t\t\tcolor: \"#ffcc66\",\n\t\t},\n\t}),\n);\n","AV2Kj6jgmIc45zKi":"return args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\"));\n","AVROqafFhKjN6TPR":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.DrNUTPeodEgpWTnT\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","AWgZnm9xLyIWCDnp":"const robust = args.modifiers.other.find((i) => i.key === \"robust\");\nif (robust) {\n\trobust.value--;\n} else {\n\targs.modifiers.other.push({\n\t\tkey: \"robust\",\n\t\tlabel: this.effect.name,\n\t\tvalue: -1,\n\t});\n}\n","ayIbw2Vw2t9xg33P":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.EaqlLRQigwnsEAXX\");\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","AyNb5sj6FD2Z3Q5T":"this.actor.addCondition(\"dead\");\nthis.actor.setWounds(0);\nthis.script.scriptMessage(await game.wfrp4e.tables.formatChatRoll(\"scatter\"));\n","AyS3iLljxHRKsHg4":"const broken = this.actor.hasCondition(\"broken\");\nconst fatigued = this.actor.hasCondition(\"fatigued\");\nawait broken?.delete();\nawait fatigued?.delete();\nconst drilled = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.J9MK0AIaTbvd5oF6\",\n);\nconst fearless = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.8pVzgPkgWpTJvfhG\",\n);\nconst stout = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.IogM5gnsoOX63w7j\",\n);\nthis.actor.createEmbeddedDocuments(\"Item\", [drilled, fearless, stout], {\n\tfromEffect: this.effect.id,\n});\n","AZGXrZOQ4EzjxRL9":"return true;\n","B063u4vrbvzMaCQt":"args.item.system.flaws.value = args.item.system.flaws.value.concat([\n\t{ name: \"bulky\" },\n\t{ name: \"unreliable\" },\n]);\n","B1xgRS00RcTIZLnO":"return [\"cast\", \"channelling\"].includes(args.type) && this.actor.hasCondition(\"fatigued\")\n","b1zMefdoZYtzCm7i":"return [\"roll\", \"none\"].includes(args.fields.hitLocation) || args.item?.attackType !== \"ranged\"\n","b2Kb4IuD22RhKhR0":"const actor = Array.from(game.user.targets)[0]?.actor;\n\nif (actor) {\n\tactor.applyEffect({\n\t\teffectUuids: this.effect.sourceItem.effects.contents[0].uuid,\n\t});\n} else {\n\tthis.script.scriptNotification(\"No target!\", \"error\");\n}\n","b2WaqRna5CFXmbDG":"args.options.stag = true;\n","b5DfAWtpV1x2R8If":"this.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(this.effect.sourceTest.result.damage, {\n\t\tsuppressMsg: true,\n\t}),\n);\n","b5prg1FLjCAvBjLy":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.zyocWSzEZEC826NS\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nthis.actor.createEmbeddedDocuments(\"Item\", [data]);\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tfields: { difficulty: \"hard\" },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tawait this.actor.addCondition(\"prone\");\n\tawait this.actor.addCondition(\"stunned\");\n}\n","B6ZbY3bxTPg6nCng":"return args.skill?.name === game.i18n.localize(\"NAME.Bribery\");\n","B87v1twc65qyvUWi":"args.fields.modifier += 10 * this.effect.conditionValue;\n","B950b0XnIUYCdVwu":"const test = await args.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n\nif (test.succeeded) {\n\tif (args.totalWoundLoss <= Number.parseInt(test.result.SL)) {\n\t\targs.abort = `<strong>${this.effect.name}</strong>: Attack deflected and reflected`;\n\t}\n\targs.modifiers.other.push({\n\t\tlabel: this.effect.name,\n\t\tvalue: -1 * Number.parseInt(test.result.SL),\n\t});\n}\n","BAOv7moTxsKlT3JS":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tfields: { difficulty: \"easy\" },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"broken\");\n}\n","bBdXzBmxgFFBwMMS":"if (\n\targs.opposedTest.attackerTest.item?.isRanged &&\n\targs.applyAP &&\n\t!args.sureShot\n) {\n\tif (args.modifiers.ap.value) {\n\t\targs.sureShot = true;\n\t\targs.modifiers.ap.details.push(\n\t\t\t`${this.effect.name} (Ignore ${this.item.Advances})`,\n\t\t);\n\t\targs.modifiers.ap.ignored += this.item.Advances;\n\t}\n}\n","BcXTujburrHpjpwa":"args.fields.slBonus -= 3;\n","BD7bVTU2pVoRSRBe":"const symptoms = {\n\tconvulsions: \"Convulsions\",\n\tcoughsandsneezes: \"Coughs and Sneezes\",\n\tfever: \"Fever\",\n\tflux: \"Flux\",\n\tnausea: \"Nausea\",\n};\n\nconst roll = await new Roll(\n\t`max(0, 1d10 - ${this.actor.characteristics.wp.bonus})`,\n).roll();\nroll.toMessage(this.script.getChatData());\n\nconst choices = await ItemDialog.create(\n\tItemDialog.objectToArray(symptoms),\n\troll.total,\n\t\"Choose Symptoms\",\n);\n\nif (choices.length) {\n\tconst symptomEffects = duplicate(game.wfrp4e.config.symptomEffects);\n\tconst added = [];\n\tfor (const choice of choices) {\n\t\tconst symptom = symptomEffects[choice.id];\n\t\tsymptom.origin = this.effect.uuid;\n\t\tadded.push(symptom);\n\t}\n\tthis.actor.createEmbeddedDocuments(\"ActiveEffect\", added);\n} else {\n\tthis.effect.delete();\n}\n","Be5rdfnZorbILhpC":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\");\nconst data = item.toObject();\ndata.system.specification.value = 3 - this.actor.characteristics.s.bonus;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","bEVlJOOA1kLlzpWx":"const characteristics = {\n\tws: 10,\n\tbs: 0,\n\ts: 5,\n\tt: 15,\n\ti: 20,\n\tag: 15,\n\tdex: 20,\n\tint: 35,\n\twp: 30,\n\tfel: 10,\n};\nconst skills = [\n\t\"Концентрация\",\n\t\"Хладнокровие\",\n\t\"Уклонение\",\n\t\"Артистизм (сказительство)\",\n\t\"Intuition\",\n\t\"Language (Magick)\",\n\t\"Leadership\",\n\t\"Lore (Magic)\",\n\t\"Lore (Theology)\",\n\t\"Perception\",\n];\nconst skillAdvancements = [20, 25, 20, 25, 30, 25, 15, 20, 10, 30];\nconst talents = [\n\t\"Aethyric Attunement\",\n\t\"Arcane Magic\",\n\t\"Instinctive Diction\",\n\t\"Instinctive Diction\",\n\t\"Luck\",\n\t\"Magical Sense\",\n\t\"Menacing\",\n\t\"Petty Magic\",\n\t\"Second Sight\",\n\t\"Sixth Sense\",\n];\nconst trappings = [\n\t\"Hand Weapon\",\n\t\"Quarterstaff\",\n\t\"Ritual Dress incorporating many ingredients and fetishes\",\n];\nconst items = [];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\titems.push({\n\t\t\tname: trapping,\n\t\t\ttype: \"trapping\",\n\t\t\t\"system.trappingType.value\": \"clothingAccessories\",\n\t\t});\n\t\t//ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\n\t}\n}\n\nupdateObj.name = updateObj.name += ` ${this.effect.name}`;\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","Bexspr5viPhHiFmU":"const fatigued = this.actor.hasCondition(\"fatigued\");\nconst value = fatigued?.conditionValue || 0;\nargs.fields.modifier += value * 10;\n","BHbFqhJPzZI2txLs":"const lore = this.effect.name.split(\"(\")[1].split(\")\")[0].toLowerCase();\n\n// If channelling corresponding lore\nif (args.type === \"channelling\" && args.spell.system.lore.value === lore)\n\targs.prefillModifiers.slBonus += 2;\n// If channelling or casting different lore\nelse if (\n\targs.spell.system.lore.value !== lore &&\n\targs.spell.system.lore.value !== \"petty\"\n)\n\targs.prefillModifiers.slBonus -= 1;\n","bhXUW7IJtEaUGAoV":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"prone\");\n}\n","Bj6bxItlgtI2sXVN":"const roll = await new Roll(\"1d10\").roll();\nroll.toMessage(this.script.getChatData());\nargs.totalWoundLoss = Math.max(0, args.totalWoundLoss - roll.total);\nargs.modifiers.other.push({ label: this.effect.name, value: -1 * roll.total });\nthis.effect.update({ disabled: true });\n","bLkt8VpTTPoTxW0W":"if (\n\targs.opposedTest.result.hitloc.value === \"body\" &&\n\targs.totalWoundLoss > 0\n) {\n\targs.actor.addCondition(\"bleeding\", 1);\n\tthis.script.scriptNotification(\"Added Bleeding\");\n}\n","bMEFHPCei2evnZZw":"// Victims that take at least 1 Wound from a Fell Dagger\n// immediately take a Poisoned Condition\n// resisted with a Difficult (-10) Endurance Test.\n\n// TODO: Add Venom strength to message\n\nif (args.totalWoundLoss > 0) {\n\targs.actor.addCondition(\"poisoned\");\n\tthis.script.scriptMessage(\n\t\t`\n      <strong>${this.effect.name}</strong>:<br>\n      <strong>${args.actor.name}</strong> has been given a @Condition[Poisoned] Condition, which can be resisted with a <strong>Difficult (-10) Endurance</strong> Test.`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n","bQyVajMN1ETwlzvM":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.aE3pyW20Orvdjzj0\");\nconst data = item.toObject();\nconst target = await game.wfrp4e.tables.rollTable(\"fixations\");\nif (target) {\n\tdata.system.specification.value = target.result;\n\tthis.script.scriptNotification(target.result);\n}\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","brNRqfpPqD2Ki0cM":"args.prefillModifiers.modifier -= 10;\n","bRtZH0xRh8dgqMeW":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.BqPZn6q3VHn9HUrW\");\nconst data = item.toObject();\ndata.system.specification.value = 7 - this.actor.characteristics.s.bonus;\ndata.name = item.name.replace(\"(Feature)\", \"\");\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","btPrQkGRKUkhNe3N":"return args.skill?.name === \"Trade (Apothecary)\"\n","BtyFhdGMKiMamGhM":"const test = await args.actor.setupSkill(\"Уклонение\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nlet damage = Number.parseInt(this.effect.sourceTest.result.SL);\n\nif (test.succeded) {\n\tdamage = damage + 8 - Number.parseInt(test.result.SL);\n} else {\n\tdamage = damage + 10;\n\tthis.actor.addCondition(\"entangled\", 3);\n}\nthis.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(damage, { loc: \"roll\", suppressMsg: true }),\n);\n","Bv3431tnG3VKaTJr":"if (args.test.result.castOutcome === \"success\") {\n\targs.test.result.other.push(`@Fear[2,${this.actor.name}]`);\n}\n","bWr8leucbWslBCYG":"return args.characteristic !== \"s\"\n","bwtQOSWn120NICkf":"const test = await this.actor.setupCharacteristic(\"ag\", {\n\tfields: { difficulty: \"hard\" },\n});\nawait test.roll();\n\nif (test.failed) {\n\tawait this.actor.addCondition(\"bleeding\");\n\tawait this.actor.addCondition(\"entangled\");\n}\n","bwx9wuEOJPF7btD1":"return args.skill?.name !== game.i18n.localize(\"NAME.Navigation\");\n","ByhEa1BxQOyrOmqg":"return args.item?.attackType === 'melee'\n","bzaoWcieMFaU5B5l":"return !this.actor.flags.useless[this.item.system.location.key] || [\"fel\", \"wp\", \"int\", \"t\"].includes(args.characteristic)\n","BzDLuxBNw1QNIacg":"if (args.item.type === \"skill\") args.item.system.advances.value = 0;\n\nif (args.item.type === \"talent\") args.item.system.tests.value = \"\";\n\nif (args.item.type === \"weapon\") args.item.system.qualities.value = [];\n","c31hjp7k0hlpdGBC":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.yRhhOlt18COq4e1q\",\n);\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","c3KA1knL2NYNUEww":"return args.skill?.name !== game.i18n.localize(\"NAME.Evaluate\");\n","Ca1fXHTA1e2QLx0D":"args.fields.modifier += 50;\n","cAioHYtlxuOCwRLh":"const ablaze = Number(args.opposedTest.attackerTest.result.SL) + 1;\nargs.actor.addCondition(\"ablaze\", ablaze);\n","cApfxL7Ic0NKdoSr":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.rOV2s6PQBBrhpMOv\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","cBSy9CR5NZvcLRg8":"args.prefillModifiers.modifier += 0;\nargs.prefillModifiers.slBonus += 0;\nargs.prefillModifiers.successBonus += 0;\n","CCK1iIfPmB398ziT":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Athletics\"), {\n\tfields: { difficulty: \"difficult\" },\n\tskipTargets: true,\n\tappendTitle: \" - Walking\",\n});\ntest.roll();\n","CCwuu3bPLCpVGAmb":"const test = await this.actor.setupCharacteristic(\"wp\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n","CDASLC4fWKSGQKf9":"const blinded = this.actor.hasCondition(\"blinded\");\nif (blinded?.getFlag(\"wfrp4e\", \"flockOfDoom\")) {\n\tblinded.delete();\n}\n","cDBhmHn5kjgWBAlT":"const num = this.effect.sourceTest.result.overcast.usage.other.current || 1;\n\nthis.actor.addCondition(\"entangled\", num);\n","cEg09bnvZD6Ysnpc":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-archives2.items.anIlqJXFOIEzIOo1\",\n);\nconst data = item.toObject();\ndata.name = this.item.name;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","cgmA2N0MkjA7qIZy":"return args.type !== \"cast\" || args.item?.system.lore?.value !== \"shadow\"\n","ch5SD2XOQfcYo0X5":"if (args.sizeDiff <= -2 && args.opposedTest.attackerTest.result.critical)\n\targs.damageMultiplier = Math.abs(args.sizeDiff);\n\nconst sBonusDiff =\n\targs.opposedTest.defenderTest.actor.characteristics.t.bonus -\n\targs.opposedTest.attackerTest.actor.characteristics.s.bonus;\nconst weapon = args.opposedTest.attackerTest.item;\nif (sBonusDiff > 0 && weapon && weapon.damage.value.includes(\"SB\")) {\n\targs.damage += sBonusDiff;\n\targs.breakdown.other.push({ label: this.effect.name, value: sBonusDiff });\n}\n","CHnaBPHk6HdFS512":"const arm = await fromUuid(\"Compendium.wfrp4e-core.items.MnMZv7ZXoRqoH9dS\");\nconst leg = await fromUuid(\"Compendium.wfrp4e-core.items.k00PimCWkff11IA0\");\n\nconst choice = await ItemDialog.create([arm, leg], 1, \"Choose Limb\");\n\nthis.actor.createEmbeddedDocuments(\"Item\", choice, {\n\tfromEffect: this.effect.id,\n});\n","chUpiI3el8IO8MSs":"if (args.opposedTest.attackerTest.item?.name.includes(\"Bite\")) {\n\tconst woundsGained = args.totalWoundLoss;\n\tthis.script.scriptMessage(`Gains ${woundsGained} Wounds`, {\n\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t});\n\tthis.actor.modifyWounds(woundsGained);\n}\n","CiFeduksZJ6PRulx":"return args.skill?.name === \"Ride (Horse)\" || (args.options.dodge && this.actor.isMounted);\n","CIxZYkHggBQ6EsHP":"this.script.scriptNotification(\"Effect Used\");\nthis.effect.delete();\n","cJFDnq1HI4gXWcJo":"if (Number.isNaN(Number.parseInt(this.item.system.specification.value))) {\n\tconst value = await ValueDialog.create(\"Ward Value\", \"Enter the Ward value\");\n\tif (value) {\n\t\tthis.item.updateSource({ \"system.specification.value\": value });\n\t}\n}\n","Cjj4iLkdY1NaZRCi":"if (\n\targs.opposedTest.attackerTest.item?.isMelee ||\n\t(args.opposedTest.attackerTest.item &&\n\t\t!args.opposedTest.attackerTest.item.name.includes(\"Ranged\"))\n) {\n\tconst choice = await Dialog.wait({\n\t\ttitle: this.effect.name,\n\t\tcontent: `<p>Apply damage with <strong>${this.effect.name}</strong> to attacker?`,\n\t\tbuttons: {\n\t\t\tyes: {\n\t\t\t\tlabel: \"Yes\",\n\t\t\t\tcallback: () => {\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t},\n\t\t\tno: {\n\t\t\t\tlabel: \"No\",\n\t\t\t\tcallback: () => {\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\n\tif (choice) {\n\t\tthis.script.scriptMessage(\n\t\t\tawait args.attacker.applyBasicDamage(\n\t\t\t\tthis.actor.system.characteristics.wp.bonus,\n\t\t\t\t{\n\t\t\t\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP,\n\t\t\t\t\tsuppressMsg: true,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n}\n","cK1Jysfu5IMUUH0C":"if (!args.ward) {\n\targs.ward = this.effect.getFlag(\"wfrp4e\", \"ward\") || 0;\n\tif (args.wardRoll >= args.ward && args.ward > 3) {\n\t\tconst newWard = Math.max(3, args.ward - 1);\n\t\tthis.script.scriptMessage(`<strong>Ward</strong> improved to ${newWard}`);\n\t\tthis.effect.setFlag(\"wfrp4e\", \"ward\", newWard);\n\t}\n}\n","CkE8NZOhzPkuRrKJ":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.MnMZv7ZXoRqoH9dS\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nthis.actor.createEmbeddedDocuments(\"Item\", [data]);\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tfields: { difficulty: \"hard\" },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"unconscious\");\n}\n","CM43kvw5mIIE1OsB":"const key = this.item.system.location.key;\n\nlet lostFingers = this.actor.flags.useless[key] || 0;\n\nlostFingers += 1;\n\nthis.actor.flags.useless[key] = lostFingers;\n\nif (lostFingers >= 4) {\n\tthis.actor.flags.useless[`${key[0]}Arm`] = true;\n}\n","CMUFtmNA1kkD1ay7":"this.actor.getActiveTokens().forEach((t) =>\n\tt.document.update({\n\t\tlight: {\n\t\t\tdim: 30,\n\t\t\tbright: 20,\n\t\t\tangle: 90,\n\t\t\talpha: 0.6,\n\t\t\tanimation: {\n\t\t\t\tspeed: 3,\n\t\t\t\tintensity: 3,\n\t\t\t\ttype: \"torch\",\n\t\t\t},\n\t\t\tcolor: \"#ffcc66\",\n\t\t},\n\t}),\n);\n","CoImIH9OCMx9DfQZ":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.nbhn2wX35b7Jrcbg\");\nconst data = item.toObject();\ndata.system.location.value = \"Jaw\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","cOuukVo8WakDZIUj":"args.prefillModifiers.slBonus += 1;\n","CPQoK7NjzOwVTFXS":"for (const effect of this.actor.effects.filter((e) => e.isCondition)) {\n\tif (effect.isCondition) {\n\t\teffect.delete();\n\t}\n}\n","csLKDJKZaUK9vwLT":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.7rBhIRo96Mydo0Cv\");\nconst data = item.toObject();\ndata.system.location.value = \"Back\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","ct6WGaRMfrcnHhyv":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.pTorrE0l3VybAbtn\",\n);\nconst data = item.toObject();\ndata.system.specification.value = 2;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","cUFCL02JoaZObRcX":"const sl = this.effect.sourceTest.result.slOver;\n\nthis.actor.system.characteristics.s.modifier += sl * 10;\nthis.actor.system.characteristics.s.calculationBonusModifier -= sl;\n","cUnbADgOQ4fMKgrH":"let group;\nconst item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.5hH73j2NgPdsLCZN\",\n);\nconst data = item.toObject();\n\nif (this.item.name.includes(\"(\")) {\n\tgroup = this.item.parenthesesText;\n} else {\n\tgroup = await ValueDialog.create(\"Enter Hatred Group\", \"Hatred Group\");\n\n\tthis.item.updateSource({\n\t\tname: `${this.item.name} (${group})`,\n\t\t\"system.tests.value\": this.item.system.tests.value.replace(\"Group\", group),\n\t});\n\tthis.effect.updateSource({ name: `${this.effect.name} (${group})` });\n}\n\ndata.name = data.name.replace(\"Target\", group);\nawait this.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","cuqCtQsfLBBAGjnu":"args.fields.slBonus -= Number(this.item.specification.value) || 0;\n","cV9JiAgUPOeUHKnS":"args.fields.successBonus++;\nif (args.skill?.name !== game.i18n.localize(\"NAME.SleightOfHand\")) {\n\targs.fields.modifier += 10;\n}\n","CW5Vlr57OaMkKJ8Q":"if (this.actor.system.status.advantage.value >= 3) {\n\tthis.actor.modifyAdvantage(-3);\n\tthis.script.scriptNotification(\"Advantage Subtracted\");\n} else {\n\treturn this.script.scriptNotification(\"Not enough Advantage!\", \"error\")\n}\n\nconst test = await this.actor.setupTrait(this.item);\nawait test.roll();\n","CWNGrg7se91RC95g":"if (args.totalWoundLoss > 0) {\n\targs.opposedTest.result.other.push(\n\t\t\"@Corruption[minor]{Moderate Exposure to Corruption}\",\n\t);\n\tthis.script.scriptMessage(\n\t\t`<strong>${this.effect.name}</strong>: \n      @Corruption[moderate]{Moderate Exposure to Corruption} <br/>\n      <strong>${args.actor.prototypeToken.name}</strong> must take an \n      <strong>Corruption (Moderate) Test</strong>`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n","cYPIXzl86a3LFsTE":"if (args.item.type === \"spell\") {\n\targs.item.cn.value -= 2;\n\tif (args.item.cn.value < 0) args.item.cn.value = 0;\n}\n","cysQDjlDzT8HdNeo":"args.prefillModifiers.slBonus += 1;\n","d29mu8vRt9AQUm0L":"this.actor.characteristics.i.value = Math.min(\n\tthis.actor.characteristics.i.value,\n\t10,\n);\nthis.actor.characteristics.i.bonus = 1;\n\nfor (const skill of this.actor.itemTypes.skill.filter(\n\t(i) => i.system.characteristic.value === \"i\",\n)) {\n\tskill.system.total.value = Math.min(skill.system.total.value, 10);\n}\n","D5XmzrUGFa1JN0cl":"args.prefillModifiers.modifier += 10;\n","d6mVm08o8SeklAcW":"this.actor.system.status.ward.value = 9;\n","d9iU08yvqcffF026":"return args.weapon.system.usesHands.includes(this.effect.getFlag(\"wfrp4e\", \"location\"))\n","dAMtbn3uQwF8KpKU":"return args.skill?.name !== game.i18n.localize(\"NAME.Charm\") && args.skill?.name !== game.i18n.localize(\"NAME.Gossip\");\n","DANLE5HxrkTNelhl":"args.wounds += 4;\n","DBafsY1HrclJRTtA":"return args.type !== \"cast\"\n","dbOSvpgcPjsc2uvq":"const menacing = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.Item.0hn6UaKq8CoZP2zD\")\n).toObject();\nconst sense = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.Item.9h82z72XGo9tfgQS\")\n).toObject();\n\nsense.name += \" (Sight)\";\nsense.system.tests.value = sense.system.tests.value.replace(\"Sense\", \"Sight\");\n\nthis.actor.createEmbeddedDocuments(\"Item\", [menacing, sense], {\n\tfromEffect: this.effect.id,\n});\n","dbYjr4oG67Z880To":"if (args.test.isFumble) {\n\targs.test.result.other.push(\"@Table[warpfire-thrower-fumble]\");\n}\n","DcSJNRBXE9ZBBY7T":"this.actor.addCondition(\n\t\"blinded\",\n\tMath.max(0, this.effect.sourceTest.result.SL),\n);\n","dcwY8dCd3PNCEzk6":"const current = this.actor.status.fate.value;\n\nthis.actor.update({ \"system.status.fate.value\": current + 1 });\n\nthis.script.scriptMessage(\n\t`<b>${\n\t\tthis.actor.prototypeToken.name\n\t}</b> fate points increased from ${current} to ${current + 1}`,\n);\n","dfEgat3jz4EtWszH":"return args.skill?.name === \"Stealth (Urban)\"\n","dfnCK8jCPXNLM7Gh":"const aoeDamage = this.effect.sourceTest.result.damage - 5; // Easily handle magic missile damage by just subtracting 5 from the item's (which has +10 base)\n\nthis.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(aoeDamage, {\n\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP,\n\t\tsuppressMsg: true,\n\t}),\n);\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Dodge\"), {\n\tskipTargets: true,\n\tappendTitle: \" - Ablaze\",\n});\n\nawait test.roll();\n\nif (!test.succeeded) {\n\tthis.actor.addCondition(\"ablaze\");\n}\n","DHxUKY9LMyifFgCi":"return args.skill?.name === \"Trade (Apothecary)\" || args.skill?.name === \"Trade (Alchemist)\"\n","DhZqJso1JWYtGrKk":"this.actor.addCondition(\"ablaze\");\nconst damage =\n\tthis.effect.sourceTest.result.damage +\n\tthis.effect.sourceTest.result.additionalDamage;\nthis.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(damage, {\n\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\t\tsuppressMsg: true,\n\t}),\n);\n","dIxYt421K010eogY":"let modifier = 0;\nif (this.effect.name.includes(\"Moderate\")) modifier = -20;\nelse modifier = -10;\nargs.fields.modifier += modifier;\n","dk02qSJfJaIo3Geh":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.EO05HX7jql0g605A\");\nconst data = item.toObject();\ndata.system.specification.value = this.actor.characteristics.ag.value;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","dkiNmwFXztIVbuxg":"const currentCareer = this.actor.system.currentCareer;\n\nif (\n\t!currentCareer ||\n\tcurrentCareer.system.talents.includes(game.i18n.localize(\"NAME.Frenzy\"))\n) {\n\treturn\n}\n\ncurrentCareer.system.talents.push(game.i18n.localize(\"NAME.Frenzy\"));\n","dkY7WRYjFVh8GB0m":"return ['ws', 'bs', 'ag'].includes(args.characteristic)\n","DL9vYNft9aXdV2aW":"let tooth = await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\");\ntooth = tooth.toObject();\ntooth.system.specification.value = 3;\ntooth.system.qualities.value = [{ name: \"magical\" }];\n\nlet claw = await fromUuid(\"Compendium.wfrp4e-core.items.AtpAudHA4ybXVlWM\");\nclaw = claw.toObject();\nclaw.system.specification.value = 4;\nclaw.system.qualities.value = [{ name: \"magical\" }];\nclaw.name = \"Claw\";\n\nthis.actor.createEmbeddedDocuments(\"Item\", [tooth, claw], {\n\tfromEffect: this.effect.id,\n});\n","dM449AU0FQRnOc3l":"if (args.opposedTest.result.hitloc.value === \"head\") {\n\targs.abort = \"Missed - Headless\";\n}\n","dM8FbRH2V8CpOkXw":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.QluSTTTq3viHJJUh\");\nconst data = item.toObject();\ndata.system.location.value = \"Ribs\";\nawait this.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","DmbWR9s5I8LHBwxB":"const column = await ValueDialog.create(\n\t\"Select the column to roll on to determine Beast Head\",\n\t\"Select Column\",\n\t\"\",\n\t[\"Undivided\", \"Khorne\", \"Nurgle\", \"Slaanesh\", \"Tzeentch\"],\n);\n\nif (column) {\n\tconst result = await game.wfrp4e.tables.rollTable(\"beasthead\", {}, column);\n\tthis.script.scriptMessage(\n\t\t`<strong>${result.title}</strong><br>${result.result}`,\n\t);\n\tconst uuid = `Compendium.${result.object.documentCollection}.${result.object.documentId}`;\n\tconst item = await fromUuid(uuid);\n\tif (item) {\n\t\tthis.actor.createEmbeddedDocuments(\"Item\", [item]);\n\t\tthis.item.delete();\n\t}\n}\n","DMQ0taEpBUJU5njV":"args.actor.status.fortune.value = 0;\n","DpdSEHM6NMN1ey6h":"if (Number.parseInt(this.item.system.specification.value) > 0) {\n\tthis.actor.system.status.ward.value = Number.parseInt(\n\t\tthis.item.system.specification.value,\n\t);\n}\n","DqJFo74trI916qXN":"const fatigued = args.actor.hasCondition(\"fatigued\");\nif (fatigued)\n\tsetProperty(\n\t\tfatigued,\n\t\t\"flags.wfrp4e.scriptData\",\n\t\tgetProperty(fatigued, \"flags.wfrp4e.scriptData\").filter(\n\t\t\t(s) => s.trigger !== \"dialog\",\n\t\t),\n\t);\n","dqvHDMlcitLx1pUx":"this.actor.system.details.move.value /= 2;\n","DsE6rTSzxEn6uWMz":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"average\" },\n});\nawait test.roll();\nif (test.failed) {\n\tawait this.actor.addCondition(\"blinded\");\n\tawait this.actor.addCondition(\"fatigued\");\n}\n","dSmRhZ6o1bUcOSF9":"return args.skill?.name !== game.i18n.localize(\"NAME.Leadership\");\n","dt85W8pzZ09w1QLi":"if (this.actor.sameSideAs(this.effect.sourceActor)) args.fields.slBonus += 2;\nelse args.fields.slBonus -= 2;\n","dtFvpY96RPzNnphq":"return !(args.skill?.name.includes(\"Melee (Basic)\") || (args.type === \"weapon\" && args.item?.system.weaponGroup.value === \"basic\"))\n","DTiHS6RfwhF4THbf":"return args.skill?.name !== game.i18n.localize(\"NAME.Drive\") && !args.skill?.name.includes(game.i18n.localize(\"NAME.Ride\"));\n","DuM5l2Yb4bdvDeaG":"return args.skill?.name !== \"Athletics\"\n","DVlZGbiuMIHEQOnM":"if (this.actor.getFlag(\"wfrp4e\", \"isAttached\")) {\n\tconst roll = await new Roll(\"1d10\").roll();\n\tawait roll.toMessage(this.script.getChatData());\n\tif (roll.total === 9 || roll.total === 10) {\n\t\tthis.script.scriptMessage(\n\t\t\t`<strong>${\n\t\t\t\tthis.actor.name\n\t\t\t}</strong> attached to <strong>${this.actor.getFlag(\n\t\t\t\t\"wfrp4e\",\n\t\t\t\t\"isAttached\",\n\t\t\t)}</strong> gorges and falls off.`,\n\t\t);\n\t\tawait this.actor.unsetFlag(\"wfrp4e\", \"isAttached\");\n\t}\n}\n","DWBxvzfWGcG7PVNP":"const letter = this.item.system.location.key[0]; // \"l\" or \"r\";\n\nthis.item.updateSource({ \"system.location.key\": `${letter}Finger` });\n\n// We want the location to be Right or Left Hand, but the key to be rFinger or lFinger\n","dwSgcFxKN3S0hLJL":"return args.skill?.name !== \"Melee (Brawling)\" && args.item?.weaponGroup?.value !== \"brawling\"\n","dXGosSxdoYbET2O8":"await this.actor.addCondition(\"fatigued\");\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"));\n\nawait test.roll();\n\nif (!test.succeeded) {\n\tawait this.actor.addCondition(\"fatigued\");\n\tawait this.actor.addCondition(\"broken\");\n}\n","DxQnamsb2AuW0p2e":"return !args.skill?.name.includes(game.i18n.localize(\"NAME.Lore\"));\n","DyZ1jH88EAp1ueOK":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.GlShFJF2TpsNh1FX\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\ndata.system.location.value = data.system.location.value.replace(\"Arm\", \"Wrist\");\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","dZ4c5pKDqQV02aIK":"if (args.effect.conditionId === \"ablaze\") {\n\targs.data.formula += \" + parseInt(this.effect.sourceTest.result.SL)\";\n}\n","e0TuMgYuI7ZtGoQr":"args.applyAP = false;\n\nawait args.actor.addCondition(\"ablaze\", 2);\nawait args.actor.addCondition(\"prone\");\n","E1vUepgop09FF5wy":"if (this.actor.system.status.advantage.value === 0) {\n\treturn this.script.scriptNotification(\"Not enough Advantage!\", \"error\")\n}\n\nconst hatred = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.aE3pyW20Orvdjzj0\",\n);\nconst frenzy = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.yRhhOlt18COq4e1q\",\n);\n\nif (this.actor.system.status.advantage.value >= 3) {\n\tthis.script.scriptNotification(`Adding ${frenzy.name}`);\n\tthis.actor.setAdvantage(0);\n\tthis.actor.createEmbeddedDocuments(\"Item\", [frenzy]);\n} else if (this.actor.system.status.advantage.value >= 1) {\n\tconst data = hatred.toObject();\n\tdata.system.specification.value = \"Close Combat opponents\";\n\tthis.script.scriptNotification(`Adding ${hatred.name}`);\n\tthis.actor.setAdvantage(0);\n\tthis.actor.createEmbeddedDocuments(\"Item\", [data]);\n}\n","E1Xo4RVuN1YRRxg7":"return args.item?.attackType !== \"ranged\"\n","E2VfOVuju67qO3VL":"const blinded = this.actor.hasCondition(\"blinded\");\nif (blinded.getFlag(\"wfrp4e\", \"nightshroud\")) {\n\tblinded.delete();\n}\n","e34s1XxHckAWfwHt":"if (\n\targs.test.options.beatBlade &&\n\t(args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") ||\n\t\targs.test.result.roll <= args.test.target)\n) {\n\targs.test.result.other.push(\n\t\t`<b>${this.effect.name}</b>: Opponent loses ${\n\t\t\tNumber(args.test.result.SL) + 1\n\t\t} Advantage`,\n\t);\n}\n","E4CHDe1xfmcV3oGv":"return args.skill?.name === game.i18n.localize(\"NAME.Navigation\");\n","E6DMqfDeczqmVMFV":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"average\" },\n});\n\nawait test.roll();\n","E7D4bxz8gy4e1wL7":"if ([\"Stealth (Rural)\", \"Track\", \"Outdoor Survival\", \"Swim\", \"Perception\", \"Intuition\"].includes(args.item?.name))\n","e7IxnxePdXSy6L4E":"if (args.opposedTest.result.hitloc.value === \"head\") {\n\tthis.script.scriptMessage(\n\t\t`<b>${this.actor.prototypeToken.name}</b> receives a @Table[crithead]{Critical Wound} if one was not caused already.`,\n\t);\n}\n","EaSNOmXUxAkUHnm5":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb\");\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","eAtqyBd1HsDWuBuI":"this.actor.system.characteristics.fel.modifier -= Number.parseInt(\n\tthis.item.system.location.value || 1,\n);\n","Eay7GpDyfsEE40jT":"if (args.totalWoundLoss > 0) {\n\targs.actor.addCondition(\"ablaze\");\n}\n","eb69QPmNQEJXtk4l":"return args.characteristic !== \"bs\"\n","ebDQH0MdGAG02CHl":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.SYjWiKDzMS6CtROJ\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nif (this.item.system.location.key === \"rArm\") {\n\tdata.system.location.value = \"Right Hand\";\n\tdata.system.location.key = \"rHand\";\n} else if (this.item.system.location.key === \"lArm\") {\n\tdata.system.location.value = \"Left Hand\";\n\tdata.system.location.key = \"lHand\";\n}\nthis.actor.createEmbeddedDocuments(\"Item\", [data]);\n","ed7Sud9HM3uB2j6b":"ChatMessage.create(\n\t{\n\t\tcontent: \"<em>Yield or die!</em>\",\n\t\tspeaker: ChatMessage.getSpeaker({\n\t\t\ttoken: this.actor.getActiveTokens()[0]?.document,\n\t\t\tactor: this.actor,\n\t\t}),\n\t},\n\t{ chatBubble: true },\n);\nconst item = await fromUuid(\"Compendium.wfrp4e-core.items.pTorrE0l3VybAbtn\");\nconst data = item.toObject();\ndata.system.specification.value = 2;\nthis.script.scriptNotification(`Adding ${data.name}`);\nawait this.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\ngame.wfrp4e.utility.postFear(2, this.actor.prototypeToken.name);\n","EdTChmSouS0MSmk5":"const test = await this.actor.setupCharacteristic(\"wp\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.succeeded) {\n\tthis.script.scriptMessage(\"Can perform an Action or Move (choose one)\");\n} else {\n\tthis.script.scriptMessage(\"Cannot perform an Action or Move this round\");\n}\n","egDtqMxe3iekc6hv":"const trait = args.opposedTest.attackerTest.item;\nconst woundLossEffect = this.item.effects.get(\"7Amhi75wLv0PvGjd\");\nif (trait?.name.includes(\"Bite\") && woundLossEffect) {\n\targs.actor.applyEffect({ effectUuids: woundLossEffect.uuid });\n}\n","EGWF3LHav3e2zFL4":"return args.skill?.name.includes(game.i18n.localize(\"NAME.Ranged\")) || args.item?.isRanged || args.item?.name === game.i18n.localize(\"NAME.Charm\");\n","eh1J3s0s4A2AxoFp":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.8pVzgPkgWpTJvfhG\",\n);\nconst data = item.toObject();\ndata.name += \" (Enemy)\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","eHgk3HZ6eyLFTZ9o":"return !args.item?.system.magicMissile?.value && !args.item?.system.attackType\n","eHRv7f2BTtle6Y1K":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.sJ3yX1kvzu2hgNq5\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","EiLaZW4b4ypw5sLV":"// can't use Damage application type because that checks if wounds were dealt\nargs.actor.applyEffect({ effectUuids: this.item.effects.contents[0].uuid });\n","EJaBfqADqlo92Fx6":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.oGbDwnLOn3isPJpO\");\nconst data = item.toObject();\ndata.name += \" (To Be Determined)\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","EJObiSth3WdcJOXN":"if (\n\targs.test.characteristicKey === \"wp\" &&\n\targs.test.failed &&\n\targs.test.result.SL <= -3\n) {\n\tthis.script.scriptNotification(\"Adding Prone\");\n\tthis.actor.addCondition(\"prone\");\n}\n","ekjJQHyMbZT2vqdc":"let uses = this.item.getFlag(\"wfrp4e\", \"uses\") || 0;\nuses++;\nthis.script.scriptNotification(`Used ${uses} times`);\nthis.item.setFlag(\"wfrp4e\", \"uses\", uses);\nif (uses >= 3) {\n\tthis.effect.update({ \"flags.wfrp4e.applicationData.type\": \"other\" });\n\tthis.script.scriptNotification(\"Used up\");\n}\n","EKkdyp51Wf4csw2B":"return this.actor.statuses.has(\"frenzy\");\n","EmmG49pMOPHRwDzR":"const roll = Math.ceil(CONFIG.Dice.randomUniform() * 10);\nif (args.test.isFumble && roll === 1 && !args.test.result.misfire) {\n\targs.test.result.misfire = `${game.i18n.localize(\"Misfire\")} (Rolled 1)`;\n\targs.test.result.misfireDamage = eval(\n\t\tNumber.parseInt(args.test.result.roll.toString().split(\"\").pop()) +\n\t\t\targs.test.item.Damage,\n\t);\n} else if (args.test.isFumble && roll !== 1)\n\targs.test.result.other.push(`Misfire Roll: ${roll}`);\n","EmXwcuycEH8slEn5":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"hard\" },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"unconscious\");\n}\n","ENGmwaItRXO5s0XY":"await this.actor.modifyWounds(this.actor.system.characteristics.t.bonus * 3);\nthis.script.scriptMessage(\n\t`Heals ${this.actor.system.characteristics.t.bonus * 3} Wounds`,\n);\n\nthis.actor.hasCondition(\"bleeding\")?.delete();\nthis.actor.hasCondition(\"fatigued\")?.delete();\n","EpdMj9d9SYPeP44q":"return args.characteristic !== \"ag\"  && args.item?.id !== this.item?.id\n","ePPgxQOqL1Uhz2k9":"const choice1 = [\n\t{\n\t\ttype: \"skill\",\n\t\tname: \"Ranged (Bow)\",\n\t\tdiff: {\n\t\t\tsystem: {\n\t\t\t\tadvances: {\n\t\t\t\t\tvalue: 10,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\ttype: \"weapon\",\n\t\tname: \"Bow\",\n\t},\n\t{\n\t\ttype: \"ammunition\",\n\t\tname: \"Arrow\",\n\t},\n];\nconst choice2 = [];\n\nconst choice = await Dialog.wait({\n\ttitle: \"Option\",\n\tcontent: `<p>\n        Add Option?\n        </p>\n        <ol>\n        <li>Ranged (Bow) +10 and a Bow with 12 Arrows</li>\n        </ol> \n        `,\n\tbuttons: {\n\t\t1: {\n\t\t\tlabel: \"Yes\",\n\t\t\tcallback: () => {\n\t\t\t\treturn choice1;\n\t\t\t},\n\t\t},\n\t\t2: {\n\t\t\tlabel: \"No\",\n\t\t\tcallback: () => {\n\t\t\t\tchoice2;\n\t\t\t},\n\t\t},\n\t},\n});\n\nconst updateObj = this.actor.toObject();\nconst items = [];\nfor (const c of choice) {\n\tlet existing;\n\tif (c.type === \"skill\") {\n\t\texisting = updateObj.items.find(\n\t\t\t(i) => i.name === c.name && i.type === c.type,\n\t\t);\n\t\tif (existing && c.diff?.system?.advances?.value) {\n\t\t\texisting.system.advances.value += c.diff.system.advances.value;\n\t\t}\n\t}\n\n\tif (!existing) {\n\t\tlet item = await game.wfrp4e.utility.find(c.name, c.type);\n\t\tif (item) {\n\t\t\titem = item.toObject();\n\t\t\tequip(item);\n\t\t\titems.push(mergeObject(item, c.diff || {}));\n\t\t} else\n\t\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","EQ5dtGW5kQhtAb87":"await this.actor.addCondition(\"prone\");\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tfields: { difficulty: \"hard\" },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tawait this.actor.addCondition(\"stunned\");\n}\n","eqxE7nBO13yJS7hc":"const roll = await new Roll(\"1d10\").roll();\nroll.toMessage({\n\tflavor: \"Wounds Healed\",\n\tspeaker: { alias: this.actor.name },\n});\n\nthis.actor.modifyWounds(roll.total);\n\nthis.actor.hasCondition(\"bleeding\")?.delete();\n","ErgOwSiVnm9VLVHN":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.DrNUTPeodEgpWTnT\",\n);\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","ERxrWzSpw8qwxFVi":"this.script.scriptNotification(`Cannot enter ${this.effect.name}!`);\nthis.actor.addCondition(\"broken\");\n","esuLwq4g5T8k1kLT":"await args.actor.addCondition(\"ablaze\");\nawait args.actor.addCondition(\"prone\");\n","Et4tPHlrkueLqP3T":"if (args.item.type === \"skill\") args.item.system.modifier.value -= 10;\n","EU5j0hnDTG9Z6d1e":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"hard\" },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"stunned\", 2);\n}\n","EVBSHEC5nmmj2X41":"return args.skill?.name !== game.i18n.localize(\"NAME.Climb\")  && !args.skill?.name?.includes(game.i18n.localize(\"NAME.Stealth\"));\n","Ew3C2WmLCtc1KT46":"return args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\")) || args.item?.id === this.item?.id\n","EwD053Fyy46b59ZI":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.6l3jvIAvrKxt0lA9\",\n);\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","eWWLmA2xINR321aK":"args.item.system.qualities.value.push({ name: \"magical\" });\n","Eye6dranWpNsILjm":"if (this.actor.system.status.wounds.value <= 1) {\n\tthis.effect.delete();\n}\n","EYny6z5oTOhxGDfb":"args.fields.modifier -= 10;\n","ezGqDoC9hNRBnFTB":"const choices = await Promise.all([\n\tgame.wfrp4e.utility.findItemId(\"1zaqojk0Oq1m8vYv\"),\n\tgame.wfrp4e.utility.findItemId(\"zIuarD5mB0EF0ji0\"),\n]);\nlet items = await game.wfrp4e.apps.ItemDialog.create(\n\tchoices,\n\t1,\n\t\"Choose a Weapon\",\n);\nitems = items.map((i) => i.toObject());\n\nitems.forEach((i) => equip(i));\n\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.data.worn.value = true;\n\telse if (item.type === \"weapon\") item.data.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.data.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.data.worn = true;\n}\n","f062aa2BNClx08D6":"const test = await args.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tconst toughnessLost = Number.parseInt(this.effect.sourceTest.result.SL);\n\n\tconst currentModifier = this.actor.characteristics.t.modifier;\n\n\tawait this.actor.update({\n\t\t\"system.characteristics.t.modifier\": currentModifier - toughnessLost,\n\t});\n\tthis.script.scriptMessage(\n\t\t`<b>${this.actor.prototypeToken.name}</b> lost ${toughnessLost} Toughness`,\n\t);\n\tif (this.actor.system.characteristics.t.value <= 0) {\n\t\tthis.actor.addCondition(\"dead\");\n\t}\n}\n","f3rXusHh6VIpVPUl":"return !args.skill?.name?.includes(game.i18n.localize(\"NAME.Language\")) && args.type !== \"cast\"\n","F4aGsdzJ9SYcX57F":"if (args.equipped) {\n\tconst item = await fromUuid(\"Compendium.wfrp4e-core.items.HpFkVJ2lYPAWumUL\");\n\tconst data = item.toObject();\n\tthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\t\tfromEffect: this.effect.id,\n\t});\n} else {\n\tthis.effect.deleteCreatedItems();\n}\n","f4vvAGQ8OGoEbrgy":"const SL =\n\targs.opposedTest.attackerTest.result.SL -\n\targs.opposedTest.attackerTest.item.cn.value;\nlet difficulty = \"challenging\";\nif (SL >= 1) difficulty = \"difficult\";\nif (SL >= 2) difficulty = \"hard\";\nif (SL >= 3) difficulty = \"vhard\";\n\nconst test = await args.actor.setupCharacteristic(\"wp\", {\n\tfields: { difficulty },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tcontext: { failure: \"Gain a Stunned Condition\" },\n});\nawait test.roll();\nif (test.failed) {\n\targs.actor.addCondition(\"stunned\");\n}\n","f5Mp3kXwCFdPkW6N":"return args.skill?.name !== \"Артистизм (пение)\" && !args.skill?.name.includes(\"Язык\");\n","f6WnrJvoNkfoNN9Y":"return args.item?.attackType !== 'melee'\n","f7WZvYle9iqefRsh":"return args.weapon?.system?.attackType !== \"melee\"\n","f8cnfvGKJH3bYVGN":"return [\"s\", \"t\"].includes(args.characteristic)\n","FAB12eLcSCAOOQwk":"this.script.scirptMessage(await this.actor.applyBasicDamage(20, {suppressMsg: true});\n","FAf4iXj5LkdvukS2":"fromUuid(\"Compendium.wfrp4e-wom.items.0Xdm4r7l2EwC4fcg\").then((item) =>\n\tItem.create(item.toObject(), {\n\t\tfromEffect: this.effect.id,\n\t\tparent: this.actor,\n\t}),\n);\n","faRFSsrQylQRZFLk":"return args.bleedingHand || !args.weapon || !this.actor.hasCondition(\"bleeding\")\n","FciJSTq7dZsZIPgl":"if (args.equipped) {\n\tconst item = await fromUuid(\"Compendium.wfrp4e-core.items.SfUUdOGjdYpr3KSR\");\n\tconst data = item.toObject();\n\tthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\t\tfromEffect: this.effect.id,\n\t});\n} else {\n\tthis.effect.deleteCreatedItems();\n}\n","fcY3pa72dELnOFXV":"return !args.options.reload\n","fEFfHFeJxkR0aIJK":"if (\n\targs.opposedTest.result.differenceSL >= 0 &&\n\targs.opposedTest.result.differenceSL <= 3 &&\n\targs.opposedTest.result.winner === \"attacker\"\n) {\n\tthis.script.scriptMessage(\n\t\t\"Everyone within 20 feet loses 1 Wound and makes a <strong>Difficult (-10) Endurance</strong> or gains @Condition[Deafened]\",\n\t\t{ blind: true, whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n","feMPZhhFeXRtKdKY":"if (this.item.system.quantity.value) {\n\tthis.item.system.reduceQuantity();\n\tconst actor = Array.from(game.user.targets)[0]?.actor || this.actor;\n\tactor.applyEffect({ effectUuids: this.item.effects.contents[0]?.uuid });\n} else {\n\tthis.script.scriptNotification(\"None left!\", \"error\");\n}\n","fEyKQqCjDwml3DXO":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.M8XyRs9DN12XsFTQ\");\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","fFGuTi0HLjwneMcJ":"return args.item?.system.isRanged\n","FfTqCPxCoxwGDTQs":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.wMwSRDmgiF2IdCJr\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","ffvcCEazZBinHlUX":"args.update({ texture: { tint: \"#FFD700\" } });\n","FiD3mvWIBHNNIuO9":"if (args.opposedTest.result.hitloc.value === \"body\") {\n\tif ((await new Roll(\"1d2\").roll()).total === 1) {\n\t\targs.opposedTest.result.hitloc.value = \"head\";\n\t\tthis.script.scriptMessage(\"Hit location changed to Head\");\n\t}\n}\n","fiF9sM5UpcHMYa33":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.vMYEkrWj0ip6ZOdv\");\nconst data = item.toObject();\ndata.name += \" (Poison, Disease, Chaos)\";\nthis.actor.createEmbeddedDocuments(\n\t\"Item\",\n\tArray(this.effect.sourceTest.result.overcast.usage.other.current).fill(data),\n\t{ fromEffect: this.effect.id },\n);\n","fIUxKZMWJ8HMPmH9":"return [\"wp\", \"ag\", \"i\", \"int\"].includes(args.characteristic)\n","fkFmNcesqqNTMhVn":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.2iult41Jehz0F1O8\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nawait this.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","FkTwk8hfHpRLbAp2":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"prone\");\n}\n","fKzlu6fFE2th9uIJ":"return args.item?.name === game.i18n.localize(\"NAME.ConsumeAlcohol\")\n","fl762icfKrt9ear2":"this.actor.removeCondition(\n\t\"broken\",\n\tNumber.parseInt(this.effect.sourceTest.result.SL) + 1,\n);\n","FMA16PvoObBV8vDl":"let item = await fromUuid(\"Compendium.wfrp4e-core.items.EO05HX7jql0g605A\");\nitem = item.toObject();\nitem.system.specification.value = 20;\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\nthis.script.scriptNotification(`${item.name} added`);\n","FmLx9pwOkzqqU7Ph":"return args.skill?.name === game.i18n.localize(\"NAME.Track\");\n","FMSN5uRskkATexzB":"game.wfrp4e.tables.rollToChat(\"crithead\");\n","fP2edYbj6QjPPAjL":"return [\"Charm Animal\", \"Endurance\", \"Outdoor Survival\"].includes(args.skill?.name)\n","fPKYkBllp7Et62lX":"if (args.test.spell.name === \"Warp Lightning\") {\n\targs.test.preData.canReverse = true;\n}\n","FqevMs0ukQ9WuUHl":"// Each time the blade is used, the GM should secretly roll a d10.\n// On a 1, its poison has run dry,\n// and the next time it is employed it will shatter.\n\nif (this.item.getFlag(\"wfrp4e\", \"brittle\")) {\n\tChatMessage.create({\n\t\tcontent: `<strong>${this.item.name}</strong> shatters!`,\n\t});\n\tthis.item.update({ name: `${this.item.name} (Shattered)` });\n}\n","FSqUqSByMiztYOQM":"if (args.totalWoundLoss > 0)\n\tthis.script.scriptMessage(\n\t\t`<b>Infected: ${args.actor.name}</b> must pass an <b>Easy (+40) Endurance</b> Test or gain a @UUID[Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb]{Festering Wound}`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n","ft0LaRWZT5WtnptP":"const advantage = this.actor.system.status.advantage.value;\nif (advantage > 0) {\n\tawait this.actor.setAdvantage(0);\n\tthis.script.scriptNotification(\"Advantage Subtracted\");\n} else {\n\treturn this.script.scriptNotification(\"Not enough Advantage!\", \"error\")\n}\n\nconst test = await this.actor.setupTrait(this.item, {\n\tfields: { slBonus: advantage },\n});\nawait test.roll();\n","FUgCtIoj1Stgqxt7":"return ![\"ws\", \"bs\", \"s\", \"ag\", \"t\", \"dex\"].includes(args.characteristic)\n","fve7tiyF5X9B7mHJ":"args.fields.slBonus -= 2;\n","Fvlc4RkeF4dHjW3m":"const caster = this.effect.sourceActor;\nif (\n\tcaster &&\n\t(this.actor.has(game.i18n.localize(\"NAME.Undead\")) ||\n\t\tthis.actor.has(game.i18n.localize(\"NAME.Daemonic\")))\n) {\n\tconst wp = caster.system.characteristics.wp.value;\n\tif (wp > this.actor.system.characteristics.t.value) {\n\t\tif (this.actor.has(game.i18n.localize(\"NAME.Unstable\"))) {\n\t\t\tthis.actor.update({ \"system.status.wounds.value\": 0 });\n\t\t\tthis.actor.addCondition(\"dead\");\n\t\t} else {\n\t\t\tfromUuid(\"Compendium.wfrp4e-core.items.D0ImWEIMSDgElsnl\").then((item) => {\n\t\t\t\tthis.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], {\n\t\t\t\t\tfromEffect: this.effect.id,\n\t\t\t\t});\n\t\t\t\tChatMessage.create({\n\t\t\t\t\tcontent: `Added Unstable to ${this.actor.prototypeToken.name}`,\n\t\t\t\t\tspeaker: { alias: caster.name },\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n}\n","FXuyiJoXdAh6WhRK":"return args.skill?.name === \"Ride (Horse)\" && game.combat?.active\n","FXwfqF0jpXlBQ9Y3":"return args.item?.system?.isMelee && this.actor.attacker\n","fY0TsQwnU14fdPl2":"args.fields.modifier += 30;\n","fYLSe6CrYciap5y8":"const characteristics = {\n\tws: 0,\n\tbs: 0,\n\ts: 10,\n\tt: 10,\n\ti: 0,\n\tag: 10,\n\tdex: 0,\n\tint: 0,\n\twp: 0,\n\tfel: 0,\n};\nconst skills = [\"Consume Alcohol\", \"Row\", \"Sail\", \"Swim\"];\nconst skillAdvancements = [10, 10, 10, 10];\nconst talents = [];\nconst trappings = [];\nconst items = [];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${trapping}`, { permanent: true });\n\t}\n}\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","FYUPfYyTYZkxRLFT":"return ![\"NAME.Endurance\", \"NAME.Cool\"].map(i => game.i18n.localize(i)).includes(args.skill?.name)\n","FZFOC7bip0oiWEzk":"if (\n\targs.opposedTest.result.hitloc.value === this.item.system.location.key &&\n\targs.totalWoundLoss > 0\n) {\n\targs.actor.addCondition(\"bleeding\", 2);\n\tthis.script.scriptNotification(\"Added Bleeding\");\n}\n","fzTB7t3x4bLmAXji":"const roll = await new Roll(\"1d10 + 1\").roll();\nawait roll.toMessage(this.script.getChatData());\nthis.script.scriptNotification(`Healed ${roll.total} Wounds`);\nthis.actor.corruptionDialog(\"moderate\");\nawait this.actor.modifyWounds(roll.total);\n","g07HI7vyqiFXPB0o":"// A Drinker must take a Difficult (-10) Endurance Test.\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"difficult\" },\n});\nawait test.roll();\n// If they fail, they acquire 2 Poisoned Conditions.\nif (test.failed) {\n\tthis.actor.addCondition(\"poisoned\", 2);\n\tthis.script.scriptMessage(\n\t\t`<p><strong>${this.actor.prototypeToken.name}</strong> has gained 2 @Condition[Poisoned] Conditions.</p>\n        <p>Any being with the Bestial Creature Trait that bites them and takes damage will not bite them again during a hostile encounter, though the creature may still attack them in other ways.</p>`,\n\t\t{\n\t\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t\t\tblind: true,\n\t\t},\n\t);\n}\n// If they succeed, for a number of rounds equal to 3+ their SL, they have the Corrosive Blood Creature Trait.\nelse if (test.succeeded) {\n\t// Don't attempt to add Corrosive Blood if actor already has it\n\tconst hasCorrosiveBlood = this.actor.has(\"Corrosive Blood\");\n\tif (hasCorrosiveBlood !== undefined) return\n\n\tconst item = await fromUuid(\"Compendium.wfrp4e-core.items.M5QSWOYt2Rbv2yxW\");\n\tconst data = item.toObject();\n\tthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\t\tfromEffect: this.effect.id,\n\t});\n\n\tconst duration = 3 + Number.parseInt(test.result.SL);\n\tthis.script.scriptMessage(\n\t\t`<p><strong>${this.actor.prototypeToken.name}</strong> gains the Corrosive Blood Trait for ${duration} rounds.</p>`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\"), blind: true },\n\t);\n}\n","g0SzfsLyW7aD2F19":"if (\n\tthis.item.name.includes(\"(\") &&\n\tthis.item.system.tests.value.includes(\"(Social Group)\")\n) {\n\tlet tests = this.item.system.tests.value;\n\tconst name = this.item.name;\n\n\t// If name already specifies, make sure tests value reflects that\n\tif (name.includes(\"(\")) {\n\t\tconst group = name.split(\"(\")[1].split(\")\")[0];\n\t\ttests = `${tests.split(\"(\")[0].trim()} (${group})`;\n\t}\n\tthis.item.updateSource({ name, \"system.tests.value\": tests });\n}\n","g1L8OYO9nCOhdKGL":"// Everything within Fellowship Bonus yards\n// of the target point is splashed with mystic poison,\n// suffering 1d10 + SL damage which ignores Armour Points\n\nconst damage = await new Roll(\n\t`1d10 + ${Number.parseInt(this.effect.sourceTest.result.SL)}`,\n).roll();\n\nawait damage.toMessage(this.script.getChatData());\n\nthis.script.scriptMessage(\n\tawait args.actor.applyBasicDamage(damage.total, {\n\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP,\n\t\tsuppressMsg: true,\n\t}),\n);\n\n// ... and gains the Poisoned Condition\n\nthis.actor.addCondition(\"poisoned\");\n","G1RletYc6BzigJrK":"const ablaze = Number.parseInt(this.effect.sourceTest.result.SL) + 5;\nargs.actor.addCondition(\"ablaze\", ablaze);\n","g4t56A09yrpZaJQ2":"const amberTalons = foundry.utils.deepClone(\n\tgame.wfrp4e.config.systemItems.unarmed,\n);\namberTalons.name = \"Amber Talons\";\namberTalons.img = this.effect.img;\namberTalons.system.damage.value = \"SB + WPB\";\namberTalons.system.equipped = true;\namberTalons.system.qualities.value.push({ name: \"magical\" });\namberTalons.effects.push({\n\tlabel: \"Amber Talons\",\n\ttransfer: false,\n\ticon: \"modules/wfrp4e-core/icons/spells/amber-talons.png\",\n\tflags: {\n\t\twfrp4e: {\n\t\t\tapplicationData: {\n\t\t\t\tdocumentType: \"Item\",\n\t\t\t},\n\t\t\tscriptData: [\n\t\t\t\t{\n\t\t\t\t\ttrigger: \"applyDamage\",\n\t\t\t\t\tscript:\n\t\t\t\t\t\t'if (args.totalWoundLoss >= 1)\\n{ \\n    args.actor.addCondition(\"bleeding\")\\n}',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n});\nthis.actor.createEmbeddedDocuments(\"Item\", [amberTalons], {\n\tfromEffect: this.effect.id,\n});\n","G7sFEnJlXZvfXL3V":"if (this.item.system.quantity.value) {\n\tthis.item.system.reduceQuantity();\n\tconst actor = Array.from(game.user.targets)[0]?.actor || this.actor;\n\tconst effectData = this.item.effects.contents[1].convertToApplied();\n\teffectData.flags.wfrp4e.sourceItem = this.item.uuid;\n\tactor.applyEffect({ effectData: [effectData] });\n} else {\n\tthis.script.scriptNotification(\"None left!\", \"error\");\n}\n","ga6bQzPuoIiQQrKg":"if (args.totalWoundLoss > 0) {\n\tconst test = await args.actor.setupCharacteristic(\"t\", {\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t\tfields: { difficulty: \"hard\" },\n\t});\n\tawait test.roll();\n\tif (test.failed) {\n\t\targs.totalWoundLoss +=\n\t\t\tthis.effect.sourceActor.system.characteristics.wp.bonus;\n\t\targs.modifiers.other.push({\n\t\t\tlabel: this.effect.name,\n\t\t\tvalue: this.effect.sourceActor.system.characteristics.wp.bonus,\n\t\t});\n\t}\n}\n","GAO8AozttWOyRkta":"if (!args.flags.lostHand) {\n\targs.fields.lostHand = true;\n\targs.fields.modifier += -20;\n}\n","gbhxWXboV9CytWNU":"await this.actor.addCondition(\"blinded\", 2);\n","GbPEy22VuCNzlNv2":"return !this.actor.isMounted || (!args.skill?.name?.includes(game.i18n.localize(\"NAME.Ride\")) && !args.options.dodge)\n","Gc8S5TYlVdV8NnOT":"const test = await args.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tcontext: {\n\t\tfailure: \"Gained a Broken Condition\",\n\t\tsuccess: \"Resisted the Broken Condition\",\n\t},\n});\n\nawait test.roll();\n\nif (!test.succeeded) {\n\targs.actor.addCondition(\"broken\");\n}\n","GcIQtshex11AMmh2":"if (this.item.system.isEquipped) {\n\tlet removeRepeater = false;\n\tif (!this.item.system.offhand.value) {\n\t\t// main\n\t\tconst offhandUsed = this.actor.itemTypes.weapon.find(\n\t\t\t(i) => i.system.isEquipped && i.system.offhand.value,\n\t\t);\n\t\tif (offhandUsed) {\n\t\t\tremoveRepeater = true;\n\t\t}\n\t} // offhand\n\telse {\n\t\tconst mainhandUsed = this.actor.itemTypes.weapon.find(\n\t\t\t(i) => i.system.isEquipped && !i.system.offhand.value,\n\t\t);\n\t\tif (mainhandUsed) {\n\t\t\tremoveRepeater = true;\n\t\t}\n\t}\n\n\tif (removeRepeater) {\n\t\tthis.item.system.qualities.value = this.item.system.qualities.value.filter(\n\t\t\t(i) => i.name !== \"repeater\",\n\t\t);\n\t}\n}\n","GEfWIFBSrXt0ldBM":"(await new Roll(\"1d10\").roll()).toMessage(this.script.getChatData());\nawait this.actor.addCondition(\"dead\");\n","GFaTz8f6PBNWrlad":"const test = await this.actor.setupCharacteristic(\"wp\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tcontext: {\n\t\tfailure:\n\t\t\t\"<strong>Confused</strong>: Determine behaviour by @Table[bewilder] Table.\",\n\t},\n});\nawait test.roll();\nreturn test.failed\n","GFkVnx4m9OwYsKGH":"args.actor.flags.ambi += 1;\n","gFUXBbTskQBKjxqm":"if (this.actor.hasCondition(\"entangled\")) {\n\tthis.actor\n\t\t.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\t\t\tfields: { difficulty: \"average\" },\n\t\t})\n\t\t.then(async (test) => {\n\t\t\tawait test.roll();\n\t\t\tif (test.failed) this.actor.addCondition(\"fatigued\");\n\t\t});\n}\n","gh2KS1prBKcsSK6M":"if (args.opposedTest.attackerTest.result.critical)\n\targs.actor.addCondition(\"ablaze\");\n","Gh7OidY6UdpWBS1g":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.KII1gWnxIZ8HzmU5\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","GjkxWj9wCAclM9WA":"const effects = foundry.utils.deepClone(\n\tthis.item.effects.contents.filter((e) => e.active),\n);\n\neffects.splice(effects.length - 1);\n\nif (effects.length === 0) {\n\treturn this.script.scriptNotification(\"All Effects have been used. Reset to select them again\")\n}\nconst choice = await ItemDialog.create(effects, 1, \"Choose Power to Gain\");\n\nif (choice[0]) {\n\tchoice[0].update({ disabled: true });\n\tconst effect = choice[0].convertToApplied();\n\teffect.name += ` (${this.effect.name})`;\n\tthis.actor.createEmbeddedDocuments(\"ActiveEffect\", [effect]);\n}\n","gKIPujyuFSn0No9v":"for (const e of this.item.effects.contents) {\n\te.update({ disabled: false });\n}\nthis.script.scriptNotification(\"Reset Powers\");\n","gKPL3t4vlZAsvtGr":"return args.skill?.name === \"Stealth (Underground)\"\n","gL0ftUnK5TNXBRRt":"return this.effect.sourceActor.uuid === args.actor.uuid\n","GNl5Zk7BZ2jhRV1I":"if (args.item.type === \"armour\") {\n\targs.item.system.AP.head = 0;\n}\n","gnVpxOeBZpNF4HIF":"if (\n\targs.test.result.roll.toString().includes(\"9\") ||\n\targs.test.result.roll.toString().includes(\"8\")\n) {\n\targs.test.result.fumble = game.i18n.localize(\"Fumble\");\n}\n","GOq4TcnWbfyfCo2V":"this.script.scriptNotification(\n\t`Healed ${this.actor.characteristics.t.bonus * 2} Wounds`,\n);\nawait this.actor.modifyWounds(this.actor.characteristics.t.bonus * 2);\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: \" - Side Effects\",\n\tfields: { difficulty: \"difficult\" },\n});\nawait test.roll();\nif (test.failed) {\n\tconst roll = await new Roll(\"1d10\").roll();\n\tawait roll.toMessage(this.script.getChatData());\n\tif (roll.total <= 3) {\n\t\tthis.actor.addCondition(\"blinded\", 3);\n\t} else if (roll.total <= 6) {\n\t\tthis.actor.addCondition(\"broken\");\n\t} else if (roll.total <= 9) {\n\t\tthis.actor.addCondition(\"stunned\");\n\t} else if (roll.total === 10) {\n\t\tthis.actor.addConditon(\"unconscious\");\n\t}\n}\n","gpPaCe6yER79l4u8":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.SfUUdOGjdYpr3KSR\");\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","gPQrszvIgGlW9yM4":"if (args.test.characteristicKey === \"wp\") args.test.preData.canReverse = true;\n","gpuBg3y9rocJL7yT":"this.actor.status.addArmour(1, { locations: [\"head\"], source: this.effect });\n","gqZLfIr6svrtdwdC":"return args.skill?.name !== game.i18n.localize(\"NAME.SleightOfHand\") && args.skill?.name !== game.i18n.localize(\"NAME.MeleeBrawling\") && args.weapon?.system?.weaponGroup?.value !== \"brawling\"\n","GrF6tQ08jgKmUH4i":"return ![\"ws\", \"bs\", \"s\", \"ag\", \"i\"].includes(args.characteristic)\n","GRfCxtYzmEx2LYU7":"if (args.totalWoundLoss >= 1) {\n\tconst roll = await new Roll(\"1d10\").roll();\n\tawait roll.toMessage(this.script.getChatData());\n\tif (roll.total === 9) {\n\t\tthis.script.scriptMessage(\n\t\t\t`Two @UUID[Compendium.wfrp4e-eis.actors.iDy8SDTwJSlCzZMl]{Blue Horror of Tzeentch} claw their way out of ${this.actor.name}'s screaming flesh, killing them in the process.`,\n\t\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t\t);\n\t}\n}\n","gsCnd3mf1vXFU2ei":"this.actor.system.status.ward.value = 4;\n","GTZUO73pUJKpM1JB":"const roll = await new Roll(\"1d10\").roll();\ngame.dice3d?.showForRoll(roll);\nthis.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(roll.total, {\n\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\t\tsuppressMsg: true,\n\t}),\n);\n","gu72JaTs9GrSiVTd":"return !(args.skill?.name === game.i18n.localize(\"NAME.Haggle\") || args.skill?.name === game.i18n.localize(\"NAME.Gossip\"))\n","GUkpYdPwoC5pc9BT":"return !args.weapon?.system.properties.flaws.crewed\n","GuUCErVbk5hrFzR3":"args.multiplier.tb += 1;\n","GuxbvztcvzJz2oH1":"args.item.system.qualities.value = [];\n","gVpFUka7qfGiEC1v":"this.actor\n\t.getActiveTokens()\n\t.forEach((t) => t.document.update({ texture: { tint: \"#FFD700\" } }));\n","GZFsuynUhgZqwTGo":"if (args.totalWoundLoss >= 1) {\n\tconst test = await args.actor.setupSkill(\n\t\tgame.i18n.localize(\"NAME.Endurance\"),\n\t\t{\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: ` - ${this.effect.name}`,\n\t\t\tcontext: {\n\t\t\t\tfailure: \"Gained a Poisoned Condition\",\n\t\t\t\tsuccess: \"Resisted the poison\",\n\t\t\t},\n\t\t},\n\t);\n\tawait test.roll();\n\tif (test.failed) {\n\t\targs.actor.addCondition(\"poisoned\");\n\t}\n}\n","GzSFlqL1YrIK1dxh":"const items = await Promise.all(\n\t[\n\t\t\"Compendium.wfrp4e-wom.items.Item.EjGYZ4CgX2jZW7Ot\",\n\t\t\"Compendium.wfrp4e-wom.items.Item.O2v9RQiFf0obskP5\",\n\t\t\"Compendium.wfrp4e-wom.items.Item.2cv6hhZ57iV6z5Il\",\n\t\t\"Compendium.wfrp4e-wom.items.Item.YgDEUO0G0XcqQJqg\",\n\t\t\"Compendium.wfrp4e-wom.items.Item.J6K5TPxI8qIGQKKH\",\n\t\t\"Compendium.wfrp4e-wom.items.Item.K9FPtiDLwTkC7FuO\",\n\t\t\"Compendium.wfrp4e-wom.items.Item.CkMYRYCLrkMnyVm5\",\n\t\t\"Compendium.wfrp4e-wom.items.Item.0Xdm4r7l2EwC4fcg\",\n\t].map(fromUuid),\n);\n\nconst choice = await game.wfrp4e.apps.ItemDialog.create(\n\titems,\n\t1,\n\t\"Select Wind\",\n);\n//this.actor.createEmbeddedDocuments(\"Item\", items);\n\nthis.item.update(choice[0]?.toObject(), { diff: false, recursive: false });\n\n//this.actor.items.getName(this.effect.item.name).delete() // For some reason this.effect.item.delete() throws an error\n","GzsuEg7gZy1f0ljy":"const bleeding = this.actor.hasCondition(\"bleeding\");\nif (bleeding) {\n\tthis.script.scriptNotification(\n\t\t`Cleared ${bleeding.conditionValue} Bleeding Conditions`,\n\t);\n\tbleeding.delete();\n} else {\n\tthis.script.scriptNotification(\"No Bleeding Conditions\");\n}\n","H06Ysj7oPiemW7S6":"if (args.test.options.income && !args.test.options.criminal) {\n\targs.test.options.criminal = true;\n\tconst currentCareer = args.test.actor.system.currentCareer;\n\tconst coin = { 1: \"b\", 2: \"s\", 3: \"s\", 4: \"g\" }[\n\t\tcurrentCareer.system.level.value\n\t]; // b, s, or g maps to 2d10, 1d10, or 1 respectively (takes the first letter)\n\tconst term = { 1: \"bp\", 2: \"ss\", 3: \"ss\", 4: \"gc\" }[\n\t\tcurrentCareer.system.level.value\n\t]; // b, s, or g maps to 2d10, 1d10, or 1 respectively (takes the first letter)\n\tlet dieAmount = { 1: \"2d10\", 2: \"1d10\", 3: \"2d10\", 4: \"1\" }[\n\t\tcurrentCareer.system.level.value\n\t]; // b, s, or g maps to 2d10, 1d10, or 1 respectively (takes the first letter)\n\tdieAmount = Number.parseInt(dieAmount[0]) * this.item.system.Advances; // Multilpy that first letter by your standing (Brass 4 = 8d10 pennies)\n\tif (coin !== \"g\") {\n\t\t// Don't roll for gold, just use standing value\n\t\tdieAmount = `${dieAmount}d10`;\n\t}\n\tconst moneyEarned = (await new Roll(dieAmount.toString()).roll()).total;\n\tconst moneyString = `${moneyEarned}${coin}`;\n\tconst transactionString = `${moneyEarned}${term}`;\n\n\tthis.script.scriptMessage(\n\t\t`<a class=\"money-drag\" data-amt=\"${moneyString}\"><strong>Earned an additional ${game.wfrp4e.market.amountToString(\n\t\t\tgame.wfrp4e.market.parseMoneyTransactionString(transactionString),\n\t\t)}</strong></a>`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n","h0DfPwUUOBjyAHMZ":"return args.skill?.name !== game.i18n.localize(\"NAME.Perception\");\n","h1XKoMuVnS0bagRO":"return args.item?.name !== game.i18n.localize(\"NAME.Endurance\");\n","H1z3nWW7Rj3Oisxy":"return args.type !== \"channelling\"\n","H2CJvApKMnfGNNoo":"if (\n\targs.test.item?.type === \"skill\" &&\n\targs.test.item.name.includes(game.i18n.localize(\"NAME.Stealth\"))\n) {\n\targs.test.result.description = \"Astounding Failure\";\n\targs.test.result.outcome = \"failure\";\n\tChatMessage.create(\n\t\t{\n\t\t\tcontent: \"<em>SQUEAK</em>\",\n\t\t\tspeaker: ChatMessage.getSpeaker({\n\t\t\t\ttoken: this.actor.getActiveTokens()[0]?.document,\n\t\t\t\tactor: this.actor,\n\t\t\t}),\n\t\t},\n\t\t{ chatBubble: true },\n\t);\n\tAudioHelper.play(\n\t\t{ src: `${game.settings.get(\"wfrp4e\", \"soundPath\")}squeek.wav` },\n\t\ttrue,\n\t);\n}\n","H3pZ9UeIzIz3luKh":"args.actor.addCondition(\"bleeding\");\n\nthis.actor.setFlag(\"wfrp4e\", \"isAttached\", args.actor.name);\n\nthis.script.scriptMessage(`Attaches to <strong>${args.actor.name}</strong>`);\n","H3Wls12aVWAWTp9J":"this.actor\n\t.setupCharacteristic(\"i\", {\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t})\n\t.then((test) => {\n\t\ttest.roll();\n\t});\n","h766UvswLCsxcMow":"const characteristics = {\n\tws: 5,\n\tbs: 0,\n\ts: -15,\n\tt: 0,\n\ti: 20,\n\tag: 0,\n\tdex: 0,\n\tint: 5,\n\twp: 10,\n\tfel: 10,\n};\nconst skills = [\"Charm\", \"Intimidate\", \"Melee (Basic)\"];\nconst skillAdvancements = [7, 60, 7];\nconst talents = [\"Menacing\", \"Shadow\"];\nconst traits = [\"Distracting\"];\nconst trappings = [];\nconst items = [];\nconst spells = [];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nconst traitRegex =\n\t/(?:,?(.+?)(\\+?\\d{1,2}\\+?)?\\s*?(?:\\((.+?)\\)\\s*(\\+?\\d{1,2})?|,|$))/gm;\nfor (const trait of traits) {\n\tconst traitMatches = trait.matchAll(traitRegex).next().value;\n\tconst traitName = traitMatches[1];\n\tconst traitVal = traitMatches[2] || traitMatches[4]; // could be match 2 or 4 depending on if there's a specialization\n\tconst traitSpec = traitMatches[3];\n\n\tlet traitItem;\n\ttry {\n\t\ttraitItem = await WFRP_Utility.findItem(traitName, \"trait\");\n\t} catch {}\n\tif (!traitItem) {\n\t\tui.notifications.warn(`Could not find ${trait}`, { permanent: true });\n\t}\n\ttraitItem = traitItem.toObject();\n\n\tif (Number.isNumeric(traitVal)) {\n\t\ttraitItem.system.specification.value = traitName.includes(\n\t\t\t\"Weapon\",\n\t\t\t\"Horns\",\n\t\t\t\"Tail\",\n\t\t\t\"Tentacles\",\n\t\t\t\"Bite\",\n\t\t)\n\t\t\t? traitVal - Number.parseInt(characteristicValues[3] / 10)\n\t\t\t: traitVal;\n\t\ttraitItem.name = `${traitItem.name} ${\n\t\t\ttraitSpec ? `(${traitSpec})` : \"\"\n\t\t}`.trim();\n\t} else traitItem.system.specification.value = traitSpec;\n\n\titems.push(traitItem);\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${trapping}`, { permanent: true });\n\t}\n}\n\nfor (const spell of spells) {\n\tlet spellItem = await game.wfrp4e.utility.findItem(spell);\n\tif (spellItem) {\n\t\tspellItem = spellItem.toObject();\n\n\t\titems.push(spellItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${spell}`, { permanent: true });\n\t}\n}\n\nupdateObj.name = updateObj.name += ` ${this.effect.name}`;\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.worn = true;\n\telse if (item.type === \"weapon\") item.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.trappingType?.value === \"clothingAccessories\"\n\t)\n\t\titem.worn = true;\n}\n","hA8PzeiCsHqqlUZm":"this.actor.createEmbeddedDocuments(\"ActiveEffect\", [\n\tgame.wfrp4e.config.symptomEffects.nausea,\n]);\nthis.script.scriptMessage(\"Gains @Condition[Nausea] for [[1d10]] hours\", {\n\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n});\n","HASsi6wYHVALExWq":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tcontext: { failure: \"1 Corruption Point Gained\" },\n});\nawait test.roll();\n\nif (test.failed && args.actor.type === \"character\") {\n\tlet msg = \"\";\n\tmsg += `<p><b>${this.actor.prototypeToken.name}</b> gained a Corruption point</p>`;\n\tif (test.result.roll % 11 === 0 || test.result.roll === 100) {\n\t\tmsg += `<b>${args.actor.prototypeToken.name}</b> gains a mutation (@Table[expandedmutatephys]{Physical} or @Table[expandedmutatemental]{Mental}) and gains @UUID[Compendium.wfrp4e-core.items.hiU7vhBOVpVI8c7C]{Chaos Magic (Tzeentch)}`;\n\t}\n\tthis.script.scriptMessage(msg, {\n\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t});\n\tawait this.actor.update({\n\t\t\"system.status.corruption.value\":\n\t\t\tNumber.parseInt(args.actor.status.corruption.value) + 1,\n\t});\n}\n","Hcpn1gU58DIKIhty":"if (args.item.type === \"skill\" && args.item.name === \"Melee (Flail)\") {\n\targs.item.system.modifier.value += 10;\n}\n","hCzxUyO6mjLNIpaM":"let woundsGained = Math.min(\n\targs.totalWoundLoss,\n\targs.actor.status.wounds.value,\n);\n\nwoundsGained = Math.floor(woundsGained / 2);\n\nargs.attacker.update({\n\t\"system.status.wounds.value\":\n\t\targs.attacker.status.wounds.value + woundsGained,\n});\n\nthis.script.scriptMessage(`Gains ${woundsGained} Wounds`);\n","hDC6lroDEPVBituR":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n\nif (test.failed) {\n\tthis.actor.update({\n\t\t\"system.status.corruption.value\":\n\t\t\tNumber.parseInt(this.actor.status.corruption.value) + 1,\n\t});\n\tthis.script.scriptMessage(\"Gained a Corruption point\", {\n\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t});\n\tif (test.result.roll % 11 === 0 || test.result.roll === 100) {\n\t\tthis.script.scriptMessage(\n\t\t\t\"<strong>Fumble</strong>: immediately gain 1 @Table[mutatemental]{Mental Mutation}, and may not take a Short-term Ambition for the next [[1d10]] weeks.\",\n\t\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t\t);\n\t}\n}\n","HfCxNd7mFGZH4s9Y":"// An opponent that takes more than a single Wound from a Warp Blade strike\n// in melee combat must make an Average (+20) Endurance Test\n// or take a Stunned Condition\n\nif (args.totalWoundLoss > 1) {\n\tconst test = await args.actor.setupSkill(\n\t\tgame.i18n.localize(\"NAME.Endurance\"),\n\t\t{\n\t\t\tfields: { difficulty: \"average\" },\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: ` - ${this.effect.name}`,\n\t\t},\n\t);\n\tawait test.roll();\n\tif (test.failed) {\n\t\tawait args.actor.addCondition(\"stunned\");\n\t}\n}\n","hfO4INH3EeETDTFt":"this.actor.status.addArmour(1, {\n\tlocations: this.effect.flags.wfrp4e.locations,\n\tsource: this.effect,\n});\n","hhCs5VBKx50S5IsY":"return !args.options.mutate\n","hhv7PrRdlf9sfC82":"const characteristics = {\n\tws: 5,\n\tbs: 0,\n\ts: 5,\n\tt: 5,\n\ti: 10,\n\tag: 0,\n\tdex: 0,\n\tint: 0,\n\twp: 0,\n\tfel: 0,\n};\nconst skills = [\"Хладнокровие\", \"Уклонение\"];\nconst skillAdvancements = [10, 10];\nconst talents = [\"Combat Reflexes\"];\nconst trappings = [\n\t\"Leather Jack\",\n\t\"Leather Skullcap\",\n\t\"Leather Leggings\",\n\t\"Shield\",\n];\nconst items = [];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${trapping}`, { permanent: true });\n\t}\n}\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","HiMBS6GeOwEydWYN":"return args.skill?.name !== game.i18n.localize(\"NAME.Climb\");\n","HJ2X4ZtXei0BXbxf":"const choices = await Promise.all([\n\tgame.wfrp4e.utility.findItemId(\"PzimjNx9Ojq4g6mV\"),\n\tgame.wfrp4e.utility.findItemId(\"rOPmyLWa37e7s9v6\"),\n]);\nlet items = await game.wfrp4e.apps.ItemDialog.create(\n\tchoices,\n\t1,\n\t\"Choose a Skill\",\n);\n\nitems = items.map((i) => i.toObject());\nitems.forEach((i) => (i.system.advances.value = 20));\n\nitems.forEach((i) => equip(i));\n\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.data.worn.value = true;\n\telse if (item.type === \"weapon\") item.data.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.data.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.data.worn = true;\n}\n","hK0YMJfYbpbJZizO":"this.actor.getActiveTokens().forEach((t) =>\n\tt.document.update({\n\t\tlight: {\n\t\t\tdim: 0,\n\t\t\tbright: 0,\n\t\t\tangle: 360,\n\t\t\talpha: 0.5,\n\t\t\tanimation: {\n\t\t\t\tspeed: 0,\n\t\t\t\tintensity: 0,\n\t\t\t\ttype: \"none\",\n\t\t\t},\n\t\t\tcolor: \"\",\n\t\t},\n\t}),\n);\n","HKhyn0kijKfzW6cw":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"hard\" },\n});\nawait test.roll();\nthis.item.updateSource({ \"flags.wfrp4e.passed\": test.succeeded });\n","hlHKeFWrOA8CsLr9":"args.data.canReverse = true;\nargs.options.pilot = true;\n","hluehsCuBZYc1Ejt":"return args.characterisic !== \"fel\"\n","HMC6hPND9DWLFfZE":"if (this.item.name.includes(\"(\")) {\n\treturn;\n}\n\nconst index = game.packs\n\t.filter((i) => i.metadata.type === \"Item\")\n\t.reduce((acc, pack) => acc.concat(pack.index.contents), [])\n\t.filter(\n\t\t(i) =>\n\t\t\ti.type === \"skill\" && i.name.includes(game.i18n.localize(\"NAME.Lore\")),\n\t)\n\t.map((i) => {\n\t\ti.id = i._id;\n\t\treturn i;\n\t});\n\nconst choice = await ItemDialog.create(index, 1, \"Choose a Lore\");\nlet text;\nif (!choice[0]) {\n\tconst custom = await Dialog.wait({\n\t\ttitle: \"Enter Lore\",\n\t\tcontent: \"<input type='text'>\",\n\t\tbuttons: {\n\t\t\tconfirm: {\n\t\t\t\tlabel: game.i18n.localize(\"Confirm\"),\n\t\t\t\tcallback: (dlg) => {\n\t\t\t\t\treturn dlg.find(\"input\")[0].value;\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tdefault: \"confirm\",\n\t\tclose: () => {\n\t\t\treturn \"\";\n\t\t},\n\t});\n\ttext = custom || \"\";\n} else {\n\ttext = game.wfrp4e.utility.extractParenthesesText(choice[0].name);\n}\n\nawait this.item.updateSource({\n\tname: `${this.item.name} (${text})`,\n\t\"system.tests.value\": this.item.system.tests.value.replace(\n\t\t\"chosen Lore\",\n\t\ttext,\n\t),\n});\nawait this.effect.updateSource({ name: `${this.effect.name} (${text})` });\n","HmImVzvw6ecBy99l":"if (\n\targs.opposedTest.result.hitloc.value === \"body\" &&\n\targs.totalWoundLoss > 0\n) {\n\targs.actor.addCondition(\"bleeding\", 2);\n\tthis.script.scriptNotification(\"Added Bleeding\");\n}\n","hmk8zV1LTElHUI8A":"let msg = `<b>${this.actor.prototypeToken.name}</b> loses 1 Wound.<br>`;\nif (this.actor.status.wounds.value <= 1) {\n\tmsg += `<b>${this.actor.prototypeToken.name}</b> goes unconscious.<br>`;\n\tawait this.actor.addCondition(\"unconscious\");\n}\nthis.script.scriptMessage(msg);\nthis.actor.modifyWounds(-1);\n","hnsmzvcuiUYB065I":"this.actor\n\t.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t\tcontext: { failure: \"May not flee Combat\" },\n\t})\n\t.then((test) => test.roll());\n","hObTbWi4ZdwXimIW":"if (args.item.type === \"spell\") {\n\targs.item.system.cn.value = Math.floor(args.item.system.cn.value / 2);\n}\n","HoNTnPphrJISSQr1":"ChatMessage.create(\n\t{\n\t\tcontent: \"<em>Speak and be known to me</em>\",\n\t\tspeaker: ChatMessage.getSpeaker({\n\t\t\ttoken: this.actor.getActiveTokens()[0]?.document,\n\t\t\tactor: this.actor,\n\t\t}),\n\t},\n\t{ chatBubble: true },\n);\n","HOt2hHOiHDZ7oBgW":"if ([\"rLeg\", \"lLeg\"].includes(this.effect.getFlag(\"wfrp4e\", \"location\"))) {\n\targs.actor.details.move.value /= 2;\n}\n","hpwJRAhCsXTp9bd9":"const choice1 = [\n\t{\n\t\ttype: \"skill\",\n\t\tname: \"Melee (Basic)\",\n\t\tdiff: {\n\t\t\tsystem: {\n\t\t\t\tadvances: {\n\t\t\t\t\tvalue: 20,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n];\nconst choice2 = [\n\t{\n\t\ttype: \"skill\",\n\t\tname: \"Melee (Polearm)\",\n\t\tdiff: {\n\t\t\tsystem: {\n\t\t\t\tadvances: {\n\t\t\t\t\tvalue: 20,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n];\n\nconst choice3 = [\n\t{\n\t\ttype: \"skill\",\n\t\tname: \"Melee (Two-Handed)\",\n\t\tdiff: {\n\t\t\tsystem: {\n\t\t\t\tadvances: {\n\t\t\t\t\tvalue: 20,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n];\n\nconst choice = await Dialog.wait({\n\ttitle: \"Choice\",\n\tcontent: `<p>\n        Select your choice\n        </p>\n        <ol>\n        <li>Melee (Basic)</li>\n        <li>Melee (Polearm)</li>\n        <li>Melee (Two-Handed)</li>\n        </ol> \n        `,\n\tbuttons: {\n\t\t1: {\n\t\t\tlabel: \"Basic\",\n\t\t\tcallback: () => {\n\t\t\t\treturn choice1;\n\t\t\t},\n\t\t},\n\t\t2: {\n\t\t\tlabel: \"Polearm\",\n\t\t\tcallback: () => {\n\t\t\t\treturn choice2;\n\t\t\t},\n\t\t},\n\t\t3: {\n\t\t\tlabel: \"Two-Handed\",\n\t\t\tcallback: () => {\n\t\t\t\treturn choice3;\n\t\t\t},\n\t\t},\n\t},\n});\n\nconst updateObj = this.actor.toObject();\nconst items = [];\nfor (const c of choice) {\n\tlet existing;\n\tif (c.type === \"skill\") {\n\t\texisting = updateObj.items.find(\n\t\t\t(i) => i.name === c.name && i.type === c.type,\n\t\t);\n\t\tif (existing && c.diff?.system?.advances?.value) {\n\t\t\texisting.system.advances.value += c.diff.system.advances.value;\n\t\t}\n\t}\n\n\tif (!existing) {\n\t\tlet item = await game.wfrp4e.utility.find(c.name, c.type);\n\t\tif (item) {\n\t\t\titem = item.toObject();\n\t\t\tequip(item);\n\t\t\titems.push(mergeObject(item, c.diff || {}));\n\t\t} else\n\t\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","Hq1G30lhJYvtOSNb":"if (args.test.failed) {\n\tconst applicableCharacteristics = [\"ws\", \"bs\", \"s\", \"fel\", \"ag\", \"t\", \"dex\"];\n\tif (applicableCharacteristics.includes(args.preData.characteristic)) {\n\t\tthis.actor.addCondition(\"stunned\");\n\t}\n}\n","hR1qD2kpFHF8JT8h":"return args.skill?.name === \"Language (Magick)\"\n","HrOBAXsEX073ReKl":"const skill = \"Артистизм (пение)\";\nconst currentCareer = this.actor.system.currentCareer;\nconst existingSkill = this.actor.itemTypes.skill.find((i) => i.name === skill);\n\nif (!currentCareer) return\n\nconst inCurrentCareer = currentCareer.system.skills.includes(skill);\nif (existingSkill && inCurrentCareer) {\n\texistingSkill.system.advances.costModifier = -5;\n} else {\n\tcurrentCareer.system.skills.push(skill);\n}\n","HrYchgkdZBiu1yPF":"return args.skill?.name === game.i18n.localize(\"NAME.Climb\");\n","hSlEY2oh8quVmdXR":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.pTorrE0l3VybAbtn\");\nconst data = item.toObject();\ndata.system.specification.value = 2;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","HwbgUIbpX0D8JLOR":"if (\n\targs.opposedTest.result.differenceSL >= 0 &&\n\targs.opposedTest.result.differenceSL <= 2 &&\n\targs.opposedTest.result.winner === \"attacker\"\n)\n\tthis.actor.addCondition(\"bleeding\");\n","hwHpIunCq3ifk2QU":"if (args.item.type === \"spell\") {\n\tconst range = Number.parseInt(args.item.Duration);\n\tif (Number.isNumeric(range)) {\n\t\targs.item.system.duration.value = `2 * ${args.item.system.duration.value}`;\n\t}\n}\n","hwOZxgt7e65iWvYz":"const test = await this.actor.setupCharacteristic(\"t\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tconst damage = this.effect.sourceTest.result.damage;\n\n\tthis.script.scriptMessage(\n\t\tawait this.actor.applyBasicDamage(damage, {\n\t\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\t\t\tsuppressMsg: true,\n\t\t}),\n\t);\n}\n","HX6CjNapYdC0VmQ8":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.epPBu7x6BRWp2PHG\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","HXJKkmpfxQUOnWOS":"if (!this.item.system.twohanded.value) {\n\tthis.item.system.flaws.value = this.item.system.flaws.value.concat([\n\t\t{ name: \"tiring\" },\n\t\t{ name: \"slow\" },\n\t]);\n}\n","hxmwtw5zAHyS2upG":"this.script.scriptMessage(\n\tawait game.wfrp4e.tables.formatChatRoll(\"giftofthebeast\"),\n);\n","hZAax4emLahEEqcZ":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.BqPZn6q3VHn9HUrW\");\nconst data = item.toObject();\ndata.system.specification.value = 7 - this.actor.characteristics.s.bonus;\ndata.name = item.name.replace(\"(Feature)\", \"(Tusks)\");\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","I0Jo6cbNAJtXUloc":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.J9MK0AIaTbvd5oF6\");\nthis.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], {\n\tfromEffect: this.effect.id,\n});\n","I0oRZ7AWde5KI5jw":"return ![\"t\", \"int\"].includes(args.characteristic)\n","I1J2m5uud84N50Lk":"if ([\"cast\", \"channelling\", \"pray\"].includes(args.type)) {\n\targs.abort = true;\n\tthis.script.scriptNotification(\"Cannot cast Spells or use Prayers\");\n} else return true;\n","i59IpmZNLJEPWZ3L":"return args.spell\n","i5AN97A7IOeygEFA":"if (args.applyAP && args.modifiers.ap.metal) {\n\targs.modifiers.ap.ignored += args.modifiers.ap.metal;\n\targs.modifiers.other.push({\n\t\tvalue: args.modifiers.ap.metal,\n\t\tlabel: this.effect.name,\n\t\tdetails: \"Add Metal AP to Damage\",\n\t});\n\targs.modifiers.ap.details.push(\n\t\t`<strong>${this.effect.name}</strong>: Ignore Metal (${args.modifiers.ap.metal})`,\n\t);\n\targs.modifiers.ap.metal = 0;\n}\n","I7ieW0hNYvvX0KFg":"return args.skill?.name !== game.i18n.localize(\"NAME.Heal\");\n","i7xl0jNpLnBT2h2l":"args.actor.characteristics.dex.value = 0;\n","I93i49wI9ZrDHT4n":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.jt0DmVK9IiF6Sd2h\",\n);\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","I9QAPKbaXwMMMBT4":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tfields: { difficulty: \"average\" },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tawait this.actor.addCondition(\"stunned\");\n\tconst secondTest = await this.actor.setupSkill(\n\t\tgame.i18n.localize(\"NAME.Cool\"),\n\t\t{\n\t\t\tfields: { difficulty: \"easy\" },\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: \" - Despair\",\n\t\t},\n\t);\n\tawait secondTest.roll();\n\tif (secondTest.failed) {\n\t\tthis.effect.updateSource({ name: \"Taste of Death\" });\n\t\tawait this.actor.addCondition(\"fatigued\");\n\t} else {\n\t\treturn false;\n\t}\n}\n","IAGla7HJlYN0wa4H":"if (args.test.characteristicKey === \"wp\") {\n\tif (args.test.failed) {\n\t\tthis.actor.addSystemEffect(\"convulsions\");\n\t\tthis.script.scriptMessage(\n\t\t\t`Willpower Test failed, <b>${this.actor.prototypeToken.name}</b> gains @Symptom[Convulsions] for [[1d10]] hours`,\n\t\t);\n\t}\n}\n","iAo3wxMLA64rsKjj":"this.script.scriptMessage(\n\tawait game.wfrp4e.tables.formatChatRoll(\"skavenbrew\"),\n);\n","iBEPQ3NwtI9DfkEy":"const locations = [];\n\nwhile (locations.length < 2) {\n\tconst loc = await game.wfrp4e.tables.rollTable(\"hitloc\", { hideDSN: true });\n\tif (!locations.includes(loc.result)) {\n\t\tlocations.push(loc.result);\n\t}\n}\n\nlocationText = locations.map((i) => game.wfrp4e.config.locations[i]).join(\", \");\n\nthis.item.updateSource({ name: (this.item.name += ` (${locationText})`) });\n","ID8mCcjkl7PCQhDq":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Dodge\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n\nif (test.failed) {\n\tconst damage = this.effect.sourceItem.system.computeSpellDamage(\"3\", true);\n\tthis.script.scriptMessage(\n\t\tawait this.actor.applyBasicDamage(damage, {\n\t\t\tsuppressMsg: true,\n\t\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP,\n\t\t}),\n\t);\n}\n","id9ZdkERMZnZTWXt":"if (args.extendedTest?.getFlag(\"wfrp4e\", \"fear\")) {\n\tthis.script.scriptNotification(\"Immune to Fear\");\n\targs.extendedTest.delete();\n\targs.abort = true;\n}\nreturn args.options.terror || args.extendedTest?.getFlag(\"wfrp4e\", \"fear\")\n","IfEu1hO8sKEZBpvg":"const value = Number.parseInt(this.item.specification.value);\nconst name = this.actor.prototypeToken.name;\n\nif (game.user.isGM && game.user.targets.size) {\n\tgame.user.targets.forEach((t) => {\n\t\tt.actor.applyFear(value, name);\n\t});\n\tgame.user.updateTokenTargets([]);\n} else {\n\tgame.wfrp4e.utility.postFear(value, name);\n}\n","IG4zYqtN9fRSYE7q":"args.actor.addCondition(\"ablaze\");\n","igVAVU7DOuzhNG14":"return args.item?.system.isMelee\n","iHn3YzvqNfbwzjZz":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.AtpAudHA4ybXVlWM\");\nconst data = item.toObject();\ndata.system.specification.value = this.actor.characteristics.s.bonus;\ndata.system.description.value = \"\";\ndata.name = this.effect.name;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","IkGegSuQwwVPhrjF":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.pTorrE0l3VybAbtn\");\nconst data = item.toObject();\ndata.system.specification.value = 1;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","IKiZv9YSFmKmHo6a":"return args.spell?.system.lore.value === \"fire\"\n","iLpq4yCFN6YACrYA":"if (args.test.result.castOutcome === \"success\") {\n\tthis.script.scriptMessage(\n\t\tawait game.wfrp4e.tables.formatChatRoll(\"demonic-mien\"),\n\t);\n}\n","ILqHxk7deotgI3KD":"if (args.item.type !== \"weapon\") return\n\nconst reach = args.item.reach.value;\nlet reachNum = game.wfrp4e.config.reachNum[reach];\nreachNum = Math.min(reachNum + 2, 7);\n\nconst key = game.wfrp4e.utility.findKey(reachNum, game.wfrp4e.config.reachNum);\n\nargs.item.reach.value = key;\n","iM4B3IZ4VtpZsl09":"args.size = \"sml\";\n","iM6JLF8jDXMViReZ":"return ![\"Pick Lock\", \"Sleight of Hand\", \"Channelling (Ulgu)\"].includes(args.skill?.name)\n","iMDZLr7ueJWBnilj":"args.actor.flags.rangedDamageIncrease += 1;\n","imKVsCy8rya2gkwO":"// Any Characteristic penalties due to failed Consume Alcohol Tests\n// or the state of being Stinking Drunk are eliminated.\nawait this.actor.removeSystemEffect(\"consumealcohol1\");\nawait this.actor.removeSystemEffect(\"consumealcohol2\");\nawait this.actor.removeSystemEffect(\"consumealcohol3\");\nawait this.actor.removeSystemEffect(\"stinkingdrunk1\");\n\n// The drinker is thereafter Fatigued\n// for a number of hours equal to 10 minus their Toughness Bonus —\n// nothing but time and rest can eliminate this penalty.\nawait this.actor.addCondition(\"fatigued\");\nconst duration =\n\t10 - Number.parseInt(this.actor.system.characteristics.t.bonus);\nthis.effect.updateSource({ \"duration.rounds\": duration });\nthis.script.scriptMessage(\n\t`<p><strong>${this.actor.prototypeToken.name}</strong> has lost all alcohol related penalties and gains the Fatigued Condition for ${duration} hours.</p>`,\n\t{\n\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t\tblind: true,\n\t},\n);\n","iMu8BZ7eHMAbPEO1":"const healed = args.totalWoundLoss;\n\nthis.script.scriptMessage(\n\t`<b>this.actor.prototypeToken.name</b> healed ${healed} Wounds`,\n);\n\nthis.actor.modifyWounds(healed);\n","iNAQJa5HyaEckknX":"const test = await this.actor.setupCharacteristic(\"wp\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n\nconst opposedResult = test.opposedMessages[0]\n\t?.getOppose()\n\t?.resultMessage?.getOpposedTest()?.result;\n\nif (opposedResult?.winner === \"attacker\") {\n\tconst spells = this.actor.itemTypes.spell;\n\tif (spells.length) {\n\t\tconst chosen =\n\t\t\tspells[Math.floor(CONFIG.Dice.randomUniform() * spells.length)];\n\t\tthis.script.scriptMessage(\n\t\t\t`Loses access to <strong>${chosen.name}</strong>`,\n\t\t);\n\t\tchosen.update({ name: (chosen.name += \" (LOST)\") });\n\t}\n}\n","inPxRSx0CDj1nwAm":"if (\n\targs.test.result.fumble &&\n\t!this.actor.itemTypes.talent.find((i) => i.name === \"Arcane Magic (Fire)\")\n) {\n\tthis.actor.addCondition(\"ablaze\");\n}\n","ioeTj5mx8jlA5EX5":"args.actor.addCondition(\"stunned\");\n","Ip8sctF9SIE1Z2vF":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.UnJ25lL8aUzem5JO\");\nconst data = item.toObject();\ndata.system.specification.value = 3;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","ipkkRffJh61WE7zR":"if (!args.flags.amputatedFootOrLeg) {\n\targs.flags.amputatedFootOrLeg = true;\n\targs.fields.modifier -= 20;\n}\n","IpoOOjYJs6RmVrpb":"if (args.totalWoundLoss > 0) {\n\targs.attacker.applyEffect({\n\t\teffectUuids: this.effect.sourceItem.effects.contents[1].uuid,\n\t});\n}\n","IPPDvZdE8kn3H9z7":"const test = await this.actor.setupSkill(\"Уклонение\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n\nif (test.failed) {\n\tawait this.actor.addCondition(\"grappling\");\n}\n","IR5URcjnCuWBFMoN":"// If a full dose is imbibed,\n// the victim must pass a Hard (-20) Endurance Test.\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tfields: { difficulty: \"hard\" },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.script.scriptMessage(\n\t\t`<p><strong>${this.actor.prototypeToken.name}</strong> notices nothing amiss save that they become tired a little earlier than usual. At this point it is still possible to save the victim via a powerful antidote or magical means.</p>\n    <p>Once they fall asleep however, it is almost impossible. At this point the victim must make a <strong>Hard (-20) Endurance</strong> Test. If they fail, they never awaken.</p>`,\n\t\t{\n\t\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t\t\tblind: true,\n\t\t},\n\t);\n}\nreturn test.failed;\n","IR86DuMbVdbGOJYt":"this.actor.addCondition(\"blinded\");\n","IsLAvY9ikR1cOJWw":"return ![\"NAME.Row\", \"NAME.Swim\"].map(i => game.i18n.localize(i)).includes(args.skill?.name);\n","IslMfFgpgQq2brpu":"if (this.actor.hasCondition(\"broken\")) {\n\tthis.actor.removeCondition(\"broken\");\n\tthis.script.scriptNotification(\"Cannot have Broken\");\n}\n","iT0h3VZLEBQnn5Bx":"return args.skill?.name !== game.i18n.localize(\"NAME.Charm\") && args.skill?.name !== game.i18n.localize(\"NAME.Gossip\") && args.skill?.name !== game.i18n.localize(\"NAME.ConsumeAlcohol\");\n","iT3C15fMyQrj1RmG":"if (this.actor.has(\"Undead\") && this.actor.has(\"Ethereal\")) {\n\tthis.actor\n\t\t.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: ` - ${this.effect.name}`,\n\t\t})\n\t\t.then(async (test) => {\n\t\t\tawait test.roll();\n\t\t\tif (test.failed) this.actor.addCondition(\"stunned\");\n\t\t});\n}\n","IukS0clr1yAleacc":"this.actor.system.characteristics.ag.modifier -= Number.parseInt(\n\tthis.item.system.location.value || 1,\n);\n\nthis.actor.system.characteristics.ws.modifier -= Number.parseInt(\n\tthis.item.system.location.value || 1,\n);\n","IupskvzvoGyD2H5o":"if (this.actor.type !== \"character\") {\n\treturn;\n}\n\nconst god = await ValueDialog.create(\"Enter a Deity\", \"Blessed\");\n\nif (god) {\n\tconst prayers = await game.wfrp4e.utility.findAll(\n\t\t\"prayer\",\n\t\t\"Loading Prayers\",\n\t);\n\tconst blessings = prayers.filter(\n\t\t(p) =>\n\t\t\tp.system.god.value\n\t\t\t\t.split(\",\")\n\t\t\t\t.map((i) => i.trim().toLowerCase())\n\t\t\t\t.includes(god.toLowerCase()) && p.system.type.value === \"blessing\",\n\t);\n\tif (blessings.length) {\n\t\tthis.script.scriptNotification(\n\t\t\t`Adding ${blessings.map((i) => i.name).join(\", \")}`,\n\t\t);\n\t\tawait this.actor.createEmbeddedDocuments(\"Item\", blessings, {\n\t\t\tfromEffect: this.effect.id,\n\t\t});\n\t} else {\n\t\tthis.script.scriptNotification(\n\t\t\t`Could not find any Blessings associated with ${god}.`,\n\t\t);\n\t}\n\tthis.item.updateSource({ name: this.item.name.replace(\"Any\", god) });\n\tawait this.actor.update({ \"system.details.god.value\": god });\n}\n","iuSoKntfJ4eAPafQ":"let spells = await game.wfrp4e.utility.findAll(\"spell\", \"Loading Spells\");\nspells = spells\n\t.filter((s) =>\n\t\t[\n\t\t\t\"fire\",\n\t\t\t\"heavens\",\n\t\t\t\"beasts\",\n\t\t\t\"shadow\",\n\t\t\t\"light\",\n\t\t\t\"life\",\n\t\t\t\"death\",\n\t\t\t\"metal\",\n\t\t].includes(s.system.lore.value),\n\t)\n\t.sort((a, b) => (a.system.lore.value > b.system.lore.value ? 1 : -1));\n\nconst choice = await ItemDialog.create(spells, 1, \"Choose Spell\");\nif (choice[0]) {\n\tthis.actor.createEmbeddedDocuments(\"Item\", choice, {\n\t\tfromEffect: this.effect.id,\n\t});\n}\n","iuYuf05BNuZ5fllI":"if (args.test.isFumble) {\n\targs.test.result.other.push(\"@Table[poisoned-wind-globe]\");\n}\n","iVhi3Z6zPaf1bf8g":"return [\"t\", \"i\", \"ag\", \"dex\", \"int\", \"wp\"].includes(args.characteristic)\n","iX0ctHYHg12pjaCU":"const result = await game.wfrp4e.tables.rollTable(\"gift-of-slaanesh\");\n\nif (result.object.documentId && result.object.documentCollection) {\n\tconst item = await fromUuid(\n\t\t`Compendium.${result.object.documentCollection}.${result.object.documentId}`,\n\t);\n\tif (item) {\n\t\tconst data = item.toObject();\n\t\t// Some items need sourceTest for their effects\n\t\tsetProperty(data, \"flags.wfrp4e.sourceTest\", this.effect.sourceTest);\n\t\tawait this.actor.createEmbeddedDocuments(\"Item\", [data], {\n\t\t\tfromEffect: this.effect.id,\n\t\t});\n\t}\n}\n\nthis.script.scriptMessage(\n\tgame.wfrp4e.tables.formatChatRoll(\"gift-of-slaanesh\", {\n\t\tlookup: result.roll,\n\t\thideDSN: true,\n\t}),\n);\n","IzZcsSngI8TZH4d8":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.fjd1u9VAgiYzhBRp\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","J0IWUhxada2ONowP":"return args.skill?.name === \"Артистизм (пение)\" || args.skill?.name === \"Артистизм (пение)\" || (args.skill?.name.includes(\"Язык\") && (args.skill?.name.includes(\"Magick\") || args.skill?.name.includes(\"Elthárin\") || args.skill?.name.includes(\"Cathayan\")))\n","j1AmrY1SxFJQyapo":"if (this.actor.status.advantage.value > 0 && args.item.system.attackType) {\n\targs.item.system.qualities.value.push({ name: \"penetrating\" });\n}\n","J1FPDdrXGctKDTZz":"if (args.equipped) {\n\tconst ward = await fromUuid(\"Compendium.wfrp4e-core.items.Bvd2aZ0gQUXHfCTh\");\n\twardData = ward.toObject();\n\twardData.system.specification.value = \"8\";\n\n\tconst mr = await fromUuid(\"Compendium.wfrp4e-core.items.yrkI7ATjqLPDTFmZ\");\n\tmrData = mr.toObject();\n\tmrData.system.specification.value = 2;\n\n\tthis.actor.createEmbeddedDocuments(\"Item\", [wardData, mrData], {\n\t\tfromEffect: this.effect.id,\n\t});\n} else {\n\tthis.effect.deleteCreatedItems();\n}\n","j3zDMWkns32Yrxn3":"this.effect.updateSource({ \"flags.wfrp4e.ward\": 9 });\n","j6Bf1iivH8cqSnnK":"const target = args.data.targets[0];\nreturn target?.actor.hasCondition(\"prone\") || target.hasCondition(\"surprised\")\n","J8aPichsl25t1QZ9":"this.actor.addCondition(\"entangled\", this.effect.sourceTest.result.SL);\n","j98hvy6r9G2Vjmid":"if (args.totalWoundLoss > 0) {\n\targs.opposedTest.result.other.push(\n\t\t\"@Corruption[minor]{Minor Exposure to Corruption}\",\n\t);\n\tthis.script.scriptMessage(\n\t\t`<strong>${this.effect.name}</strong>: \n    @Corruption[minor]{Minor Exposure to Corruption} <br/>\n    <strong>${args.actor.prototypeToken.name}</strong> must take an \n    <strong>Average (+20%) Corruption (Minor) Test</strong>`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n","JaiC5P6nIgctOacH":"if (args.actor.system.details.species?.value?.toLowerCase() === \"dwarf\") {\n\targs.weaponProperties.flaws.undamaging = true;\n}\n","JavuFNZ9Pj5elVLc":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\");\nconst data = item.toObject();\ndata.system.specification.value = 4 - this.actor.characteristics.s.bonus;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","jbZPLb4wuqJpHLUx":"this.item.system.flaws.value.push({ name: \"dangerous\" });\n","jC8o5PbnqEvOoZ9N":"this.actor.addCondition(\"poisoned\", 2);\n","jdS2u1tQPYeO55WI":"const type = this.item.getFlag(\"wfrp4e\", \"breath\");\n\nif (type === \"cold\") {\n\tconst stunned = Math.max(1, Math.trunc(args.totalWoundLoss / 5));\n\tawait args.actor.addCondition(\"stunned\", stunned);\n}\n\nif (type === \"corrosion\") {\n\tconst damageItems = await Dialog.confirm({\n\t\ttitle: this.item.name,\n\t\tcontent: \"<p>Damage all Items carried?</p>\",\n\t});\n\tif (damageItems) {\n\t\tlet msg = \"\";\n\t\tconst weapons = args.actor.itemTypes.weapon.filter((i) => i.isEquipped);\n\t\tconst armour = args.actor.itemTypes.armour.filter((i) => i.isEquipped);\n\t\tconst trappings = args.actor.itemTypes.trapping.filter((i) => i.isEquipped);\n\t\tfor (const item of weapons) {\n\t\t\tif (item.system.properties.qualities.shield) {\n\t\t\t\tawait item.system.damageItem(1, \"shield\");\n\t\t\t} else {\n\t\t\t\tawait item.system.damageItem(1);\n\t\t\t}\n\t\t\tmsg += `<p><strong>${item.name}</strong> damage by 1</p>`;\n\t\t}\n\t\tfor (const item of armour) {\n\t\t\tawait item.system.damageItem(1);\n\t\t\tmsg += `<p><strong>${item.name}</strong> damage by 1</p>`;\n\t\t}\n\t\tfor (const item of trappings) {\n\t\t\tawait item.system.damageItem(1);\n\t\t\tmsg += `<p><strong>${item.name}</strong> damage by 1</p>`;\n\t\t}\n\t\tif (msg) {\n\t\t\tthis.script.scriptMessage(msg, { speaker: { alias: args.actor.name } });\n\t\t}\n\t}\n}\n\nif (type === \"fire\") {\n\tawait args.actor.addCondition(\"ablaze\");\n}\n\nif (type === \"electricity\") {\n\tawait args.actor.addCondition(\"stunned\");\n}\n\nif (type === \"poison\") {\n\tawait args.actor.addCondition(\"poisoned\");\n}\n","JEbs0WlqhKNDOo5A":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"hard\" },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"unconscious\");\n}\n","JeThJbOf6Xmbtgo1":"this.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(\n\t\t8 + Number.parseInt(this.effect.sourceTest.result.SL),\n\t\t{ suppressMsg: true },\n\t),\n);\n\nconst test = await this.actor.setupSkill(\"Athletics\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"prone\");\n}\n","JFgXyb6bKjZJLmF8":"return args.characteristic === \"ag\"\n","jfk5VDKMTIf4ee0v":"if (args.totalWoundLoss > 0) args.actor.addCondition(\"poisoned\");\n","jFwema0iwzBphxie":"let woundsGained = Math.min(\n\targs.actor.status.wounds.value,\n\targs.totalWoundLoss,\n);\nwoundsGained = Math.ceil(woundsGained / 2);\n\nargs.attacker.update({\n\t\"system.status.wounds.value\":\n\t\targs.attacker.system.status.wounds.value + woundsGained,\n});\n\nargs.actor.addCondition(\"fatigued\");\nargs.attacker.hasCondition(\"fatigued\")?.delete();\n\nthis.script.scriptMessage(\n\t`<b>${args.attacker.prototypeToken.name}</b> gains ${woundsGained} Wounds`,\n);\n","JgCcgDVZX54slrWx":"return args.skill?.name.includes(game.i18n.localize(\"NAME.Melee\")) || args.item?.isMelee || args.options.corruption\n","jGDk7avWFSnyFoql":"const broken = this.actor.hasCondition(\"broken\");\nconst item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.IAWyzDfC286a9MPz\",\n);\n\nif (\n\tbroken &&\n\t!broken.getFlag(\"wfrp4e\", \"blasted-mind\") &&\n\t!this.actor.has(item.name)\n) {\n\tawait broken.delete();\n\tthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\t\tfromEffect: this.effect.id,\n\t});\n\tthis.script.scriptNotification(\n\t\t`Removed ${broken.name}, added ${item.name} (${Math.ceil(\n\t\t\tCONFIG.Dice.randomUniform() * 10,\n\t\t)} Rounds)`,\n\t);\n}\n","jgO1Kf60Ctt6R0qO":"return args.item?.name !== game.i18n.localize(\"NAME.Leadership\")\n","jHgxpe6TJDlP3oTn":"let spells = await game.wfrp4e.utility.findAll(\"spell\", \"Loading Spells\");\nspells = spells.filter((s) => [\"slaanesh\"].includes(s.system.lore.value));\n\nconst choice = await ItemDialog.create(spells, 1, \"Choose Spell\");\nif (choice[0]) {\n\tthis.item.updateSource({ name: `${this.item.name} (${choice[0].name})` });\n\tthis.actor.createEmbeddedDocuments(\"Item\", choice, {\n\t\tfromEffect: this.effect.id,\n\t});\n}\n","JibNjuQrJRnY0yf9":"return this.actor.flags.useless.rEye && this.actor.flags.useless.lEye && ([\"ws\", \"bs\"].includes(args.characteristic) || args.skill?.name?.includes(game.i18n.localize(\"NAME.Ride\")) || args.weapon || args.options.dodge)\n","JjDzMnUxaWQePIYh":"return args.characteristic !== \"int\"\n","JjiPprLSlSmmB5Ga":"args.item.system.damage.value += \" + 1\";\n","Jjq3oPYbI26zjxME":"const location = this.item.system.location.key;\n\nif (location) {\n\tconst dropped = this.item.system.weaponsAtLocation;\n\n\tif (dropped.length) {\n\t\tthis.script.scriptNotification(\n\t\t\t`Dropped ${dropped.map((i) => i.name).join(\", \")}!`,\n\t\t);\n\t\tfor (const weapon of dropped) {\n\t\t\tawait weapon.system.toggleEquip();\n\t\t}\n\t}\n}\n\nconst roll = await new Roll(\"1d10\").roll();\n\nroll.toMessage(\n\tthis.script.getChatData({ flavor: `${this.effect.name} (Duration)` }),\n);\n\nthis.effect.updateSource({ \"duration.rounds\": roll.total });\n","Jk7OHqx06oCUVAzb":"return ![\"Language (Magick)\", \"Channelling (Hysh)\"].includes(args.skill?.name)\n","jLsL4KRI6LEG9Ii2":"if (\n\targs.test.result.critical &&\n\t[\"rLeg\", \"lLeg\"].includes(args.test.result.hitloc.result)\n) {\n\targs.test.result.critModifier = args.test.result.critModifier\n\t\t? args.test.result.critModifier + 20\n\t\t: 20;\n\targs.test.result.critical += ` (+${args.test.result.critModifier})`;\n}\n","jmxlpyLrIuoxQtvU":"this.actor.getActiveTokens().forEach((t) =>\n\tt.document.update({\n\t\ttexture: {\n\t\t\tscaleX: 2,\n\t\t\tscaleY: 2,\n\t\t\tsrc: \"modules/wfrp4e-core/tokens/popout/gor.webp\",\n\t\t},\n\t}),\n);\n","JmZQRvdWjm9ykYfn":"if (this.actor.hasCondition(\"surprised\")) {\n\tthis.actor.removeCondition(\"surprised\");\n\tthis.script.scriptMessage(\"Cannot be Surprised\");\n}\n","Jnp5c09sPzDD61EK":"this.script.scriptNotification(\n\t`${args.actor.prototypeToken.name} must pass an <b>Average (+20) Willpower</b> Test to attack this target!`,\n);\n\nreturn true; // No need to show this in the dialog\n","jObJanFoev4N6ZRv":"if (!args.opposedTest.attackerTest.item?.system?.isMagical)\n\targs.abort = `<strong>${this.effect.name}</strong>: Ignored`;\n","jpcU8FFWSlQ3gD0L":"return !args.skill?.name?.includes(game.i18n.localize(\"NAME.Trade\"))\n","JQruHprM5R5vZ9DA":"const caster = this.effect.sourceActor;\nif (caster) {\n\tconst healed =\n\t\tcaster.system.characteristics.wp.bonus +\n\t\tcaster.system.characteristics.int.bonus;\n\tawait this.actor.modifyWounds(healed);\n\tthis.script.scriptMessage(\n\t\t`<strong>${this.actor.prototypeToken.name}</strong> regains ${healed} Wounds`,\n\t);\n}\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tfields: { difficulty: \"vhard\" },\n\tcontext: {\n\t\tsuccess:\n\t\t\t\"1 Corruption point that was gained within the last hour is removed.\",\n\t\tfailure: \"Nothing happens\",\n\t},\n});\nawait test.roll();\n","jRSgPhpfN7MH7TTp":"if (args.totalWoundLoss > 0) {\n\tconst test = await this.actor.setupSkill(\n\t\tgame.i18n.localize(\"NAME.Endurance\"),\n\t\t{\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: ` - ${this.effect.name}`,\n\t\t\tcontext: {\n\t\t\t\tfailure: \"1 Poisoned Condition Gained\",\n\t\t\t\tsuccess: \"Resisted Poisoned Condition\",\n\t\t\t},\n\t\t},\n\t);\n\tawait test.roll();\n\tif (test.failed) {\n\t\targs.actor.addCondition(\"poisoned\");\n\t\tif (args.actor.system.status.wounds.value - args.totalWoundLoss <= 0) {\n\t\t\targs.actor.addCondition(\"unconscious\");\n\t\t}\n\t}\n}\n\n// else\n//     this.actor.setupCharacteristic(\"t\", { context: { failure: \"1 @Condition[Poisoned] Condition Gained\", success: \"Resisted @Condition[Poisoned] Condition\" } }).then(testCallback)\n","jrvj7bRyMBB9LixP":"this.actor.addCondition(\"fatigued\", 3);\n","jsgLEVYvMieyYT6L":"const tokenImg = \"\"; // Put path to token image here, inbetween the quotation marks\nif (tokenImg) {\n\tif (this.effect.getFlag(\"wfrp4e\", \"transformed\")) {\n\t\tawait this.effect.setFlag(\"wfrp4e\", \"transformed\", false);\n\t\tthis.actor.getActiveTokens().forEach((t) =>\n\t\t\tt.document.update({\n\t\t\t\ttexture: { src: this.actor.prototypeToken.texture.src },\n\t\t\t}),\n\t\t);\n\t} else {\n\t\tawait this.effect.setFlag(\"wfrp4e\", \"transformed\", true);\n\t\tthis.actor\n\t\t\t.getActiveTokens()\n\t\t\t.forEach((t) => t.document.update({ texture: { src: tokenImg } }));\n\t}\n} else {\n\tthis.script.scriptNotification(\n\t\t\"No Token Image path configured. The image path should be set in the first line of this script.\",\n\t\t\"error\",\n\t);\n}\n","JstrA46EYSEuRSy5":"if (\n\tthis.actor.has(game.i18n.localize(\"NAME.Undead\")) &&\n\tthis.actor.has(game.i18n.localize(\"NAME.Construct\"))\n)\n\tthis.actor.addCondition(\"dead\");\n","jW87rmQLtROdVEhW":"if (\n\t[\"orc\", \"ork\", \"goblin\", \"hobgoblin\", \"snotling\", \"greenskin\"].includes(\n\t\targs.opposedTest.defender.details.species.value.toLowerCase(),\n\t)\n) {\n\targs.addImpact = true;\n\targs.opposedTest.result.other.push(\n\t\t\"<b>Rune of Goblin Bane</b>: Impact Added\",\n\t);\n}\n","JwgFQmPQtXWAP94i":"this.actor.addCondition(\"fatigued\");\n","jWkfoVpHLiRaHTza":"if (args.test.succeeded) {\n\targs.test.result.other.push(\n\t\t`<strong>${this.effect.name}</strong>: @Terror[1,${this.actor.prototypeToken.name}]`,\n\t);\n}\n","JwYZJGkZMSM2M3Si":"if (args.totalWoundLoss > 0) {\n\tconst test = await args.actor.setupSkill(\n\t\tgame.i18n.localize(\"NAME.Endurance\"),\n\t\t{\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: ` - ${this.effect.name}`,\n\t\t\tfields: { difficulty: \"hard\" },\n\t\t},\n\t);\n\tawait test.roll();\n\tif (test.failed) {\n\t\targs.totalWoundLoss +=\n\t\t\tthis.effect.sourceActor.system.characteristics.wp.bonus;\n\t\targs.modifiers.other.push({\n\t\t\tlabel: this.effect.name,\n\t\t\tvalue: this.effect.sourceActor.system.characteristics.wp.bonus,\n\t\t});\n\t}\n}\n","jYJRO5XPyG7y6fih":"await this.actor.addCondition(\"blinded\");\nawait this.actor.addCondition(\"deafened\");\nawait this.actor.addCondition(\"fatigued\");\n","JyTxUG5dNW670Sf7":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.7mCcI3q7hgWcmbBU\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"hard\" },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"stunned\");\n}\n","JZIn1dsKHFE3smJU":"const ablaze = Number.parseInt(this.effect.sourceTest.result.SL) + 1;\nargs.actor.addCondition(\"ablaze\", ablaze);\n","K06v93N4FXb70mB7":"args.item.system.encumbrance.value = Math.max(\n\t0,\n\targs.item.system.encumbrance.value - 1,\n);\n","k3FqFgsF6a3TkxAD":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\ntest.roll();\nreturn true;\n","k8TC0yzp4xfOXD2n":"if (args.totalWoundLoss > 0) {\n\tconst test = await args.actor.setupSkill(\n\t\tgame.i18n.localize(\"NAME.Endurance\"),\n\t\t{ skipTargets: true, appendTitle: ` - ${this.effect.name}` },\n\t);\n\tawait test.roll();\n\tif (test.failed) {\n\t\targs.actor.addCondition(\"stunned\");\n\t}\n\targs.actor.hasCondition(\"bleeding\")?.delete();\n}\n","k9SvH4Lm3ZuI8S1N":"return ![\"wp\", \"ag\", \"i\", \"int\"].includes(args.characteristic)\n","kBXVEnSWzaQZLkJH":"if (args.test.result.critical) {\n\targs.test.result.damage += 1;\n\targs.test.result.additionalDamage += 1;\n}\n","KD4nCSdSXJVJmk0R":"this.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(this.effect.sourceTest.result.damage, {\n\t\tsuppressMsg: true,\n\t}),\n);\nawait this.actor.addCondition(\"ablaze\");\n","KF69WqF4PSEtpdb2":"args.fields.slBonus += 2;\n","KG4TxnXiLLpfWOQO":"args.fields.difficulty = \"average\";\n","KGK9vL1Yl0qmCeCN":"const specification = this.item.system.specification.value;\nlet choice = [];\n\nif (!specification || specification === \"Trained Skills\") {\n\tchoice = await ItemDialog.create(\n\t\tItemDialog.objectToArray(\n\t\t\t{\n\t\t\t\tbroken: \"Broken\",\n\t\t\t\tdrive: \"Drive\",\n\t\t\t\tentertain: \"Артистизм\",\n\t\t\t\tfetch: \"Fetch\",\n\t\t\t\tguard: \"Guard\",\n\t\t\t\thome: \"Home\",\n\t\t\t\tmagic: \"Magic\",\n\t\t\t\tmount: \"Mount\",\n\t\t\t\twar: \"War\",\n\t\t\t},\n\t\t\tthis.effect.img,\n\t\t),\n\t\t\"unlimited\",\n\t\t\"Choose Training\",\n\t);\n} else {\n\tchoice = specification.split(\", \").map((i) => {\n\t\treturn {\n\t\t\tid: i.toLowerCase(),\n\t\t\tname: i,\n\t\t};\n\t});\n}\n\nif (choice.length) {\n\tconst changes = foundry.utils.deepClone(this.effect.changes);\n\n\tfor (const training of choice) {\n\t\tswitch (training.id) {\n\t\t\tcase \"broken\": {\n\t\t\t\tconst roll = await new Roll(\"2d10\").roll();\n\t\t\t\troll.toMessage(this.script.getChatData());\n\t\t\t\tchanges.push({\n\t\t\t\t\tvalue: roll.total,\n\t\t\t\t\tmode: 2,\n\t\t\t\t\tkey: \"system.characteristics.fel.modifier\",\n\t\t\t\t});\n\n\t\t\t\tif (this.actor.type === \"creature\") {\n\t\t\t\t\tconst bestial = this.actor.itemTypes.trait.find(\n\t\t\t\t\t\t(i) => i.name === \"Bestial\",\n\t\t\t\t\t);\n\t\t\t\t\tif (bestial) {\n\t\t\t\t\t\tbestial.update({ \"system.disabled\": true });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase \"drive\":\n\t\t\t\tbreak;\n\n\t\t\tcase \"Артистизм\":\n\t\t\t\tbreak;\n\n\t\t\tcase \"fetch\":\n\t\t\t\tbreak;\n\n\t\t\tcase \"guard\": {\n\t\t\t\tconst territorial = await fromUuid(\n\t\t\t\t\t\"Compendium.wfrp4e-core.items.Item.JIAe7i7dqTQBu4do\",\n\t\t\t\t);\n\t\t\t\tawait this.actor.createEmbeddedDocuments(\"Item\", [territorial], {\n\t\t\t\t\tfromEffect: this.effect.id,\n\t\t\t\t});\n\t\t\t\tsetProperty(args, \"options.keepId\", true);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase \"home\":\n\t\t\t\tbreak;\n\n\t\t\tcase \"magic\":\n\t\t\t\tbreak;\n\n\t\t\tcase \"mount\":\n\t\t\t\tbreak;\n\n\t\t\tcase \"war\":\n\t\t\t\tchanges.push({\n\t\t\t\t\tvalue: 10,\n\t\t\t\t\tmode: 2,\n\t\t\t\t\tkey: \"system.characteristics.ws.modifier\",\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tthis.effect.updateSource({\n\t\tname: `${this.effect.name} (${choice.map((i) => i.name).join(\", \")})`,\n\t\tchanges,\n\t\t\"flags.wfrp4e.trained\": choice.map((i) => i.id),\n\t});\n\tthis.item.updateSource({\n\t\t\"system.specification.value\": `${choice.map((i) => i.name).join(\", \")}`,\n\t});\n}\n","KICZPwLvbUSxbDrE":"const table = game.wfrp4e.tables.findTable(\"mutatemental\");\nif (!table) {\n\tui.notifications.error(\"Cannot find table with key: mutatemental\");\n}\nconst result = (await table.roll()).results[0];\nconst uuid = `Compendium.${result.documentCollection}.${result.documentId}`;\nconst item = await fromUuid(uuid);\n\nif (item) {\n\tthis.script.scriptNotification(`${item.name} added`);\n\tthis.actor.createEmbeddedDocuments(\"Item\", [item]);\n} else {\n\tui.notifications.error(`Item could not be found: ${uuid}`);\n}\n","kiJ6AiaYVUjt6aV6":"teeth = await fromUuid(\"Compendium.wfrp4e-core.items.fBcZhOBn8IpoVqQ1\");\nteeth = teeth.toObject();\n\nconst roll = await new Roll(\"1d10\").roll();\nroll.toMessage(this.script.getChatData({ flavor: \"Teeth Lost\" }));\nteeth.system.location.value = `${roll.total} ${teeth.system.location.value}`;\nthis.actor.createEmbeddedDocuments(\"Item\", [teeth]);\n","kIM4Fs1lFVV7TSnj":"this.actor.modifyAdvantage(1);\n","KIoVBinAZK8sMOqD":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tfields: { difficulty: \"average\" },\n\tskipTargets: true,\n\tappendTitle: \" - Wounded\",\n});\nawait test.roll();\nif (test.failed) {\n\tfromUuid(\"Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb\").then((disease) => {\n\t\tthis.actor.createEmbeddedDocuments(\"Item\", [disease.toObject()]);\n\t\tthis.script.scriptNotification(`Gained ${disease.name}`);\n\t});\n}\n","KJLAan0glJlyOyqF":"this.actor.getActiveTokens().forEach((t) =>\n\tt.document.update({\n\t\tlight: {\n\t\t\tdim: 10,\n\t\t\tbright: 5,\n\t\t\talpha: 0.5,\n\t\t\tanimation: {\n\t\t\t\tspeed: 4,\n\t\t\t\tintensity: 4,\n\t\t\t\ttype: \"flame\",\n\t\t\t},\n\t\t\tcolor: \"#ac9e6c\",\n\t\t},\n\t}),\n);\n","kkC5EhqA05U6U0gU":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n\n// Kind of insane but whatever\nconst opposedResult = test.opposedMessages[0]\n\t?.getOppose()\n\t?.resultMessage?.getOpposedTest()?.result;\n\nif (opposedResult?.winner === \"attacker\") {\n\tif (opposedResult.differenceSL < 6) {\n\t\tthis.actor.addCondition(\n\t\t\t\"fatigued\",\n\t\t\tMath.floor(opposedResult.differenceSL / 2),\n\t\t);\n\t} else if (opposedResult.differenceSL >= 6) {\n\t\tthis.actor.addCondition(\"broken\");\n\t}\n}\n","KkjkYAGI9Em1NgiQ":"if (this.item.system.quantity.value) {\n\tthis.item.system.reduceQuantity();\n\tconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Heal\"), {\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t\tskipTargets: true,\n\t});\n\tawait test.roll();\n\tif (test.succeeded) {\n\t\tconst actor = Array.from(game.user.targets)[0]?.actor || this.actor;\n\t\tactor.applyEffect({\n\t\t\teffectData: [this.item.effects.contents[0].convertToApplied()],\n\t\t});\n\t} else {\n\t\tthis.script.scriptNotification(\"Heal Test failed!\", \"error\");\n\t}\n} else {\n\tthis.script.scriptNotification(\"None left!\", \"error\");\n}\n","KmngDrPD72xn22kZ":"if (this.actor.Species.toLowerCase() !== \"skaven\") {\n\tthis.actor\n\t\t.setupCharacteristic(\"t\", {\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: ` - Used ${this.effect.name}`,\n\t\t\tfields: { difficulty: \"difficult\" },\n\t\t})\n\t\t.then(async (test) => {\n\t\t\tawait test.roll();\n\t\t\tif (test.failed) {\n\t\t\t\tconst toughnessLost = Math.ceil(CONFIG.Dice.randomUniform() * 10);\n\t\t\t\tthis.actor.update({\n\t\t\t\t\t\"system.characteristics.t.initial\":\n\t\t\t\t\t\tthis.actor.characteristics.t.initial - toughnessLost,\n\t\t\t\t});\n\t\t\t\tthis.script.scriptMessage(\n\t\t\t\t\t`<b>${this.actor.prototypeToken.name}</b> lost ${toughnessLost} Toughness`,\n\t\t\t\t);\n\t\t\t}\n\t\t});\n}\n","kMSdRskYDI2J1gnp":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tfields: { difficulty: \"average\" },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"prone\");\n}\n","kmsGLWGxCY8Z8jVG":"return args.skill?.name !== game.i18n.localize(\"NAME.Intuition\");\n","KnwYZbeRSBA94hfl":"if (!args.flags.lostFingers) {\n\targs.flags.lostFingers = true;\n\targs.fields.modifier -=\n\t\t5 * this.actor.flags.useless[this.item.system.location.key];\n}\n","KPQfupKuaf4LCv4R":"const talents = await Promise.all(\n\t[\"Schemer\", \"Second Sight\"].map(game.wfrp4e.utility.findTalent),\n);\nthis.actor.createEmbeddedDocuments(\"Item\", talents, {\n\tfromEffect: this.effect.id,\n});\n","KQmb5B27eJ1lkbVL":"return this.item.system.quantity.value > 0 && args.type !== \"channelling\"\n","KQzbrpb0T5a7it4k":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.vMYEkrWj0ip6ZOdv\",\n);\nconst data = item.toObject();\ndata.name += \" (Disease)\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","KSjsDlsx3DD6cT16":"return args.skill?.name !== game.i18n.localize(\"NAME.Bribery\");\n","KT670CjGBEprx2fO":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.RWJrupj9seau0w31\",\n);\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","KTBVDHUndI3qDOXM":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"));\nawait test.roll();\nif (!test.succeeded) {\n\targs.actor.addCondition(\"stunned\");\n}\n","KuUkUmOOLf05I4Bp":"this.actor.hasCondition(\"broken\")?.delete();\n","KuuWAhoSzk0rCxxw":"args.fields.modifier += -20;\n","KUx0deSF3xNzMucL":"return args.skill?.name.includes(game.i18n.localize(\"NAME.Art\"));\n","kvaN100w0nBUlLbj":"const poisoned = this.actor.hasCondition(\"poisoned\");\nif (poisoned) {\n\tthis.script.scriptMessage(\"Immune to Poisoned\");\n\tpoisoned.delete();\n}\n","KVpDUEjHhd3nLa0f":"const test = await this.actor.setupCharacteristic(\"wp\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.script.scriptMessage(\n\t\tawait game.wfrp4e.tables.formatChatRoll(\"enrage-beast\"),\n\t);\n}\n","KVuPduDztyMZQNt9":"args.fields.slBonus += this.actor.system.characteristics.ag.bonus;\n","kWynO1lQzjiSs8RK":"return args.skill?.name !== game.i18n.localize(\"NAME.Haggle\");\n","KXzDe7cN2vynHjJO":"this.actor.hasCondition(\"blinded\")?.delete();\nthis.actor.hasCondition(\"deafened\")?.delete();\nthis.actor.hasCondition(\"unconscious\")?.delete();\n","kYiDBPRKIokFkr4Z":"if (args.item.type === \"skill\" && args.item.name === \"Ranged (Bow)\") {\n\targs.item.system.modifier.value += 20;\n}\n","kYmscP2HuXjDovBD":"return args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\"))\n","KyswmGj1uG3QS3ng":"args.applyAP = false;\n","KyUPYV1RXJxPOfyA":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"veasy\" },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"fatigued\");\n}\n","L1RMLvKtRPFtnczI":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.MGEPI4jNhymNIRVz\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","L2cdQppcPwxz24hN":"return !args.weapon\n","L89UcafRHqUfxoux":"const injury = await fromUuid(\"Compendium.wfrp4e-core.items.3S4OYOZLauXctmev\");\ninjury.updateSource({ \"system.location.key\": this.item.system.location.key });\nthis.actor.createEmbeddedDocuments(\"Item\", [injury], {\n\tfromEffect: this.effect.id,\n});\n","l8qFKSnMpy4P7XQR":"return !args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\"));\n","L9eAtDyaoHvqryk4":"return args.skill?.name !== game.i18n.localize(\"NAME.Intimidate\");\n","laptAldsT0Fm1rDt":"const blunt = await Dialog.confirm({\n\tlabel: \"test\",\n\tcontent: \"<p>Apply blunt damage reduction? (-3)</p>\",\n});\n\nif (blunt) {\n\targs.modifiers.other.push({\n\t\tlabel: this.effect.name,\n\t\tdetails: \"Blunt Damage Reduction\",\n\t\tvalue: -3,\n\t});\n}\n","LAyLbcC0lOPwZP3U":"this.actor.addCondition(\n\t\"ablaze\",\n\tNumber.parseInt(this.effect.sourceTest.result.SL),\n);\n","lCOdnKz8XpnkDs6Q":"const test = await this.actor.setupCharacteristic(\"t\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n","LedRsrVo2f7lm3Ix":"return args.skill?.name === game.i18n.localize(\"NAME.Intimidate\");\n","LeKLtvEDrWh4yHsx":"return args.skill?.name === game.i18n.localize(\"NAME.CharmAnimal\") || args.skill?.name.includes(game.i18n.localize(\"NAME.AnimalTraining\"));\n","lFO6XdfUODmFArqx":"args.actor.addCondition(\"bleeding\");\n","Lg1oRg4oNRvucsvi":"return !(args.skill?.name === game.i18n.localize(\"NAME.Climb\") || args.skill?.name === game.i18n.localize(\"NAME.Athletics\"))\n","lhemR8EP5tGNKout":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tfields: { difficulty: \"average\" },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tcontext: { failure: \"Suffer Creeping Irrationality\" },\n});\nawait test.roll();\nif (test.failed) {\n\tmsg = `<p>@UUID[${\n\t\tthis.effect.sourceItem.uuid\n\t}]{Creeping Irratitonality} Roll: <a class=\"inline-roll\"><i class=\"fas fa-dice-d20\"></i>${Math.ceil(\n\t\tCONFIG.Dice.randomUniform() * 10,\n\t)}</a></p>`;\n\tif (test.result.roll % 11 === 0 || test.result.roll === 100) {\n\t\tmsg += `<p><b>${this.actor.prototypeToken.name}</b> also gained 1 Corruption Point. If mutating, this results in a @Table[mutatemental]{Mental Corruption}</p>`;\n\t\tconst newCorruption = Number(this.actor.status.corruption.value) + 1;\n\t\tthis.actor.update({ \"system.status.corruption.value\": newCorruption });\n\t}\n\n\tthis.script.scriptMessage(msg);\n}\n","LHUUXfZVLBhWqRvb":"this.actor.status.addArmour(5, { magical: true, source: this.effect });\n","lII4KMRblqwFBlsV":"const characteristics = {\n\tws: 10,\n\tbs: 0,\n\ts: 0,\n\tt: 0,\n\ti: 10,\n\tag: 0,\n\tdex: 0,\n\tint: 20,\n\twp: 10,\n\tfel: 15,\n};\nconst skills = [\"Концентрация\", \"Charm\", \"Perform (Dancing)\"];\nconst skillAdvancements = [0, 6, 3];\nconst talents = [\"Attractive\", \"Distract\", \"Mimic\"];\nconst traits = [\"Distracting\", \"Flight (6)\", \"Spellcaster (Petty)\"];\nconst trappings = [];\nconst items = [];\nconst spells = [\"Marsh Lights\", \"Sleep\"];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nconst traitRegex =\n\t/(?:,?(.+?)(\\+?\\d{1,2}\\+?)?\\s*?(?:\\((.+?)\\)\\s*(\\+?\\d{1,2})?|,|$))/gm;\nfor (const trait of traits) {\n\tconst traitMatches = trait.matchAll(traitRegex).next().value;\n\tconst traitName = traitMatches[1];\n\tconst traitVal = traitMatches[2] || traitMatches[4]; // could be match 2 or 4 depending on if there's a specialization\n\tconst traitSpec = traitMatches[3];\n\n\tlet traitItem;\n\ttry {\n\t\ttraitItem = await WFRP_Utility.findItem(traitName, \"trait\");\n\t} catch {}\n\tif (!traitItem) {\n\t\tui.notifications.warn(`Could not find ${trait}`, { permanent: true });\n\t}\n\ttraitItem = traitItem.toObject();\n\n\tif (Number.isNumeric(traitVal)) {\n\t\ttraitItem.system.specification.value = traitName.includes(\n\t\t\t\"Weapon\",\n\t\t\t\"Horns\",\n\t\t\t\"Tail\",\n\t\t\t\"Tentacles\",\n\t\t\t\"Bite\",\n\t\t)\n\t\t\t? traitVal - Number.parseInt(characteristicValues[3] / 10)\n\t\t\t: traitVal;\n\t\ttraitItem.name = `${traitItem.name} ${\n\t\t\ttraitSpec ? `(${traitSpec})` : \"\"\n\t\t}`.trim();\n\t} else traitItem.system.specification.value = traitSpec;\n\n\titems.push(traitItem);\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${trapping}`, { permanent: true });\n\t}\n}\n\nfor (const spell of spells) {\n\tlet spellItem = await game.wfrp4e.utility.findItem(spell);\n\tif (spellItem) {\n\t\tspellItem = spellItem.toObject();\n\n\t\titems.push(spellItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${spell}`, { permanent: true });\n\t}\n}\n\nupdateObj.name = updateObj.name += ` ${this.effect.name}`;\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.worn = true;\n\telse if (item.type === \"weapon\") item.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.trappingType?.value === \"clothingAccessories\"\n\t)\n\t\titem.worn = true;\n}\n","ljpM7muMyxGD04EX":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.MVI0lXcg6vvtooAF\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","LjXPlgdXBdllnA3i":"return ![\"s\", \"t\"].includes(args.characteristic)\n","LkPtgN9A36OI6Frh":"return args.skill?.name === game.i18n.localize(\"NAME.Leadership\");\n","LLqAT9wEUGMLfDhU":"return !args.item?.system.isRanged\n","LlRhPGorLl5qJCU8":"if (this.actor.hasCondition(\"prone\")) {\n\tthis.actor.addCondition(\"unconscious\");\n} else {\n\tthis.actor.addCondition(\"prone\");\n}\n","Lm9IBkc918Duw3US":"const career = this.actor.itemTypes.career.find((c) =>\n\tc.getFlag(\"wfrp4e\", \"doubleLife\"),\n);\n\nif (career) {\n\tcareer.system.current.value = true;\n}\n","LOL2TGf8p8KxP14D":"const wind = this.effect.name.split(\" \")[2];\nreturn args.type !== \"cast\" || game.wfrp4e.config.magicWind[args.item.system.lore.value] !== wind;\n","lol5J6h0pErzM71s":"return args.weapon?.system.properties.flaws.crewed\n","lOzkngzye4RmvALp":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.DrNUTPeodEgpWTnT\");\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\nthis.script.scriptNotification(`Added ${item.name}`);\n","Lp261O9fgEXmgPf3":"// If this actor wins a defending test, swap the test\nif (\n\t!args.opposedTest.result.swapped &&\n\targs.opposedTest.result.winner === \"defender\" &&\n\targs.opposedTest.attackerTest.result.damage\n) {\n\targs.opposedTest.swap(this.effect.label);\n}\n","lPudo1grrVp05i7a":"const loc = Math.floor(CONFIG.Dice.randomUniform() * 2) === 0 ? \"head\" : \"body\";\nconst damage = this.actor.system.characteristics.s.bonus + 6;\n\nthis.actor\n\t.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t})\n\t.then(async (test) => {\n\t\tawait test.roll();\n\t\tif (test.failed) {\n\t\t\tawait this.actor.addCondition(\"stunned\");\n\t\t\tthis.script.scriptMessage(\n\t\t\t\tawait this.actor.applyBasicDamage(damage, {\n\t\t\t\t\tloc,\n\t\t\t\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP,\n\t\t\t\t\tsuppressMsg: true,\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t});\n","Lpv2N9LK9loeumiW":"if (this.actor.uuid !== this.effect.sourceActor.uuid) {\n\tthis.actor\n\t\t.setupSkill(game.i18n.localize(\"NAME.Athletics\"), {\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: ` - ${this.effect.name}`,\n\t\t\tfields: { difficulty: \"hard\" },\n\t\t\tcontext: {\n\t\t\t\tfailure: `<strong>${this.effect.name}</strong>: cannot move or take actions`,\n\t\t\t},\n\t\t})\n\t\t.then((test) => {\n\t\t\ttest.roll();\n\t\t});\n}\n","LQEWSN5KnHHATPsf":"if (args.totalWoundLoss > 0) {\n\tthis.script.scriptMessage(\n\t\t`<b>${args.actor.name}</b> must pass an <b>Easy (+40) Endurance</b> Test or gain a @UUID[Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb]{Festering Wound}`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n","lQJ68n3y1xDyNicE":"return !args.options.sizeModifier && args.item?.system?.attackType !== \"ranged\"\n","Lrb1S2aK7SFVD0C7":"if (args.totalWoundLoss > 0) {\n\tconst test = await args.actor.setupSkill(\n\t\tgame.i18n.localize(\"NAME.Endurance\"),\n\t\t{ skipTargets: true, appendTitle: ` - ${this.effect.name}` },\n\t);\n\tawait test.roll();\n\tif (test.failed) {\n\t\tawait args.actor.addCondition(\"fatigued\");\n\t}\n}\n","lSOAZ4FG44bT4jh1":"const infected = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.V0c3qBU1CMm8bmsW\",\n);\nconst fear = await fromUuid(\"Compendium.wfrp4e-core.items.pTorrE0l3VybAbtn\");\n\nconst infectedData = infected.toObject();\nconst fearData = fear.toObject();\nfearData.system.specification.value = 2;\nthis.actor.createEmbeddedDocuments(\"Item\", [fearData, infectedData], {\n\tfromEffect: this.effect.id,\n});\n","Lu27iXtJVkrJ8bOx":"return !args.skill?.name?.includes(game.i18n.localize(\"NAME.Stealth\"))\n","lU4s3UTtBkU38djI":"this.actor.addCondition(\"entangled\");\nconst msg = `<b>${this.actor.prototypeToken.name}</b> loses 1 Wound and gains 1 <strong>Entangled</strong> Condition.`;\nthis.script.scriptMessage(msg);\nthis.actor.modifyWounds(-1);\n","lvjcddwRiN9iGruy":"const test = await this.actor.setupCharacteristic(\"t\", {\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"challenging\" },\n});\nawait test.roll();\n\nif (test.failed) {\n\tconst ageAdded =\n\t\tMath.ceil(CONFIG.Dice.randomUniform() * 10) +\n\t\tMath.ceil(CONFIG.Dice.randomUniform() * 10);\n\tconst ws = Math.ceil(CONFIG.Dice.randomUniform() * 10);\n\tconst bs = Math.ceil(CONFIG.Dice.randomUniform() * 10);\n\tconst s = Math.ceil(CONFIG.Dice.randomUniform() * 10);\n\tconst t = Math.ceil(CONFIG.Dice.randomUniform() * 10);\n\tconst ag = Math.ceil(CONFIG.Dice.randomUniform() * 10);\n\tconst dex = Math.ceil(CONFIG.Dice.randomUniform() * 10);\n\n\tconst currentAge = Number.parseInt(this.actor.system.details.age.value);\n\n\tconst inline = `<a class=\"inline-roll\" data-tooltip=\"@TT\"><i class=\"fas fa-dice-d20\"></i>@ROLL</a>`;\n\tconst msg = `<p><b>${this.actor.prototypeToken.name}</b> ages by ${inline\n\t\t.replace(\"@ROLL\", ageAdded)\n\t\t.replace(\"@TT\", \"2d10\")} and loses</p>\n      <p>${inline.replace(\"@ROLL\", ws).replace(\"@TT\", \"1d10\")} <b>Weapon Skill</b></p>\n      <p>${inline.replace(\"@ROLL\", bs).replace(\"@TT\", \"1d10\")} <b>Ballistic Skill</b></p>\n      <p>${inline.replace(\"@ROLL\", s).replace(\"@TT\", \"1d10\")} <b>Strength</b></p>\n      <p>${inline.replace(\"@ROLL\", t).replace(\"@TT\", \"1d10\")} <b>Toughness</b></p>\n      <p>${inline.replace(\"@ROLL\", ag).replace(\"@TT\", \"1d10\")} <b>Agility</b></p>\n      <p>${inline.replace(\"@ROLL\", dex).replace(\"@TT\", \"1d10\")} <b>Dexterity</b></p>\n `;\n\tthis.script.scriptMessage(msg);\n\n\tconst characteristics = duplicate(this.actor.system.characteristics);\n\n\tcharacteristics.ws.initial -= ws;\n\tcharacteristics.bs.initial -= bs;\n\tcharacteristics.s.initial -= s;\n\tcharacteristics.t.initial -= t;\n\tcharacteristics.ag.initial -= ag;\n\tcharacteristics.dex.initial -= dex;\n\n\tthis.actor.update({\n\t\t\"system.characteristics\": characteristics,\n\t\t\"data.details.age.value\": ageAdded + currentAge,\n\t});\n}\n","lwVhn4bSXJ3eoT9q":"if (this.item.system.weaponGroup.value === \"basic\") {\n\tconst slash = this.item.system.qualities.value.find(\n\t\t(i) => i.name === \"slash\",\n\t);\n\tif (slash) {\n\t\tslash.value = \"2A\";\n\t}\n}\n","LxdLkPxH3SFvYrCJ":"if (args.effect.conditionId === \"ablaze\") {\n\targs.data.formula += ` - ${this.actor.system.characteristics.t.bonus}`;\n}\n","LXEUhHuXe8keEPI9":"const test = await this.actor.setupCharacteristic(\"wp\", {\n\tfields: { difficulty: \"average\" },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tconst stuns = Math.max(1, Math.abs(test.result.SL));\n\tthis.actor.addCondition(\"stunned\", stuns);\n}\n","LyAK0dVDS5L09yq2":"const caster = this.effect.sourceActor;\n\nif (caster) {\n\tconst bonus = caster.system.characteristics.wp.bonus;\n\tthis.actor.modifyWounds(bonus);\n\n\tthis.script.scriptMessage(\n\t\t`<strong>${this.actor.prototypeToken.name}</strong> regains ${bonus} Wounds`,\n\t);\n}\n","lYYkGzqNshiYc7WI":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"poisoned\");\n}\n","M0XhKnWjG14pk3iH":"return !args.skill?.name.includes(\"Концентрация\") && args.type !== \"channelling\" && args.skill?.name !== game.i18n.localize(\"NAME.Charm\") && !args.skill?.name.includes(\"Language (Magick)\") && args.type !== \"cast\"\n","M2FshTX4PjKFVU8y":"args.flags.earCount = Number.isNumeric(args.flags.earCount)\n\t? args.flags.earCount + 1\n\t: 1;\nif (args.characteristic === \"fel\") {\n\targs.fields.modifier -= 5;\n}\nif (\n\targs.flags.earCount === 2 &&\n\targs.skill?.name === game.i18n.localize(\"NAME.Perception\")\n) {\n\targs.fields.modifier -= 20;\n}\n","m3qEVO5fseV6KHXa":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.qn4ZpvTQIX4rcJDl\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","m58MpMZBblpq5LJu":"args.prefillModifiers.slBonus++;\nargs.prefillModifiers.successBonus++;\n","M5bh0heeafA2fQQ8":"if (args.test.spell?.getFlag(\"wfrp4e\", \"boonOfTzeentch\")) {\n\tif (\n\t\targs.test.result.minormis ||\n\t\targs.test.result.majormis ||\n\t\targs.test.result.catastrophicmis\n\t) {\n\t\tthis.script.scriptMessage(\n\t\t\t`<strong>${this.effect.name}</strong> quits your mind in disgust and erases itself from your grimoire!`,\n\t\t);\n\t\tthis.effect.sourceItem.delete();\n\t}\n}\n","m8qBlbH7ROoqa22o":"return args.options.reload\n","M9VgeYGiUO97ZUW4":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.hCadFsTRvLN9faaY\");\nconst data = item.toObject();\ndata.system.location.value = \"Jaw\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (!test.succeeded) {\n\targs.actor.addCondition(\"unconscious\");\n}\n","ma0sWhebqwdRHWvY":"if (!args.flags.trained) {\n\targs.flags.trained = true;\n\targs.fields.modifier += 10;\n}\n","maKr58mvvyKxFyC3":"if (\n\targs.item.type === \"prayer\" &&\n\t(args.item.damage.value || args.item.damage.dice)\n)\n\targs.item.damage.value += \"+1\";\n","masOBNgSi5HYkf3m":"return args.type !== \"cast\" && args.type !== \"channelling\"\n","mBcLf11upaHS8AQq":"this.actor.status.addArmour(1, { source: this.effect });\n","MCK6WyjwYT28lsTN":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.u0CFf3xwiyidD9T5\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","McLR9YcgVUG3MooC":"args.applyTB = false;\n","MDLttXplnNthncGr":"return args.type === \"cast\" && [\"death\", \"necromancy\", \"life\", \"light\", \"heavens\"].includes(args.spell?.system.lore.value)\n","MFKhU9vp8bQpHP3I":"const value = Number.parseInt(this.item.specification.value);\nconst name = this.actor.prototypeToken.name;\n\nif (game.user.isGM && game.user.targets.size) {\n\tgame.user.targets.forEach((t) => {\n\t\tt.actor.applyTerror(value, name);\n\t});\n\tgame.user.updateTokenTargets([]);\n} else {\n\tgame.wfrp4e.utility.postTerror(value, name);\n}\n","MfxWXZwaZUjGSBqw":"if (this.actor.hasCondition(\"ablaze\")) {\n\tthis.script.scriptNotification(\"Immune to Ablaze\");\n\tawait this.actor.hasCondition(\"ablaze\")?.delete();\n}\n","MfxzwJz2o9ho2hOM":"return args.skill?.name === \"Lore (Apothecary)\"\n","mgLGN1XPzPE4dReN":"args.fields.slBonus--;\n","MgMMoC4Umpg7fmNI":"// Apply changes when the mask is worn\n\nif (args.equipped) {\n\tthis.actor.createEmbeddedDocuments(\"ActiveEffect\", [\n\t\tthis.item.effects.contents[1]?.convertToApplied(),\n\t]);\n\tthis.script.scriptMessage(\n\t\t`${this.actor.name} dons the <strong>${this.item.name}</strong>. <br>\n      They cannot cast Spells or pray for Blessings and Miracles.<br>\n      If they wear the mask for more than an hour or benefit from any of its effects, they are exposed to @Corruption[moderate]{Moderate Corruption}. \n      `,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n\n// Notify of lingering effects when mask is removed\nelse if (!args.equipped) {\n\tawait this.item.effects.contents[0].delete();\n\tawait this.item.update({ name: (this.item.name += \" (Used)\") });\n\tthis.script.scriptMessage(\n\t\t`<strong>${this.item.name}</strong> on ${this.actor.name} has been taken off and loses its properties. However, the effects last for [[1d10+4]] days, after which they should be manually removed.`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n","MgTqCMRjxhezT73T":"return args.fields.hitLocation === \"head\" && args.weapon?.system.properties.qualities.pummel\n","MgZreqq3Jua10c8s":"return ![\"ws\", \"bs\", \"s\", \"fel\", \"ag\", \"t\", \"dex\"].includes(args.characteristic)\n","Mhb67xufvA9uWO21":"const actorSize =\n\tgame.wfrp4e.config.actorSizeNums[args.actor.details.size.value];\nconst attackerSize =\n\tgame.wfrp4e.config.actorSizeNums[args.attacker.details.size.value];\n\nif (attackerSize > actorSize) {\n\targs.actor.addCondition(\"prone\");\n\tthis.script.scriptMessage(\n\t\t`<strong>Tail Attack</strong>: ${args.actor.prototypeToken.name} is now <strong>Prone</strong>`,\n\t);\n}\n","MI2GgNi3fZtUCtQD":"return [\"int\", \"wp\"].includes(args.characteristic)\n","Mir4FMHQRdVqazAF":"const actorSize =\n\tgame.wfrp4e.config.actorSizeNums[args.actor.details.size.value];\nconst attackerSize =\n\tgame.wfrp4e.config.actorSizeNums[args.attacker.details.size.value];\n\nif (attackerSize > actorSize) {\n\tlet msg = `<b>Tongue Attack</b>: ${args.actor.prototypeToken.name} is now @Condition[Entangled]`;\n\tawait args.actor.addCondition(\"entangled\");\n\tif (actorSize <= 2) {\n\t\tmsg += \"and @Condition[Engaged]\";\n\t}\n\tthis.script.scriptMessage(msg, {\n\t\tspeaker: { alias: args.attacker.prototypeToken.name },\n\t});\n}\n","mJ9eMPub4epJSf00":"return args.weapon?.system.qualities.value.find(i => i.name === \"shield\") && this.actor.attacker\n","MJB6WbZSF6Briz30":"return args.item?.name === game.i18n.localize(\"NAME.Leadership\")\n","MkEcdViivk7abf1x":"args.actor.flags.meleeDamageIncrease += 1;\n","MnqQkXVp20Lw84I1":"const test = await this.actor.setupCharacteristic(\"t\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"difficult\" },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.script.scriptMessage(\n\t\tawait this.actor.applyBasicDamage(3, {\n\t\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\t\t\tsuppressMsg: true,\n\t\t}),\n\t);\n}\n","MnXny8SCh6OceJc9":"return args.characteristic === \"int\"\n","Mp8UjuCLa9jdzhBS":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n\nif (test.failed) {\n\tif (!this.actor.hasCondition(\"fatigued\")) {\n\t\tawait this.actor.addCondition(\"fatigued\");\n\t} else {\n\t\tawait this.actor.addCondition(\"blinded\");\n\t\tawait this.actor.addCondition(\"deafened\");\n\t}\n\n\tif (\n\t\t(this.actor.hasCondition(\"blinded\").conditionValue || 0) +\n\t\t\t(this.actor.hasCondition(\"deafened\").conditionValue || 0) >\n\t\tthis.actor.system.characteristics.i.bonus\n\t) {\n\t\tawait this.actor.addCondition(\"unconscious\");\n\t}\n}\n","mPxmCsXYirAIT913":"const key = await ItemDialog.create(\n\tItemDialog.objectToArray(game.wfrp4e.config.characteristics, this.effect.img),\n\t1,\n\t\"Choose Characteristic\",\n);\n\nthis.effect.updateSource({\n\tchanges: [\n\t\t{ key: `system.characteristics.${key[0].id}.modifier`, mode: 2, value: 10 },\n\t],\n});\n","mr8qm5Bg6k1idZ6Q":"return args.item?.name === \"Play (Lute)\"\n","mRvLsSVxNyt8LVZb":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.GRRN3XAKIpEVCY7z\");\nconst data = item.toObject();\ndata.name += \" (To Be Determined)\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","MSJWJEUrX7ZmMvAD":"return !(args.skill?.name.includes(game.i18n.localize(\"NAME.Ranged\")) || args.item?.isRanged || args.item?.name === game.i18n.localize(\"NAME.Charm\"))\n","Msygc7oQQPB5fw0b":"const test = this.effect.sourceTest;\nif (test.failed && (test.result.roll % 11 === 0 || test.result.roll === 100)) {\n\tconst points = await new Roll(\"1d10\").roll();\n\tgame.dice3d?.showForRoll(points);\n\tthis.actor.update({\n\t\t\"system.status.corruption.value\":\n\t\t\tthis.actor.system.status.corruption.value + points.total,\n\t});\n\tthis.script.scriptMessage(`Gains ${points.total} Corruption`);\n} else {\n\tconst points = this.effect.sourceTest.result.overcast.usage.other.current;\n\tthis.actor.update({\n\t\t\"system.status.corruption.value\":\n\t\t\tthis.actor.system.status.corruption.value - points,\n\t});\n\tthis.script.scriptMessage(`Loses ${points} Corruption`);\n}\n","mTnmPcjWmvScIBWY":"return args.skill?.name.includes(\"Концентрация\") || args.type === \"channelling\"\n","mV4Tmc0yfpL09KV7":"args.actor.addCondition(\"entangled\");\n","MwUzyAgd0yPnmZCH":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.klCJX0mNpXYH5AIx\");\nconst data = item.toObject();\ndata.name = data.name.replace(\"Target\", \"Strangers\");\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","Myl1Ishu9GBraYUZ":"this.actor.removeCondition(\"bleeding\");\n","mYL4i1vNlMl4vFYy":"return args.skill?.name !== game.i18n.localize(\"NAME.Perception\") && args.skill?.name !== game.i18n.localize(\"NAME.Track\");\n","mziJBUYcsrhkdcCJ":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"prone\");\n}\n","N2MeOlf0GjPiRcSb":"const test = await this.actor.setupCharacteristic(\"dex\", {\n\tcontext: { failure: \"Drops the item\" },\n});\nawait test.roll();\n","n5RJqJL9fdRIxkuN":"if (this.actor.system.status.advantage.value > 0) {\n\tawait this.actor.modifyAdvantage(-1);\n\tthis.script.scriptNotification(\"Advantage Subtracted\");\n} else {\n\treturn this.script.scriptNotification(\"Not enough Advantage!\", \"error\")\n}\n\nconst test = await this.actor.setupTrait(this.item);\nawait test.roll();\n","N7nGncsPrTz2ZbDA":"return !args.options.dodge || !this.actor.isMounted\n","N8hA6ysHCTlLd8Kj":"const characteristics = {\n\tws: 0,\n\tbs: 0,\n\ts: 0,\n\tt: 5,\n\ti: 15,\n\tag: 0,\n\tdex: 10,\n\tint: 15,\n\twp: 15,\n\tfel: 0,\n};\nconst skills = [\n\t\"Концентрация\",\n\t\"Хладнокровие\",\n\t\"Уклонение\",\n\t\"Артистизм (сказительство)\",\n\t\"Intuition\",\n\t\"Language (Magick)\",\n\t\"Lore (Magic)\",\n\t\"Perception\",\n];\nconst skillAdvancements = [5, 15, 10, 10, 15, 10, 10, 20];\nconst talents = [\"Arcane Magic\", \"Petty Magic\", \"Second Sight\"];\nconst trappings = [\n\t\"Hand Weapon\",\n\t\"Quarterstaff\",\n\t\"Ritual Dress incorporating many ingredients and fetishes\",\n];\nconst items = [];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\titems.push({\n\t\t\tname: trapping,\n\t\t\ttype: \"trapping\",\n\t\t\t\"system.trappingType.value\": \"clothingAccessories\",\n\t\t});\n\t\t//ui.notifications.warn(`Could not find ${trapping}`, {permanent : true})\n\t}\n}\n\nupdateObj.name = updateObj.name += ` ${this.effect.name}`;\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","N9kA46ZQ9LiRjy6T":"return args.skill?.name === game.i18n.localize(\"NAME.Haggle\") || args.skill?.name === game.i18n.localize(\"NAME.Gossip\");\n","Na7Nanl9YmxZlTo7":"return args.type !== \"cast\" && args.type !== \"channelling\"\n)\n","naF5EWr1CBkYRZTK":"if (args.opposedTest?.attackerTest?.item?.system?.isRanged) {\n\tconst choice = await Dialog.wait({\n\t\ttitle: this.effect.name,\n\t\tcontent: `<p>Abort damage with <strong>${this.effect.name}</strong>?`,\n\t\tbuttons: {\n\t\t\tyes: {\n\t\t\t\tlabel: \"Yes\",\n\t\t\t\tcallback: () => {\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t},\n\t\t\tno: {\n\t\t\t\tlabel: \"No\",\n\t\t\t\tcallback: () => {\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\n\tif (choice) {\n\t\targs.abort = `<strong>${this.effect.name}</strong>: Damage cancelled`;\n\t}\n}\n","ncIjDE6TFx88IQA1":"return args.skill?.name === game.i18n.localize(\"NAME.Climb\") || args.skill?.name === game.i18n.localize(\"NAME.Athletics\");\n","nCWAflBj7Si2BI1Q":"if (args.item.type === \"spell\" && args.item.system.lore.value !== \"petty\") {\n\targs.item.cn.value = Math.max(4, args.item.cn.value * 2);\n}\n","nD2QVg3DrPK3foMf":"args.actor\n\t.setupSkill(\"Уклонение\", { fields: { difficulty: \"average\" } })\n\t.then(async (test) => {\n\t\tawait test.roll();\n\t\tif (test.failed) {\n\t\t\tawait args.actor.addCondition(\"bleeding\");\n\t\t\tawait args.actor.addCondition(\"entangled\");\n\t\t}\n\t});\n","NdquQqyuOkGCj8Uo":"const darkvision = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.JQa5DLnTs2SEzRrc\",\n);\nlet fear = await fromUuid(\"Compendium.wfrp4e-core.items.Item.pTorrE0l3VybAbtn\");\nlet acutesense = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.9h82z72XGo9tfgQS\",\n);\nfear = fear.toObject();\nfear.system.specification.value = 1;\nacutesense = acutesense.toObject();\nacutesense.name += \" (Smell)\";\nthis.actor.createEmbeddedDocuments(\"Item\", [darkvision, fear, acutesense], {\n\tfromEffect: this.effect.id,\n});\n","NDvNGATDM2xPFJK0":"brokenbone = await fromUuid(\"Compendium.wfrp4e-core.items.hCadFsTRvLN9faaY\");\nteeth = await fromUuid(\"Compendium.wfrp4e-core.items.fBcZhOBn8IpoVqQ1\");\ntongue = await fromUuid(\"Compendium.wfrp4e-core.items.rkJA1DlK51QuRlJy\");\nbrokenbone = brokenbone.toObject();\nteeth = teeth.toObject();\ntongue = tongue.toObject();\n\nconst roll = await new Roll(\"1d10\").roll();\nroll.toMessage(this.script.getChatData({ flavor: \"Teeth Lost\" }));\n\nteeth.system.location.value = `${roll.total} ${teeth.system.location.value}`;\nbrokenbone.system.location.value = \"Jaw\";\nthis.actor.createEmbeddedDocuments(\"Item\", [brokenbone, teeth, tongue]);\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tfields: { difficulty: \"vhard\" },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"unconscious\");\n}\n","neaaVy6D6tfcst5P":"args.fields.slBonus += this.actor.characteristics.i.bonus;\n","nEaF3jbCiVYD8jia":"return args.skill?.name !== game.i18n.localize(\"NAME.Charm\") && !args.skill?.name.includes(game.i18n.localize(\"NAME.Lore\"));\n","ngMm7SgtVqVovFJG":"if (args.test.result.critical && args.test.result.critical !== \"Total Power\") {\n\targs.test.result.other.push(\n\t\t`<a class =\"table-click critical-roll\" data-modifier=\"20\" data-table = \"crit${args.test.result.hitloc.result}\"><i class=\"fas fa-list\"></i> Bonecrusher Critical (+20)</a> (only if Critical Cast selected)`,\n\t);\n}\n","nGTxNWBUBgTr87wU":"if (\n\targs.opposedTest.result.differenceSL >= 0 &&\n\targs.opposedTest.result.differenceSL <= 2 &&\n\targs.opposedTest.result.winner === \"attacker\"\n) {\n\tthis.script.scriptMessage(`Becomes lodged in the armour or flesh of the opponent. See @UUID[${this.item.uuid}]{${this.item.name}}.`, speaker : {alias : this.item.name}, {blind: true, whisper : ChatMessage.getWhisperRecipients(\"GM\")})\n}\n","nHJdlqbOP0ECgywb":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.CnydL8p3PVAuF98w\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","njPP9wDAsdh4WHIj":"if (\n\targs.totalWoundLoss > 0 &&\n\t[\"trait\", \"weapon\"].includes(args.opposedTest.attackerTest.item?.type)\n) {\n\tthis.script.scriptMessage(\n\t\t`<b>Infected: ${args.actor.name}</b> must pass an <b>Easy (+40) Endurance</b> Test or gain a @UUID[Compendium.wfrp4e-core.items.kKccDTGzWzSXCBOb]{Festering Wound}`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n","nkbTnaeBpthyhw4J":"const fortunePoints =\n\tthis.effect.sourceTest.result.overcast.usage.other.current;\nconst current = this.actor.status.fortune.value;\n\nthis.actor.update({ \"system.status.fortune.value\": fortunePoints + current });\n\nthis.script.scriptMessage(\n\t`<b>${\n\t\tthis.actor.prototypeToken.name\n\t}</b> fortune points increased from ${current} to ${fortunePoints + current}`,\n);\n","nkdKBJ8ItqWiRAWL":"// Apply changes when the mask is worn\n\nif (args.equipped) {\n\tthis.actor.createEmbeddedDocuments(\"ActiveEffect\", [\n\t\tthis.item.effects.contents[1]?.convertToApplied(),\n\t]);\n\tthis.script.scriptMessage(\n\t\t`${this.actor.name} dons the <strong>${this.item.name}</strong>. <br>\n        They gain +50 to Swim Tests and can breathe underwater.<br>\n        If they wear the mask for more than an hour or benefit from any of its effects, they are exposed to @Corruption[moderate]{Moderate Corruption}. \n        `,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n\n// Notify of lingering effects when mask is removed\nelse if (!args.equipped) {\n\tawait this.item.effects.contents[0].delete();\n\tawait this.item.update({ name: (this.item.name += \" (Used)\") });\n\tthis.script.scriptMessage(\n\t\t`<strong>${this.item.name}</strong> on ${this.actor.name} has been taken off and loses its properties. However, the effects last for [[1d10+4]] days, after which they should be manually removed.`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n","NkqtQaLEGYst0PUO":"if (this.actor.has(\"Magic Resistance\", \"talent\")) return\n\nconst item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.eowbsW6oHGSNJmxV\",\n);\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","NnA4zpuO6iUXKhH7":"if (\n\targs.opposedTest.attackerTest.item?.isMelee ||\n\t(args.opposedTest.attackerTest.item &&\n\t\t!args.opposedTest.attackerTest.item.name.includes(\"Ranged\"))\n) {\n\tconst AP = Number.parseInt(this.effect.sourceTest.result.SL);\n\targs.modifiers.ap.value += AP;\n\targs.modifiers.ap.magical += AP;\n\targs.modifiers.ap.details.push(`${this.effect.name} (${AP})`);\n}\n","NnDq4miIPNEtZUWb":"args.test.result.critModifier = args.test.result.critModifier || 0;\nargs.test.result.critModifier += 20;\n\nif (args.test.result.critical) {\n\targs.test.result.critical = `${game.i18n.localize(\"Critical\")} (+${\n\t\targs.test.result.critModifier\n\t})`;\n}\n","NNytXz5XFPrEF6dw":"if (\n\targs.opposedTest.result.hitloc.value === this.item.system.location.key &&\n\targs.totalWoundLoss > 0\n) {\n\targs.actor.addCondition(\"bleeding\", 1);\n}\n","NQSvFWhmBQAyx5Zz":"return args.item?.isRanged\n","NrVFrIXM8GnIbojv":"args.item.system.damage.value = `SB + ${this.actor.system.characteristics.fel.bonus}`;\n","nSXzktHyNjGUXjaw":"return args.item?.system.isRanged\n","nuIpPD4uaZRuJni8":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.qdMbxW09FUoYBzmB\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","nvrFhHHVq3KzirlR":"return !args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\"))\n","nxNqWmmF6mJTnrLo":"return args.weapon?.system.usesHands.includes(this.item.system.location.key);\n","nYtAjSArsNbrU2ob":"if ([\"ag\", \"i\", \"int\"].includes(args.characteristic)) {\n\targs.fields.modifier -= 10;\n} else if ([\"wp\"].includes(args.characteristic)) {\n\targs.fields.modifier += 10;\n}\n","nzh8d46l1ikhkz8Q":"return (args.type === \"weapon\" && (args.item.system.weaponGroup.value === \"blackpowder\" || args.item.system.weaponGroup.value === \"engineering\")) || (args.type === \"cast\" && args.item.system.lore.value === \"fire\")\n","o1zD8mej9TWKNxUq":"args.fields.slBonus -= 1;\n","o3JUBKLvE6bBxK2n":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tfields: { difficulty: \"average\" },\n});\nawait test.roll();\nif (test.failed) {\n\tawait this.actor.addCondition(\"prone\");\n\tlet injury = await fromUuid(\"Compendium.wfrp4e-core.items.ZhMADOqoo0y8Q9bx\");\n\tinjury = injury.toObject();\n\tconst toes = Math.clamped(Math.abs(test.result.SL) + 1, 1, 5);\n\tinjury.system.location.key =\n\t\tthis.item.system.location.key[0] + injury.system.location.value;\n\tif (injury.system.location.key[0] === \"r\") {\n\t\tinjury.system.location.value = `${toes} Right ${injury.system.location.value}s`;\n\t} else if (injury.system.location.key[0] === \"l\") {\n\t\tinjury.system.location.value = `${toes} Left ${injury.system.location.value}s`;\n\t}\n\tsetProperty(injury, \"system.wfrp4e.count\", toes);\n\tthis.actor.createEmbeddedDocuments(\"Item\", [injury]);\n}\n","O7lXFZLrLdFaShGR":"args.options.catfall = true;\n","o88xuUConwt0vFLw":"const points = this.effect.sourceTest.result.overcast.usage.other.current;\n\nthis.actor.update({\n\t\"system.status.fortune.value\":\n\t\tthis.actor.system.status.fortune.value + points,\n});\n\nthis.script.scriptMessage(`Gained ${points} Fortune Points`);\n","O9fc0hLHdkTgSuLg":"const bite = await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\");\nconst venom = await fromUuid(\"Compendium.wfrp4e-core.items.gFkRm9wS65qe18Xv\");\nconst biteData = bite.toObject();\nconst venomData = venom.toObject();\n\nbiteData.system.specification.value = 3 - this.actor.characteristics.s.bonus;\nvenomData.system.specification.value = \"Average\";\nthis.actor.createEmbeddedDocuments(\"Item\", [biteData, venomData], {\n\tfromEffect: this.effect.id,\n});\n","Oa9FmLXRRZRpLrrq":"const test = await this.actor.setupTrait(this.item);\nawait test.roll();\n","obIXhQXKFyyQoNNV":"this.actor\n\t.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t\tfields: { difficulty: \"average\" },\n\t})\n\t.then(async (test) => {\n\t\tawait test.roll();\n\t\tif (test.failed) {\n\t\t\tthis.actor.modifyWounds(-1);\n\t\t\tthis.script.scriptMessage(\"Takes 1 Damage\");\n\t\t}\n\t});\n","ocBW3osTFnb5JCfe":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.MVI0lXcg6vvtooAF\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","OCFrGXAYfo9OYnhc":"return args.item?.system.magicMissile?.value || args.item?.system.attackType\n","OcQe0zfksf1DCJYe":"args.actor.system.characteristics.s.value += 30;\nargs.actor.system.characteristics.t.value += 30;\n\nargs.actor.system.characteristics.s.bonus += 3;\nargs.actor.system.characteristics.t.bonus += 3;\n\nif (args.actor.system.characteristics.s.value > 100) {\n\targs.actor.system.characteristics.s.value = 100;\n\targs.actor.system.characteristics.s.bonus = 10;\n}\n\nif (args.actor.system.characteristics.t.value > 100) {\n\targs.actor.system.characteristics.t.value = 100;\n\targs.actor.system.characteristics.t.bonus = 10;\n}\n","oDNfCNyt5KaUYmg2":"if (args.opposedTest.result.winner === \"defender\") {\n\tconst roll = Math.ceil(CONFIG.Dice.randomUniform() * 10);\n\tlet msg = `Rolled ${roll}.`;\n\tif (roll >= 7) {\n\t\tmsg = `Attack hits with an SL of ${roll - 6}.`;\n\t}\n\tthis.script.scriptMessage(msg, {\n\t\tblind: true,\n\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t});\n}\n","OeCgX3hIsfLfmGvC":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Perception\"));\nawait test.roll();\nif (test.succeeded) {\n\tthis.actor.removeCondition(\"surprised\");\n}\n","OeKeQAAcJhdI4Qky":"if (\n\tthis.actor.hasCondition(\"stunned\") ||\n\tthis.actor.hasCondition(\"unconscious\")\n) {\n\tthis.script.scriptNotification(\"Disabled!\");\n\tawait this.effect.update({ disabled: true });\n}\n","oEsUsI74yGTZ9CwU":"return args.item?.name === game.i18n.localize(\"NAME.CharmAnimal\")\n","OEy2lxvic37dRBEt":"let filters = [\n\t{\n\t\tproperty: \"type\",\n\t\tvalue: \"spell\",\n\t},\n\t{\n\t\tproperty: \"system.lore.value\",\n\t\tvalue: \"petty\",\n\t},\n];\n\nconst petty = await game.wfrp4e.apps.ItemDialog.createFromFilters(\n\tfilters,\n\t3,\n\t\"Choose 3 Petty Spells\",\n);\n\nfilters = [\n\t{\n\t\tproperty: \"type\",\n\t\tvalue: \"spell\",\n\t},\n\t{\n\t\tproperty: \"system.lore.value\",\n\t\tvalue: \"\",\n\t},\n];\n\nconst arcane = await game.wfrp4e.apps.ItemDialog.createFromFilters(\n\tfilters,\n\t3,\n\t\"Choose 3 Arcane Spells\",\n);\n\nconst items = petty.concat(arcane).map((i) => i.toObject());\n\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n","ofddAHvzn1xUueSG":"args.AP.head.value -= tinDifference(args.AP.head.layers);\nargs.AP.body.value -= tinDifference(args.AP.body.layers);\nargs.AP.lArm.value -= tinDifference(args.AP.lArm.layers);\nargs.AP.rArm.value -= tinDifference(args.AP.rArm.layers);\nargs.AP.rLeg.value -= tinDifference(args.AP.rLeg.layers);\nargs.AP.lLeg.value -= tinDifference(args.AP.lLeg.layers);\n\nfunction tinDifference(layers) {\n\tconst metalAP = layers\n\t\t.filter((i) => i.metal)\n\t\t.reduce((prev, current) => prev + current.value, 0);\n\n\tconst tinAP = layers\n\t\t.filter((i) => i.metal)\n\t\t.reduce((prev, current) => prev + Math.max(0, current.value - 2), 0);\n\n\treturn metalAP - tinAP;\n}\n","Ofn6vDbP3fZ4UlSc":"args.fields.modifier += -20;\n","oGdsGPgJWcyWkiWl":"this.actor.addCondition(\"broken\");\n\nif (this.actor.has(game.i18n.localize(\"NAME.Undead\"))) {\n\tthis.script.scriptMessage(\n\t\tawait this.actor.applyBasicDamage(this.effect.sourceTest.result.damage, {\n\t\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\t\t\tsuppressMsg: true,\n\t\t}),\n\t);\n}\n","ogJBAXTXyhTqACPO":"return args.item?.system.attackType !== \"melee\"\n","OgSI0Z6SHjYuqKIz":"let blows = this.item.getFlag(\"wfrp4e\", \"blows\") || 0;\nconst difficulties = Object.keys(game.wfrp4e.config.difficultyLabels);\n\nblows = Math.clamped(blows, 0, difficulties.length - 1);\nif (this.item.system.protects[args.opposedTest.result.hitloc.value]) {\n\tconst difficulty = difficulties[blows];\n\tthis.actor\n\t\t.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\t\t\tfields: { difficulty },\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: ` - ${this.effect.name}`,\n\t\t})\n\t\t.then(async (test) => {\n\t\t\tawait test.roll();\n\t\t\tif (test.failed) {\n\t\t\t\tthis.script.scriptMessage(\n\t\t\t\t\t`${this.actor.name} must break from combat and flee until they pass a <strong>Challenging (+0) Willpower</strong> Test`,\n\t\t\t\t);\n\t\t\t\tthis.item.setFlag(\"wfrp4e\", \"failedCool\", true);\n\t\t\t}\n\t\t});\n}\n","OGX4BneaYAnV25TO":"const chatData = { whisper: ChatMessage.getWhisperRecipients(\"GM\") };\nlet message = \"\";\n\nconst wounds = duplicate(this.actor.status.wounds);\nconst regenRoll = await new Roll(\"1d10\").roll();\nconst regen = regenRoll.total;\n\nif (wounds.value >= wounds.max) return\n\nif (wounds.value > 0) {\n\twounds.value += regen;\n\tif (wounds.value > wounds.max) {\n\t\twounds.value = wounds.max;\n\t}\n\tmessage += `<b>${this.actor.name}</b> regains ${regen} Wounds.`;\n\n\tif (regen === 10) {\n\t\tmessage += \"<br>Additionally, they regenerate a Critical Wound.\";\n\t}\n} else if (regen >= 8) {\n\tmessage += `<b>${this.actor.name}</b> rolled a ${regen} and regains 1 Wound.`;\n\twounds.value += 1;\n\tif (regen === 10) {\n\t\tmessage += \"<br>Additionally, they regenerate a Critical Wound.\";\n\t}\n} else {\n\tmessage += `<b>${this.actor.name}</b> Regenerate roll of ${regen} - No effect.`;\n}\n\nawait this.actor.update({ \"system.status.wounds\": wounds });\nthis.script.scriptMessage(message, {\n\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n});\n","oHenUKtaS3jT5xQn":"let item = await fromUuid(\"Compendium.wfrp4e-core.items.4xF7M6ylIiGntekh\");\nitem = item.toObject();\nitem.name = this.effect.name;\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","ohl803m0tUwNfKAk":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\");\nconst data = item.toObject();\ndata.system.specification.value = 5 - this.actor.characteristics.s.bonus;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","OicQSEVZBbqLtrcf":"const choice = await ItemDialog.create(\n\tthis.actor.itemTypes.critical,\n\tthis.effect.sourceTest.result.overcast.usage.other.current || 1,\n\t\"Choose the Critical Wounds to heal (cannot reattach body parts)\",\n);\n\nthis.script.scriptMessage(\n\t`Healed <strong>${choice.map((i) => i.name).join(\", \")}</strong>`,\n);\nthis.actor.deleteEmbeddedDocuments(\n\t\"Item\",\n\tchoice.map((i) => i.id),\n);\n","OJMgS8ZQv0j4tEFf":"return [\"ws\", \"bs\", \"s\", \"fel\", \"ag\", \"t\", \"dex\"].includes(args.characteristic)\n","okr3TtzpFoefUuJS":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.EaqlLRQigwnsEAXX\");\nconst data = item.toObject();\ndata.system.location.value = \"Collar Bone\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","okW06V9UiPC4Vcrn":"const characteristics = {\n\tws: 5,\n\tbs: 0,\n\ts: 5,\n\tt: 5,\n\ti: 10,\n\tag: 0,\n\tdex: 0,\n\tint: 0,\n\twp: 5,\n\tfel: 5,\n};\nconst skills = [\"Хладнокровие\", \"Уклонение\"];\nconst skillAdvancements = [10, 10];\nconst talents = [\"Combat Reflexes\", \"Resolute\"];\nconst trappings = [\n\t\"Leather Jack\",\n\t\"Leather Leggings\",\n\t\"Leather Skullcap\",\n\t\"Hand Weapon\",\n\t\"Spear\",\n\t\"Shield\",\n];\nconst items = [];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${trapping}`, { permanent: true });\n\t}\n}\n\nupdateObj.name = updateObj.name += ` ${this.effect.name}`;\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","OMAUX1fnHyIpplul":"return ![\"fel\", \"dex\"].includes(args.characteristic)\n","OnkEe4ISru1hjJWP":"this.actor.flags.useless[this.item.system.location.key] = true;\n","Op88kMtimSEWlY2h":"if (this.item.system.quantity.value) {\n\tthis.item.system.reduceQuantity();\n\tconst actor = Array.from(game.user.targets)[0]?.actor || this.actor;\n\tactor.applyEffect({\n\t\teffectData: [this.item.effects.contents[1].convertToApplied()],\n\t});\n} else {\n\tthis.script.scriptNotification(\"None left!\", \"error\");\n}\n","oPg4se8iQRD14kmB":"const filters = [\n\t{\n\t\tproperty: \"type\",\n\t\tvalue: \"weapon\",\n\t},\n\t{\n\t\tproperty: \"system.weaponGroup.value\",\n\t\tvalue: [\"twohanded\", \"polearm\"],\n\t},\n];\n\nlet items = await game.wfrp4e.apps.ItemDialog.createFromFilters(\n\tfilters,\n\t1,\n\t\"Choose an appropriate Polearm or Two-Handed Weapon\",\n);\nitems = items.map((i) => i.toObject());\n\nitems.forEach((i) => equip(i));\n\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","oqgd9G6oI1ncPYLw":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.CV9btQn09S9Fn8Jk\");\nthis.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], {\n\tfromEffect: this.effect.id,\n});\n","OqLKL0PiCvYH2QxW":"if (args.test.options.wallcrawler) {\n\tif (Number.parseInt(args.test.result.SL) < 0 || args.test.failed) {\n\t\tif (Number.parseInt(args.test.result.SL) < 0) {\n\t\t\targs.test.result.SL = \"+0\";\n\t\t\targs.test.result.description = game.i18n.localize(\"ROLL.MarginalSuccess\");\n\t\t}\n\t\targs.test.result.outcome = \"success\";\n\t\targs.test.result.other.push(\n\t\t\t`<strong>${this.effect.name}</strong>: Minimum +0 SL`,\n\t\t);\n\t}\n}\n","OqxeuZfZDfm9ax6h":"this.actor.system.status.addArmour(1, {\n\tlocations: \"head\",\n\tsource: this.effect,\n});\n","oV81zgbZsuTFG6L2":"const caster = this.effect.sourceActor;\n\nthis.actor.modifyWounds(caster.system.characteristics.fel.bonus);\n\nthis.script.scriptMessage(\n\t`Healed ${caster.system.characteristics.fel.bonus} Wounds`,\n);\n","OvIELZLvnlN2H2uw":"args.update({\n\tlight: {\n\t\tdim: 2,\n\t\tbright: 1,\n\t\talpha: 0.5,\n\t\tanimation: {\n\t\t\tspeed: 4,\n\t\t\tintensity: 4,\n\t\t\ttype: \"pulse\",\n\t\t},\n\t\tcolor: \"#949bff\",\n\t},\n});\n","oW1gtYVT5nrxDjM7":"return args.characteristic !== \"ag\"\n","oWa7RkScnl6lR5vd":"if (args.test.characteristicKey === \"wp\") {\n\tif (args.test.failed) {\n\t\tconst item = await fromUuid(\n\t\t\t\"Compendium.wfrp4e-core.items.AGcJl5rHjkyIQBPP\",\n\t\t);\n\t\tconst data = item.toObject();\n\t\tthis.actor.createEmbeddedDocuments(\"Item\", [data]);\n\n\t\tthis.script.scriptMessage(\n\t\t\t`Willpower Test failed, <b>${this.actor.prototypeToken.name}</b> gains @UUID[Compendium.wfrp4e-core.items.AGcJl5rHjkyIQBPP] for [[1d10]] hours`,\n\t\t);\n\t}\n}\n","oWM43EdUiyHgUlfW":"if (\n\targs.test.item &&\n\targs.test.item.name === game.i18n.localize(\"NAME.ConsumeAlcohol\")\n)\n\targs.test.preData.canReverse = true;\n","OXoqtpOdfkURZbuL":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.yRhhOlt18COq4e1q\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","OxsBnnVI3Smpknpb":"if (\n\tthis.actor.status.advantage.value &&\n\t!this.actor.sameSideAs(this.effect.sourceActor)\n) {\n\tthis.actor.modifyAdvantage(-1);\n\tthis.script.scriptNotification(`${this.actor.name} loses 1 Advantage`);\n}\n","Oz7pWF9mEc1pQypj":"const roll = await new Roll(\"1d10\").roll();\nroll.toMessage({\n\tflavor: this.effect.name,\n\tspeaker: { alias: this.actor.prototypeToken.name },\n});\nthis.actor.addCondition(\"stunned\", roll.total);\n","p222EiR8RRtlPm31":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"hard\" },\n});\nawait test.roll();\nreturn test.failed;\n","P29tT1eMMdAw3CPF":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.3S4OYOZLauXctmev\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tfields: { difficulty: \"hard\" },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"unconscious\");\n}\n","pAgiAGyaLJY10894":"return args.skill?.name === game.i18n.localize(\"NAME.Charm\");\n","pBMioPUtDn1mk9f5":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.5KP9sOoLSGvj9EXp\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","PBW6IZtwawNHxB6y":"return args.options.dodge && this.actor.isMounted\n","PdClojv7yNgQpOUc":"return args.skill?.name !== game.i18n.localize(\"NAME.Endurance\");\n","PeZYj8b0vedyJj00":"// This script needs to be separate because equipTransfer is off on the other effect, and thus won't execute when added to an actor\n\nconst mainEffect = this.item.effects.contents[0];\nif (mainEffect.name.includes(\"(Lore)\")) {\n\tconst choice = await ItemDialog.create(\n\t\tItemDialog.objectToArray(game.wfrp4e.config.magicLores, this.item.img),\n\t\t1,\n\t\t\"Choose Lore\",\n\t);\n\tif (choice.length) {\n\t\tmainEffect.update({\n\t\t\tname: mainEffect.name.replace(\"Lore\", choice[0].name),\n\t\t});\n\t\tthis.item.update({ name: (this.item.name += ` (${choice[0].name})`) });\n\t}\n}\n\nthis.effect.delete();\n","pG5OVokZzCRHIrwz":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.mgeiaDZXei7JBEgo\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","Pg9C6nJX5QHIdqa9":"return !args.item?.system.attackType\n","Ph3TdQw1lGiFr049":"if (\n\t!args.test.context.phantasmal &&\n\t(this.actor.isOpposing || args.test.context.defending) &&\n\targs.test.result.roll % 11 === 0 &&\n\targs.test.succeeded &&\n\t[\"Language (Magick)\", \"Уклонение\"].includes(args.test.item?.name)\n) {\n\targs.test.context.phantasmal = true; // Flag so items aren't readded if test is edited\n\tconst text = `<strong>${this.effect.name}</strong>: Adding Unstable and  Ward`;\n\targs.test.result.other.push(text);\n\tthis.script.scriptNotification(text);\n\n\tconst ward = await fromUuid(\"Compendium.wfrp4e-core.items.Bvd2aZ0gQUXHfCTh\");\n\tconst wardData = ward.toObject();\n\twardData.system.specification.value = 9;\n\n\tconst unstable = await fromUuid(\n\t\t\"Compendium.wfrp4e-core.items.D0ImWEIMSDgElsnl\",\n\t);\n\tconst unstableData = unstable.toObject();\n\tthis.actor.createEmbeddedDocuments(\"Item\", [wardData, unstableData], {\n\t\tfromEffect: this.effect.id,\n\t});\n}\n","pHyXdPnWwoFrUA5n":"return !args.skill?.name.includes(game.i18n.localize(\"NAME.Entertain\"));\n","PI1QNaKFeqood6d7":"if (args.attackerTest.weapon && args.defenderTest.weapon) {\n\tlet attackerReach =\n\t\tgame.wfrp4e.config.reachNum[args.attackerTest.weapon.reach.value];\n\tlet defenderReach =\n\t\tgame.wfrp4e.config.reachNum[args.defenderTest.weapon.reach.value];\n\n\tif (attackerReach === defenderReach)\n\t\tattackerReach = attackerReach < 7 ? attackerReach + 1 : attackerReach;\n\n\tattackerReach = game.wfrp4e.utility.findKey(\n\t\tattackerReach,\n\t\tgame.wfrp4e.config.reachNum,\n\t);\n\tdefenderReach = game.wfrp4e.utility.findKey(\n\t\tdefenderReach,\n\t\tgame.wfrp4e.config.reachNum,\n\t);\n\n\targs.attackerTest.weapon.reach.value = attackerReach;\n\targs.defenderTest.weapon.reach.value = defenderReach;\n}\n","PjRxGuUDKGmSmVDc":"fromUuid(\"Compendium.wfrp4e-core.items.EO05HX7jql0g605A\").then((item) => {\n\titem = item.toObject();\n\titem.system.specification.value = this.actor.characteristics.ag.value;\n\tthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\t\tfromEffect: this.effect.id,\n\t});\n});\n","pLKv4moua6XhNdmA":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.1dUizIgLBgn4jICC\");\nconst data = item.toObject();\ndata.name += \" (Woodlands)\";\nthis.actor.createEmbeddedDocuments(\n\t\"Item\",\n\tArray(this.effect.sourceTest.result.overcast.usage.other.current).fill(data),\n\t{ fromEffect: this.effect.id },\n);\n","PmELrzD3RmF9qKkO":"if (this.item.system.specification.value === \"Size\") {\n\tconst choice = await ItemDialog.create(\n\t\tItemDialog.objectToArray(game.wfrp4e.config.actorSizes, this.item.img),\n\t\t1,\n\t\t\"Choose Size\",\n\t);\n\tif (choice[0]) {\n\t\tthis.item.updateSource({ \"system.specification.value\": choice[0].name });\n\t\tthis.effect.updateSource({\n\t\t\tname: `${this.effect.name} (${choice[0].name})`,\n\t\t});\n\t}\n}\n","PMISUsaEDBA7D3od":"// After consumption, the user gains the Magic Resistance 3 Creature Trait,\n// reducing the SL of any spell affecting it by 3.\n// This effect lasts for one hour.\nconst hasMagicResistance = this.actor.has(\"Magic Resistance\");\n\nif (hasMagicResistance === undefined) {\n\tfromUuid(\"Compendium.wfrp4e-core.items.yrkI7ATjqLPDTFmZ\").then((trait) => {\n\t\tconst traitItem = trait.toObject();\n\t\ttraitItem.system.specification.value = 2;\n\t\tthis.actor.createEmbeddedDocuments(\"Item\", [traitItem], {\n\t\t\tfromEffect: this.effect.id,\n\t\t});\n\t});\n\tthis.script.scriptMessage(\n\t\t`<p><strong>${this.actor.prototypeToken.name}</strong> has gained the Magic Resistance Trait. This effect lasts for one hour.</p>`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\"), blind: true },\n\t);\n}\n\nif (hasMagicResistance) {\n\t// Multiple doses may be consumed at once, with each one adding an additional 1 to the Magic Resistance rating and increasing the duration by one hour.\n\tlet msg = `<p><strong>${\n\t\tthis.actor.prototypeToken.name\n\t}</strong> has enhanced their Magic Resistance by 1 to Rating ${Number.parseInt(\n\t\thasMagicResistance.system.specification.value,\n\t)}. This effect lasts for one hour.</p>`;\n\n\t// Resist toxic effect\n\tthis.actor\n\t\t.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\t\t\tfields: { difficulty: \"challenging\" },\n\t\t})\n\t\t.then(async (test) => {\n\t\t\tawait test.roll();\n\n\t\t\t// If they fail ...\n\t\t\tif (!test.succeeded) {\n\t\t\t\tmsg += `<p>However, they begin to ooze the thick, poisonous slime that coats every Dreadmaw.  They have gained 1 Poisoned Condition now and should continue to receive an additional @Condition[Poisoned] Condition at the end of each of the round.</p>\n      <p>If they are still alive at the end of 10 rounds, the effect ends and all Poisoned Conditions gained from ${this.effect.name} are removed.</p>`;\n\t\t\t\tthis.actor.addCondition(\"poisoned\", 1);\n\t\t\t}\n\t\t\tthis.script.scriptMessage(msg, {\n\t\t\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t\t\t\tblind: true,\n\t\t\t});\n\t\t});\n}\n","pnB9TzSEytkxk3Rb":"return this.actor.hasSystemEffect(\"infighting\")\n","pNPjXEoQGHLKzq0r":"const talent = this.actor.has(\"Arcane Magic (Light)\", \"talent\");\nconst demon = this.actor.has(game.i18n.localize(\"NAME.Daemonic\"));\n\nif (!talent) {\n\tawait this.actor.addCondition(\"blinded\");\n}\n\nif (demon) {\n\tawait this.actor.addCondition(\"stunned\");\n}\n","PoNnT5EqvLj2r5yf":"return args.skill?.name !== game.i18n.localize(\"NAME.OutdoorSurvival\") && args.skill?.name !== game.i18n.localize(\"NAME.Track\");\n","pPV9oEydXb7oi6jX":"if (args.totalWoundLoss > 0) {\n\targs.actor.addCondition(\"ablaze\");\n}\n","pq1YQffxtOcqCRTn":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (!test.succeeded) {\n\tthis.actor.addCondition(\"prone\");\n}\n","pR4Q2OnPxXtwRVli":"const criticals = this.actor.itemTypes.critical;\n\nif (criticals.length) {\n\tthis.script.scriptNotification(\"Cannot suffer Critical Wounds\");\n\tthis.actor.deleteEmbeddedDocuments(\n\t\t\"Item\",\n\t\tcriticals.map((i) => i.id),\n\t);\n}\n\nif (getProperty(args.data, \"system.status.wounds.value\") === 0) {\n\tthis.script.scriptNotification(\n\t\t`Dormant for ${Math.ceil(CONFIG.Dice.randomUniform() * 10)} Rounds`,\n\t);\n}\n","PVjaKAHTKDA0rA9J":"const test = await this.actor.setupSkill(\"Уклонение\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n","PwqTmw7rsG8hzqCS":"if (args.test.result.critical && args.test.result.roll % 10 === 0) {\n\tgame.wfrp4e.tables\n\t\t.findTable(\"knuckleduster-diseases\")\n\t\t.roll()\n\t\t.then((roll) => {\n\t\t\tconst results = roll.results[0];\n\n\t\t\tthis.script.scriptMessage(\n\t\t\t\t`<strong>${this.actor.name}</strong> contracts @UUID[Compendium.${results.documentCollection}.${results.documentId}]{${results.text}}`,\n\t\t\t\t{ blind: true, whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t\t\t);\n\t\t});\n}\n","px7eEdhOEt7zOTrq":"return [\"int\", \"t\", \"wp\", \"i\"].includes(args.characteristic)\n","pzimrxrqpv282Oqb":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.TaYriYcJkFuIdBKp\");\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","pzknBcJtZWeliE27":"return args.item?.name === game.i18n.localize(\"NAME.Leadership\") || args.item?.name === game.i18n.localize(\"NAME.Cool\")\n","q0LvphC8RDSyR0oY":"const choice = await ItemDialog.create(\n\tItemDialog.objectToArray(\n\t\t{\n\t\t\tws: game.wfrp4e.config.characteristics.ws,\n\t\t\tt: game.wfrp4e.config.characteristics.t,\n\t\t\tag: game.wfrp4e.config.characteristics.ag,\n\t\t\twp: game.wfrp4e.config.characteristics.wp,\n\t\t},\n\t\tthis.effect.img,\n\t),\n\t1,\n\t\"Choose Characteristic\",\n);\n\nthis.effect.updateSource({ \"flags.wfrp4e.characteristic\": choice[0].id });\n","Q1trEhtqjIiDvFPF":"args.prefillModifiers.modifier -=\n\t10 * getProperty(this.effect, \"flags.wfrp4e.value\");\n","q3nRyXaxksdCiLFM":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.j6v78dnOOdCB6c3d\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","Q4EQgP4gZR8TTm7S":"let penalty = 0;\nif (args.item?.system.attackType) {\n\tpenalty -= 30;\n}\nif (args.actor.has(\"Second Sight\", \"talent\")) penalty += 10;\n\nargs.prefillModifiers.modifier += penalty;\n","Q68WiUWY7GxiXBbT":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.9GNpAqgsKzxZKJpp\");\nconst data = item.toObject();\ndata.system.specification.value = \"When Alone\";\ndata.effects[0].disabled = true;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","Q9EmlWmuDac83cJw":"return args.skill?.name === game.i18n.localize(\"NAME.Climb\")  || args.skill?.name?.includes(game.i18n.localize(\"NAME.Stealth\"));\n","qAEZgtu5CrfUkxhx":"if (args.test.options.staunchBleeding) {\n\tif (args.test.succeeded) {\n\t\tlet staunch = Number(args.test.result.SL) + 1;\n\t\tif (args.test.options.fieldDressing && args.test.result.reversed) {\n\t\t\tstaunch = Math.min(1, Number(args.test.result.SL)) + 1;\n\t\t}\n\t\targs.test.result.other.push(\n\t\t\t`<b>${this.actor.name}</b> removed <b>${staunch}</b> Bleeding conditions from the patient.`,\n\t\t);\n\t} else if (\n\t\tthis.actor.characteristics.int.bonus + Number(args.test.result.SL) <\n\t\t0\n\t) {\n\t\targs.test.result.other.push(\n\t\t\t\"The patient contracts a @UUID[Compendium.wfrp4e-core.items.Item.1hQuVFZt9QnnbWzg]{Minor Infection}.\",\n\t\t);\n\t}\n}\n","QaGNsqKm2Nf0zGVm":"return [\"t\", \"int\", \"wp\", \"fel\"].includes(args.characteristic)\n","qaVde0sTuMBRi2nl":"return [\"NAME.Evaluate\", \"NAME.Gamble\"].map(i => game.i18n.localize(i)).includes(args.skill?.name)\n","QbIYnshWeP1U8SUy":"args.applyAP = false;\nargs.applyTB = false;\n","qcyl98GYD55BkJsD":"this.actor.status.encumbrance.state = 0;\nthis.actor.status.encumbrance.pct = 0;\n","QF8LanKNoAlTkQG0":"this.actor.system.status.encumbrance.max += 2;\n","Qgn92fZyc3Psn8QJ":"if (\n\targs.test.options.useOnesAttractive &&\n\t(args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") ||\n\t\targs.test.result.roll <= args.test.target)\n) {\n\tconst SL =\n\t\tMath.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10);\n\tconst ones = Number(args.test.result.roll.toString().split(\"\").pop());\n\n\tif (ones > SL)\n\t\targs.test.data.result.SL = `+${\n\t\t\tones + args.test.successBonus + args.test.slBonus\n\t\t}`;\n\targs.test.result.other.push(\n\t\t`<b>${this.effect.name}</b>: Used unit dice as SL`,\n\t);\n}\n","qijgjcOBCDmhglRX":"return args.skill?.name === game.i18n.localize(\"NAME.SleightOfHand\");\n","qjli5evn8UA9uTeZ":"return args.actor.uuid === this.effect.sourceActor.uuid;\n","qK4q4o6cQhcGzFX3":"const fear = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.pTorrE0l3VybAbtn\",\n);\nconst leader = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.vCgEAetBMngR53aT\",\n);\nconst fearData = fear.toObject();\nconst leaderData = leader.toObject();\nfearData.system.specification.value =\n\tthis.effect.sourceTest.result.overcast.usage.other.current;\ntalents = new Array(1 + this.effect.sourceTest.result.overcast.available).fill(\n\tleaderData,\n); // Assume any unused overcast is for war leader\nthis.actor.createEmbeddedDocuments(\"Item\", [fearData].concat(talents), {\n\tfromEffect: this.effect.id,\n});\n","Qk7t2l5ep9RDVpgE":"args.options.diceman = true;\n","QKjR6P1WEHXf4K77":"args.fields.slBonus -= 2;\n","QKTA2TqZ77pvHWSJ":"this.actor.getActiveTokens().forEach((t) =>\n\tt.document.update({\n\t\tlight: {\n\t\t\tdim: 0,\n\t\t\tbright: 0,\n\t\t\talpha: 0.5,\n\t\t\tanimation: {\n\t\t\t\ttype: \"\",\n\t\t\t},\n\t\t\tcolor: \"#000000\",\n\t\t},\n\t}),\n);\n","qmOt7h17hGAKqQe0":"const choice = await Dialog.wait({\n\ttitle: this.effect.name,\n\tcontent: `<p><strong>${this.effect.name}</strong>: Is this a ranged or magical attack that orignates outside the Dome?</p>`,\n\tbuttons: {\n\t\tyes: {\n\t\t\tlabel: \"Yes\",\n\t\t\tcallback: () => {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t\tno: {\n\t\t\tlabel: \"No\",\n\t\t\tcallback: () => {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t},\n\t},\n});\n\nif (choice) {\n\targs.ward = 6;\n}\n","QoEOxRruQXYrZrv3":"const filters = [\n\t{\n\t\tproperty: \"type\",\n\t\tvalue: \"skill\",\n\t},\n\t{\n\t\tproperty: \"name\",\n\t\tvalue: /Melee/gm,\n\t\tregex: true,\n\t},\n];\n\nlet items = await game.wfrp4e.apps.ItemDialog.createFromFilters(\n\tfilters,\n\t2,\n\t\"Choose 2 Skills to add +20\",\n);\nitems = items.map((i) => i.toObject());\nitems.forEach((i) => (i.system.advances.value = 20));\n\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n","QPVVDPcJ4Xi5FmQl":"if (\n\tthis.actor.hasCondition(\"fatigued\") &&\n\targs.opposedTest.result.hitloc.value === \"head\" &&\n\t(args.opposedTest.attackerTest.result.critical ||\n\t\targs.actor.status.wounds.value - args.totalWoundLoss < 0)\n) {\n\tconst test = await this.actor.setupSkill(\n\t\tgame.i18n.localize(\"NAME.Endurance\"),\n\t\t{\n\t\t\tfields: { difficulty: \"average\" },\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: ` - ${this.effect.name}`,\n\t\t},\n\t);\n\tawait test.roll();\n\tif (test.failed) {\n\t\tthis.actor.addCondition(\"unconscious\");\n\t}\n}\n","QQ2gHThZHdO4yLLX":"return args.skill?.name === game.i18n.localize(\"NAME.Swim\");\n","QqkE7rlqhkeRohFD":"return !([\"cast\", \"channelling\"].includes(args.type) && this.actor.hasCondition(\"fatigued\"))\n","QQPiREc50HT5W2Tr":"if (args.item.type === \"weapon\" && args.item.weaponGroup.value === \"brawling\")\n\targs.item.damage.value += \" + 1\";\n","QqybHxNCzPEzG1Qh":"return args.fields.dualWielding || args.options.dualWieldOffhand\n","QRSACifDrvojIXHB":"if (!this.actor.effects.find((e) => e.isCondition)) {\n\treturn this.script.scriptNotification(\"No Conditions on this Actor\")\n}\n\nconst choice = await ItemDialog.create(\n\tthis.actor.effects.filter((i) => i.isCondition),\n\t1,\n\t\"Choose a Condition\",\n);\n\nif (choice[0]) {\n\tthis.actor.removeCondition(choice[0].conditionId);\n}\n","qSwCYMMiIHmSV1X5":"if (this.item.system.quantity.value) {\n\tthis.item.system.reduceQuantity();\n\tconst actor = Array.from(game.user.targets)[0]?.actor || this.actor;\n\tconst effectData = this.item.effects.contents[0].convertToApplied();\n\teffectData.flags.wfrp4e.sourceItem = this.item.uuid;\n\teffectData.duration.seconds = 10800;\n\tactor.applyEffect({ effectData: [effectData] });\n} else {\n\tthis.script.scriptNotification(\"None left!\", \"error\");\n}\n","qT0WBPxLMMO9gvCd":"if (\n\t!this.actor.has(\"Night Vision\") &&\n\t!this.actor.has(\"Night Vision\", \"talent\") &&\n\t!this.actor.hasCondition(\"blinded\")\n) {\n\tthis.actor.addCondition(\"blinded\", 1, { \"flags.wfrp4e.nightshroud\": true });\n}\n","qu194dVXm9Vx1TGk":"if (\n\targs.test.options.useOnesSupportive &&\n\t(args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") ||\n\t\targs.test.result.roll <= args.test.target)\n) {\n\tconst SL =\n\t\tMath.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10);\n\tconst ones = Number(args.test.result.roll.toString().split(\"\").pop());\n\n\tif (ones > SL)\n\t\targs.test.data.result.SL = `+${\n\t\t\tones + args.test.successBonus + args.test.slBonus\n\t\t}`;\n\targs.test.result.other.push(\n\t\t`<b>${this.effect.name}</b>: Used unit dice as SL`,\n\t);\n}\n","quPcuKsq2fcild4a":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"easy\" },\n\tcontext: { failure: `<strong>${this.effect.name}</strong>: Vomit!` },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"prone\");\n}\n","qUwnVlWpsmDom3RK":"args.fields.modifier -= 5;\n","QwHoqu2oO8QO8Mad":"const content = `<b>${this.effect.name}</b>: All targets engaged with <b>${this.actor.prototypeToken.name}</b> take [[/r 1d10]] Damage, modified by TB and AP.`;\n\nthis.script.scriptMessage(content);\n","qxzhPtysAjPWspKf":"if (this.actor.has(\"Undead\") || this.actor.has(\"Daemonic\")) {\n\tthis.script.scriptNotification(`Cannot enter ${this.effect.name}!`);\n}\n","qZschZU0nee0kJlk":"args.fields.modifier -= 30;\n","R32U01LBjBrK1pns":"const templateMap = {\n\tP2e7Yx98bK3u110a: \"\",\n\tiuMp3KLaMT2WCmie: \"Xp4r2KUhqfjak8zq\",\n\tRBuYcT5tppwcmnC5: \"wYN19h3WVF1yOVq2\",\n\tvcGpNwNbhvfzVveQ: \"ac5ClOuaYtzOYyWp\",\n\tjmhKZy0w9TzkEK9c: \"IS3LTdTuay6uRHUq\",\n\t\"9Byj6k7SmdTYis2V\": \"LjMlx99gBGeRJUQu\",\n\tlaJwc2l9tzJPgaaJ: \"x5wpMprsObuqMCYg\",\n};\nconst template = (\n\tawait game.wfrp4e.tables.rollTable(\"hireling-templates\", { hideDSN: true })\n).object;\nconst physicalQuirk = (\n\tawait game.wfrp4e.tables.rollTable(\"physical-quirks\", { hideDSN: true })\n).text;\nconst workEthic = (\n\tawait game.wfrp4e.tables.rollTable(\"work-ethic\", { hideDSN: true })\n).text;\nconst personalityQuirk = (\n\tawait game.wfrp4e.tables.rollTable(\"personality-quirks\", { hideDSN: true })\n).text;\n\nconst templateItem = await game.wfrp4e.utility.findItemId(\n\ttemplateMap[template._id],\n);\n\nconst bio = `\n        <p><strong>Template</strong>: ${template.text}</p>\n        <p><strong>Phsyical Quirk</strong>: ${physicalQuirk}</p>\n        <p><strong>Work Ethic</strong>: ${workEthic}</p>\n        <p><strong>Personality Quirk</strong>: ${personalityQuirk}</p>\n        `;\n\nthis.script.scriptMessage(bio, {\n\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n});\n\nawait this.actor.update({ \"system.details.gmnotes.value\": bio });\n\nif (templateItem) {\n\tthis.actor.createEmbeddedDocuments(\"Item\", [templateItem.toObject()]);\n}\n","R5dOZWFxE2n6tooX":"return this.item.system.usesLocation(args.weapon)\n","r6hi5vMdLhTaaPfb":"args.actor.details.move.value +=\n\tthis.effect.sourceTest.result.overcast.usage.other.current;\n","R6SnyF3y4Vsq6oga":"const lore = this.effect.name.split(\"(\")[1].split(\")\")[0].toLowerCase();\n\n// If channelling corresponding lore\nif (args.type === \"channelling\" && args.spell.system.lore.value === lore)\n\targs.prefillModifiers.slBonus += 1;\n// If channelling or casting different lore\nelse if (\n\targs.spell.system.lore.value !== lore &&\n\targs.spell.system.lore.value !== \"petty\"\n)\n\targs.prefillModifiers.slBonus -= 1;\n","R95pDZMHnD9iHAl8":"return args.skill?.name.includes(this.item.system.tests.value);\n","ramav4ymrDDkPKK4":"if (this.actor.hasCondition(\"bleeding\")) {\n\tthis.actor.removeCondition(\"bleeding\");\n\tthis.script.scriptNotification(\"Removed 1 Bleeding Condition\");\n} else {\n\tthis.script.scriptNotification(\"No Bleeding Conditions\");\n}\n","ratP9ByLjQPiLlFK":"args.data.canReverse = true;\n","rCh3ltUrUMovd2Kc":"if (this.actor.hasCondition(\"surprised\")) {\n\tthis.script.scriptNotification(\"Cannot be surprised\");\n\tthis.actor.removeCondition(\"surprised\");\n}\n","rdaMhMyHrJjQ6vVC":"game.wfrp4e.utility.postFear(this.item.Advances, this.actor.name);\n","RDtJXji3hgcKnEBk":"const as = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.Item.9h82z72XGo9tfgQS\")\n).toObject();\nconst hv = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.Item.Nj3tC8A5fZ3zEdMR\")\n).toObject();\nconst ms = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.Item.6w30u0VPsAicrqb5\")\n).toObject();\nconst ss = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.Item.OEjUvJKi0xmBwbS2\")\n).toObject();\n\nas.name += \" (Sight)\";\n\nconst roll = await new Roll(\"1d10\").roll();\nroll.toMessage(this.script.getChatData());\nlet items = [];\n\nif (roll.total <= 2) {\n\titems = items.concat([as]);\n} else if (roll.total <= 4) {\n\titems = items.concat([hv]);\n} else if (roll.total <= 6) {\n\titems = items.concat([ms]);\n} else if (roll.total <= 8) {\n\titems = items.concat([ss]);\n} else if (roll.total <= 10) {\n\titems = items.concat([as, hv, ms, ss]);\n}\n\nthis.actor.createEmbeddedDocuments(\"Item\", items, {\n\tfromEffect: this.effect.id,\n});\n","re1UFtxvRRjpPB7Z":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.nF5z1OEhpi4t6a6S\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nif (data.system.location.key[0] === \"r\") {\n\tdata.system.location.value = \"Right Ankle\";\n} else if (data.system.location.key[0] === \"l\") {\n\tdata.system.location.value = \"Left Ankle\";\n}\n\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tskipLocationValue: true,\n\tfromEffect: this.effect.id,\n});\n","red2bt4PGgIWAdTR":"if (this.item.system.quantity.value) {\n\tthis.item.system.reduceQuantity();\n\tconst actor = Array.from(game.user.targets)[0]?.actor || this.actor;\n\tconst effectData = this.item.effects.contents[0].convertToApplied();\n\tconst minutes = Math.ceil(CONFIG.Dice.randomUniform() * 10) * 10;\n\teffectData.duration.seconds = 60 * minutes;\n\tthis.script.scriptMessage(`<strong>Duration</strong>: ${minutes} minutes`, {\n\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t});\n\tactor.applyEffect({ effectData: [effectData] });\n} else {\n\tthis.script.scriptNotification(\"None left!\", \"error\");\n}\n","rF0Z3hTUUnSxL3Mq":"const armour = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.VUJUZVN3VYhOaPjj\")\n).toObject();\nconst bite = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\")\n).toObject();\nconst fear = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.pTorrE0l3VybAbtn\")\n).toObject();\nconst nightVision = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.FmHDbCOy3pH8yKhm\")\n).toObject();\nconst tracker = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.ClOlztW6hH8rslbp\")\n).toObject();\nconst weapon = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.AtpAudHA4ybXVlWM\")\n).toObject();\n\narmour.name = \"Armour (Hide)\";\narmour.system.specification.value = 2;\nbite.system.specification.value = 3;\nfear.system.specification.value = 2;\nweapon.system.specification.value = 4;\nlet items = [armour, bite, fear, nightVision, tracker, weapon];\n\nconst belligerent = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.GbDyBCu8ZjDp6dkj\")\n).toObject(); //{Belligerent}\nconst bestial = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.AGcJl5rHjkyIQBPP\")\n).toObject(); //{Bestial}\nconst big = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.a8MC97PLzl10WocT\")\n).toObject(); //{Big}\nconst blessed = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.5muSFXd6oc760uVj\")\n).toObject(); //{Blessed (Ulric)}\nconst champion = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.4mF5Sp3t09kZhBYc\")\n).toObject(); //{Champion}\nconst die = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.UsJ2uIOOtHA7JqD5\")\n).toObject(); //{Die Hard}\nconst fast = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.9MjH4xyVrd3Inzak\")\n).toObject(); //{Fast}\nconst frenzy = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.yRhhOlt18COq4e1q\")\n).toObject(); //{Frenzy}\nconst immunity = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.IAWyzDfC286a9MPz\")\n).toObject(); //{Immunity to Psychology}\nconst regenerate = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.SfUUdOGjdYpr3KSR\")\n).toObject(); //{Regenerate}\nconst size = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.8slW8CJ2oVTxeQ6q\")\n).toObject(); //{Size (Large)}\n\nblessed.system.specification.value = \"Ulric\";\nsize.system.specification.value = \"Large\";\n\nconst optional = [\n\tbelligerent,\n\tbestial,\n\tbig,\n\tblessed,\n\tchampion,\n\tdie,\n\tfast,\n\tfrenzy,\n\timmunity,\n\tregenerate,\n\tsize,\n];\n\nconst chosen = await ItemDialog.create(\n\toptional,\n\t\"unlimited\",\n\t\"Choose Optional Traits\",\n);\n\nitems = items.concat(chosen || []);\nthis.script.scriptNotification(`Adding ${items.map((i) => i.name).join(\", \")}`);\nthis.actor.createEmbeddedDocuments(\"Item\", items, {\n\tfromEffect: this.effect.id,\n});\n","rgSwSeB3shIMVMb6":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.x0WMGwuQzReXcQrs\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","RHyBLYT5oHf7EPnG":"const skills = this.actor.itemTypes.skill.filter((i) =>\n\ti.name.includes(game.i18n.localize(\"NAME.Melee\")),\n);\n\nconst skill = await ItemDialog.create(\n\tskills,\n\t1,\n\t\"Select the skill used by the weapon\",\n);\nconst group = game.wfrp4e.utility.extractParenthesesText(skill[0]?.name);\nconst groupKey = game.wfrp4e.utility.findKey(\n\tgroup,\n\tgame.wfrp4e.config.weaponGroups,\n);\n\nconst weapon = {\n\tname: this.effect.name,\n\ttype: \"weapon\",\n\timg: this.effect.img,\n\tsystem: {\n\t\t\"damage.value\": this.actor.system.characteristics.wp.bonus,\n\t\t\"weaponGroup.value\": groupKey || \"basic\",\n\t\t\"twohanded.value\": [\"polearm\", \"twohanded\"].includes(groupKey),\n\t\t\"reach.value\": \"average\",\n\t\t\"qualities.value\": [{ name: \"magical\" }],\n\t},\n};\n\nItem.implementation.create(foundry.utils.expandObject(weapon), {\n\tparent: this.actor,\n\tfromEffect: this.effect.id,\n});\nthis.script.scriptNotification(\n\t\"Item created. Further customization must be done manually within the Item's sheet\",\n);\n","RI8crJxeD8JLDwMh":"return args.weapon?.system?.weaponGroup?.value !== \"fencing\"\n","rIISfbCShejmJNKw":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.oRx92ByVNEBN6YkK\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","RJpglw5eVRM1f9t0":"args.wounds *= 5;\n","RKIFGN583PQnqHGk":"if (\n\targs.opposedTest.result.hitloc.value === \"body\" &&\n\targs.totalWoundLoss > 0\n) {\n\targs.actor.addCondition(\"bleeding\", 2);\n\tthis.script.scriptMessage(\"Gained 2 Bleeding Conditions\");\n}\n","rLMaVNEGdZ6xj5Au":"return ![\"i\", \"int\", \"fel\"].includes(args.characteristic)\n","RNHrSTfMLXm5sXkC":"return [\"ws\", \"bs\", \"s\", \"ag\"].includes(args.characteristic)\n","rnioLwiJP7ps5Jwy":"if (args.item.type === \"skill\" && args.item.name === \"Melee (Basic)\") {\n\targs.item.system.modifier.value += 30;\n}\n","RNr9CwyvLhlnwD2h":"return !args.skill?.name.includes(game.i18n.localize(\"NAME.Sail\"));\n","roKvPHDSpX4IV11C":"return !args.skill?.name.includes(game.i18n.localize(\"NAME.Perform\")) && args.characteristic !== \"ag\"\n","ROXCqAFSTLouJniL":"if (args.test.spell.name === \"Warp Lightning\") {\n\tif (\n\t\targs.test.result.minormis ||\n\t\targs.test.result.majormis ||\n\t\targs.test.result.catastrophicmis\n\t) {\n\t\tthis.script.scriptMessage(`<strong>${this.item.name}</strong> Overloads!`);\n\t}\n}\n","RprZWlnopSqZt7KZ":"return !args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\"));\n","rpxQU26BU7nwjtqY":"const location = this.item.system.location.key;\nconst test = await this.actor.setupCharacteristic(\"dex\", {\n\tcontext: { failure: `<strong>${this.effect.name}</strong>: Drop the item!` },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"average\" },\n});\nawait test.roll();\n\nif (location && test.failed) {\n\tconst dropped = this.item.system.weaponsAtLocation;\n\n\tif (dropped.length) {\n\t\tthis.script.scriptNotification(\n\t\t\t`Dropped ${dropped.map((i) => i.name).join(\", \")}!`,\n\t\t);\n\t\tfor (const weapon of dropped) {\n\t\t\tawait weapon.system.toggleEquip();\n\t\t}\n\t}\n}\n\nreturn test.succeeded\n","RqWnhnwFxaHubgiA":"await args.actor.addCondition(\"blinded\");\nawait args.actor.addCondition(\"deafened\");\nawait args.actor.addCondition(\"stunned\");\n","rr4htuVq45onXdRG":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"average\" },\n});\ntest.roll();\n","RrchOMpEdIvceJxl":"return args.skill?.name === \"Stealth (Rural)\"\n","rRfff55c7elyvbCb":"return this.actor.flags.useless[this.item.system.location.key] && args.weapon?.system.usesHands.includes(`${this.item.system.location.key[0]}Arm`)\n","RSsGiDFibuqg3sHr":"const diseaseIndex = game.packs\n\t.filter((i) => i.metadata.type === \"Item\")\n\t.reduce((acc, pack) => acc.concat(pack.index.contents), [])\n\t.filter((i) => i.type === \"disease\")\n\t.map((i) => {\n\t\ti.id = i._id;\n\t\treturn i;\n\t});\n\nconst choice = await ItemDialog.create(diseaseIndex, 1, \"Choose a Disease\");\n\nif (choice[0]) {\n\tawait this.item.updateSource({\n\t\t\"system.specification.value\": choice[0].name,\n\t});\n}\n","rUGSx06BuBvX9kgf":"if (args.test.result.charging) {\n\targs.test.result.damage += 1;\n\targs.test.result.additionalDamage += 1;\n\tif (!args.test.result.resolute) {\n\t\targs.test.result.breakdown.damage.other.push({\n\t\t\tlabel: this.effect.name,\n\t\t\tvalue: this.item.Advances,\n\t\t});\n\t\targs.test.result.resolute = true; // Prevent duplicate messages\n\t}\n}\n","RuW1PWUFxIbbSlIm":"return ![\"t\", \"wp\", \"ag\", \"i\", \"int\"].includes(args.characteristic)\n","RvipIYj9H7n4UDMe":"const characteristics = {\n\tws: -10,\n\tbs: -10,\n\ts: -5,\n\tt: -5,\n\ti: -10,\n\tag: -10,\n\tdex: -10,\n\tint: 0,\n\twp: 0,\n\tfel: 0,\n};\nconst skills = [];\nconst skillAdvancements = [];\nconst talents = [];\nconst trappings = [];\nconst items = [];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${trapping}`, { permanent: true });\n\t}\n}\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","rVpPNILEzWL9lj6b":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.kJNAY1YRaCy9IgmT\");\nconst terrorTraitItem = item.toObject();\nterrorTraitItem.system.specification.value = Number(\n\tthis.effect.item.system.specification.value,\n);\nthis.actor.createEmbeddedDocuments(\"Item\", [terrorTraitItem]);\n","rxB1AqfVMDqTRieE":"return ![\"ws\", \"bs\", \"ag\"].includes(args.characteristic) && args.skill?.name !== game.i18n.localize(\"NAME.Perception\")\n","rXMylpnEtZpwou6x":"this.actor\n\t.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t\tfields: { difficulty: \"average\" },\n\t})\n\t.then(async (test) => {\n\t\tawait test.roll();\n\t\tif (test.failed) {\n\t\t\tthis.actor.addCondition(\"fatigued\");\n\t\t}\n\t});\n","RZlMkxJz5apn0mUj":"return args.item?.system.attackType !== \"ranged\"\n","s0kTuDE0qv68V2KI":"this.actor\n\t.getActiveTokens()\n\t.forEach((t) => t.document.update({ texture: { tint: \"#FFBF00\" } }));\n","S1QihXuvdEVzeRtB":"const dice = await new Roll(\"1d10\").roll();\nlet roll = dice.total;\nlet talent;\nlet message;\nlet modifier = 0;\n\nif (roll <= 3) {\n\titem = await fromUuid(\"Compendium.wfrp4e-core.items.mNoCuaVbFBflfO6X\");\n} else if (roll <= 6) {\n\titem = await fromUuid(\"Compendium.wfrp4e-core.items.OEjUvJKi0xmBwbS2\");\n\tmodifier = -3;\n} else if (roll <= 9) {\n\titem = await fromUuid(\"Compendium.wfrp4e-core.items.mdPGZsn2396dEpOf\");\n\tmodifier = -3;\n} else if ((roll = 10)) {\n\titem = await fromUuid(\"Compendium.wfrp4e-core.items.qdMbxW09FUoYBzmB\");\n\tmodifier = -5;\n}\n\nmessage = `${roll} Rolled, gain ${item.name}, ${modifier} Strength`;\ndice.toMessage(this.script.getChatData());\n\nconst changes = duplicate(this.effect.changes);\nchanges[0].value = modifier;\n\nthis.effect.updateSource({ changes });\n\nawait this.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], {\n\tfromEffect: this.effect.id,\n});\n\nthis.script.scriptNotification(message);\n","S3DCTw4yJ85eSaKp":"this.actor\n\t.setupCharacteristic(\"s\", {\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t})\n\t.then((test) => test.roll());\n","S3Dev4hleOYqDNe9":"if (args.test.options.healWounds) {\n\tif (args.test.succeeded) {\n\t\tlet wounds =\n\t\t\tthis.actor.characteristics.int.bonus + Number(args.test.result.SL);\n\t\tif (args.test.options.fieldDressing && args.test.result.reversed) {\n\t\t\twounds =\n\t\t\t\tthis.actor.characteristics.int.bonus +\n\t\t\t\tMath.min(1, Number(args.test.result.SL));\n\t\t}\n\t\targs.test.result.woundsHealed = wounds;\n\t\targs.test.result.other.push(\n\t\t\t`<b>${this.actor.name}</b> healed <b>${wounds}</b> wounds of the patient.`,\n\t\t);\n\t} else if (\n\t\tthis.actor.characteristics.int.bonus + Number(args.test.result.SL) <\n\t\t0\n\t) {\n\t\targs.test.result.other.push(\n\t\t\t\"The patient contracts a @UUID[Compendium.wfrp4e-core.items.Item.1hQuVFZt9QnnbWzg]{Minor Infection}.\",\n\t\t);\n\t}\n}\n","S4793DLFhjMxpM8x":"return ![\"ws\", \"bs\"].includes(args.characteristic) && !args.item?.system.attackType && !args.options.dodge\n","s5bO0Sf0qpS27Tve":"await args.actor.addCondition(\"ablaze\", 3);\nawait args.actor.addCondition(\"prone\");\n","s6eZXfZkC1My6EXl":"const lore = this.effect.name.split(\" \")[2].toLowerCase();\nif (args.item.type === \"spell\" && args.item.system.lore.value === lore) {\n\targs.item.system.cn.value -= 1;\n}\n","S6tUyFJvGMV19mvP":"this.actor.status.addArmour(2, { source: this.effect });\n","s7gJQdzuM3fz2zQK":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.QluSTTTq3viHJJUh\");\nconst data = item.toObject();\ndata.system.location.value = \"Hip\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"prone\");\n}\n","s8idWt9YdMTRfnjV":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.BqPZn6q3VHn9HUrW\");\nconst data = item.toObject();\ndata.system.specification.value = 4 - this.actor.characteristics.s.bonus;\ndata.name = item.name.replace(\"(Feature)\", \"\");\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","s8xU6OOZbbfo6VIw":"args.fields.slBonus += this.actor.system.characteristics.ag.bonus;\n","s94yKZ4o5XN4JWM1":"// Any attack with such ammunition which inflicts at least one Wound,\n// also inflicts one Bleeding Condition.\n\nif (args.totalWoundLoss > 0) {\n\targs.actor.addCondition(\"bleeding\");\n}\n","S95QqpX1cZyIVCPy":"if (Number.parseInt(this.item.system.specification.value) > 0) {\n\tthis.actor.system.status.ward.value = Number.parseInt(\n\t\tthis.item.system.specification.value,\n\t);\n}\n","sagKJM6oDFlw4ED2":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nreturn test.failed;\n","sAVpm7hFRHpbCLXm":"return [\"ws\", \"bs\", \"s\",  \"t\", \"ag\", \"i\"].includes(args.characteristic)\n","sB4KB9bT3nQhAoqG":"// This script needs to be separate because equipTransfer is off on the other effect, and thus won't execute when added to an actor\n\nconst mainEffect = this.item.effects.contents[0];\nif (mainEffect.name.includes(\"<Lore>\")) {\n\tconst choice = await ItemDialog.create(\n\t\tItemDialog.objectToArray(game.wfrp4e.config.magicLores, this.item.img),\n\t\t1,\n\t\t\"Choose Lore\",\n\t);\n\tif (choice.length) {\n\t\tmainEffect.update({\n\t\t\tname: mainEffect.name.replace(\"<Lore>\", choice[0].name),\n\t\t});\n\t\tthis.item.update({ name: (this.item.name += ` (${choice[0].name})`) });\n\t}\n}\n\nthis.effect.delete();\n","sbK1a7txpSoXFzyB":"if (\n\targs.test.options.useOnesArgumentative &&\n\t(args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") ||\n\t\targs.test.result.roll <= args.test.target)\n) {\n\tconst SL =\n\t\tMath.floor(args.test.target / 10) - Math.floor(args.test.result.roll / 10);\n\tconst ones = Number(args.test.result.roll.toString().split(\"\").pop());\n\n\tif (ones > SL)\n\t\targs.test.data.result.SL = `+${\n\t\t\tones + args.test.successBonus + args.test.slBonus\n\t\t}`;\n\targs.test.result.other.push(\n\t\t`<b>${this.effect.name}</b>: Used unit dice as SL`,\n\t);\n}\n","scfm5iWWBxWI6QaK":"const darkvision = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.JQa5DLnTs2SEzRrc\",\n);\nlet fear = await fromUuid(\"Compendium.wfrp4e-core.items.Item.pTorrE0l3VybAbtn\");\nconst acutesense = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.9h82z72XGo9tfgQS\",\n);\nfear = fear.toObject();\nfear.system.specification.value = 1;\nthis.actor.createEmbeddedDocuments(\"Item\", [darkvision, fear, acutesense], {\n\tfromEffect: this.effect.id,\n});\n","SGr50Hq1AHIEzIFN":"const choice = await ItemDialog.create(\n\tItemDialog.objectToArray(\n\t\t{\n\t\t\tint: game.wfrp4e.config.characteristics.int,\n\t\t\tfel: game.wfrp4e.config.characteristics.fel,\n\t\t},\n\t\tthis.effect.img,\n\t),\n\t1,\n\t\"Choose Characteristic\",\n);\n\nthis.effect.updateSource({ \"flags.wfrp4e.characteristic\": choice[0].id });\n","sgS9rblPkQB36C8S":"if (this.item.name.includes(\"(\")) {\n\tconst trade = this.item.parenthesesText;\n\tif (trade?.toLowerCase() !== \"any\")\n\t\treturn this.item.updateSource({\"system.tests.value\" : this.item.system.tests.value.replace(\"any one\", trade)})\n}\n\nconst index = game.packs\n\t.filter((i) => i.metadata.type === \"Item\")\n\t.reduce((acc, pack) => acc.concat(pack.index.contents), [])\n\t.filter(\n\t\t(i) =>\n\t\t\ti.type === \"skill\" && i.name.includes(game.i18n.localize(\"NAME.Trade\")),\n\t)\n\t.map((i) => {\n\t\ti.id = i._id;\n\t\treturn i;\n\t});\n\nconst choice = await ItemDialog.create(index, 1, \"Choose a Trade Skill\");\nlet text;\nif (!choice[0]) {\n\tconst custom = await ValueDialog.create(\n\t\t\"Enter Custom Trade Skill\",\n\t\t\"Custom Trade\",\n\t);\n\ttext = custom || \"\";\n} else {\n\ttext = game.wfrp4e.utility.extractParenthesesText(choice[0].name);\n}\n\nawait this.item.updateSource({\n\tname: `${this.item.name\n\t\t.replace(\"(Any)\", \"\")\n\t\t.replace(\"(any)\", \"\")\n\t\t.trim()} (${text})`,\n\t\"system.tests.value\": this.item.system.tests.value.replace(\"any one\", text),\n});\n","sHfkTRqTWPg2JAGN":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.JQa5DLnTs2SEzRrc\",\n);\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","shkBUtUuMPDKvFm7":"const test = await this.actor.setupSkill(\"Уклонение\", {\n\tfields: { difficulty: \"average\" },\n});\nconst caster = this.effect.sourceActor;\n\nconst fallen =\n\tthis.effect.sourceTest.result.SL + caster.characteristics.wp.bonus;\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"prone\");\n\tthis.script.scriptMessage(\n\t\t`<b>${this.actor.prototypeToken.name}</b> falls ${fallen} yards`,\n\t);\n}\n","sKO8TcLIkCTnFvXu":"args.abort = true;\nthis.script.scriptNotification(\n\t`Cannot use ${this.item.system.location.value}!`,\n\t\"error\",\n);\n","skVq3eDEYKFF2iZp":"// I'm assuming the endurance test specified is for the end-round check\nawait this.actor.addCondition(\"poisoned\", 4);\n","SLy1Fs3oXcHgFgjK":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.pTorrE0l3VybAbtn\",\n);\nconst data = item.toObject();\nconst value =\n\tgetProperty(this.effect.sourceTest, \"result.overcast.usage.other.current\") ||\n\t1;\ndata.system.specification.value = value;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","sm9d5lk6cM0OuUkf":"this.actor.applyFear(\n\tMath.min(4, this.effect.sourceTest.result.overcast.usage.other.current),\n);\n","sNSfDBIA2k17hPYI":"const ablaze = this.actor.hasCondition(\"ablaze\");\nif (ablaze) {\n\tablaze?.delete();\n\tthis.script.scriptNotification(\"Ignore Ablaze\");\n}\n","SO4Aa9argKbuO9rQ":"args.prefillModifiers.modifier -= 20;\n","SPOkFWZWziZk5b7A":"return args.item?.system?.attackType !== \"melee\"\n","SrCHfOJFZwDickqa":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"average\" },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"prone\");\n}\n","SRmfstEs278bP9Pz":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.yRhhOlt18COq4e1q\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","sSMg43ZjnNmpytfj":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n","SSqGxyN9hw0HDmED":"this.actor.addCondition(\"prone\");\n","StAderQaQQsxb6Rv":"const target = await game.wfrp4e.tables.rollTable(\"fixations\");\nif (target) {\n\tthis.script.scriptNotification(target.result);\n\tconst hatred = this.actor.items.find(\n\t\t(i) => i.getFlag(\"wfrp4e\", \"fromEffect\") === this.effect.id,\n\t);\n\tif (hatred) {\n\t\thatred.update({ \"system.specification.value\": target.result });\n\t}\n}\n","sUHuj00IpoZ7Gd03":"return args.skill?.name !== game.i18n.localize(\"NAME.Swim\");\n","SvFKt9hMcFQjeILA":"args.actor.addCondition(\n\t\"entangled\",\n\tthis.effect.sourceTest.result.overcast.usage.other.current,\n);\n","SWIJjM2RCmzfr64u":"if (args.test.result.hitloc.result === \"head\") {\n\targs.test.result.critModifier = args.test.result.critModifier\n\t\t? args.test.result.critModifier + 40\n\t\t: 40;\n\n\targs.test.result.critical += ` (+${args.test.result.critModifier})`;\n}\n","sWyO1DNaqb2EdHoW":"if (!this.actor.items.getName(game.i18n.localize(\"NAME.Frenzy\"))) {\n\t// Either frenzy trait or psychology\n\t// Add Frenzy psychology\n\tconst item = await fromUuid(\"Compendium.wfrp4e-core.items.DrNUTPeodEgpWTnT\");\n\tconst data = item.toObject();\n\tdata.effects[0].disabled = false;\n\tthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\t\tfromEffect: this.effect.id,\n\t});\n}\n\nthis.script.scriptMessage(\n\t`<p><strong>By imbibing this potion, ${this.actor.prototypeToken.name}</strong> has becomes subject to Frenzy. This Frenzy lasts [[1d10]] Rounds, and may not be ended sooner.</p>`,\n\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\"), blind: true },\n);\n","sx7Ikn8WW00gBFb4":"const location = `${\n\tMath.ceil(CONFIG.Dice.randomUniform() * 2) === 2 ? \"r\" : \"l\"\n}Arm`;\n\nif (location === \"lArm\") {\n\tthis.script.scriptNotification(\"Rolled Left\");\n} else if (location === \"rArm\") {\n\tthis.script.scriptNotification(\"Rolled Right\");\n}\n\nthis.effect.updateSource({ \"flags.wfrp4e.location\": location });\n\nif (location) {\n\tconst dropped = this.actor.itemTypes.weapon.filter(\n\t\t(i) => i.isEquipped & i.system.usesHands.includes(location),\n\t);\n\n\tif (dropped.length) {\n\t\tthis.script.scriptNotification(\n\t\t\t`Dropped ${dropped.map((i) => i.name).join(\", \")}!`,\n\t\t);\n\t\tfor (const weapon of dropped) {\n\t\t\tawait weapon.system.toggleEquip();\n\t\t}\n\t}\n}\n\nconst roll = await new Roll(\"1d10\").roll();\n\nroll.toMessage(\n\tthis.script.getChatData({ flavor: `${this.effect.name} (Duration)` }),\n);\n\nthis.effect.updateSource({ \"duration.rounds\": roll.total });\n","syBgPp7rOymCZejX":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"stunned\");\n}\n","sYlGRLApZ3Ub24ea":"this.actor.system.status.addArmour(3, {\n\tsource: this.effect.name,\n\tmagical: true,\n});\n","syqqBkyP5tGqZ78t":"this.actor.has(\"Immunity to Psychology\")?.delete();\n\nconst roll = await new Roll(\"1d10\").roll();\n\nroll.toMessage(this.script.getChatData());\n\nthis.script.scriptNotification(\n\t`Removed Immunity to Psychology, Adding ${roll.total} Broken Conditions`,\n);\nthis.actor.addCondition(\"broken\", roll.total, {\n\t\"flags.wfrp4e.blasted-mind\": true,\n});\n","sZwLitzwKBTaFca3":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.5hH73j2NgPdsLCZN\",\n);\nconst data = item.toObject();\ndata.name = data.name.replace(\"Target\", \"Greenskins, Undead, Chaos\");\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","t48hkacYdOpzWvK9":"args.options.beatBlade = true;\n","t56mnblo1kv3gM1M":"return args.skill?.name.includes(\"Melee (Basic)\") || (args.type === \"weapon\" && args.item?.system.weaponGroup.value === \"basic\");\n","T5fiTzhXEQAv9Drf":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.rlDZZTj5PXjuRXa2\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nawait this.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n\nconst location = this.item.system.location.key;\n\nif (location) {\n\tconst dropped = this.item.system.weaponsAtLocation;\n\n\tif (dropped.length) {\n\t\tthis.script.scriptNotification(\n\t\t\t`Dropped ${dropped.map((i) => i.name).join(\", \")}!`,\n\t\t);\n\t\tfor (const weapon of dropped) {\n\t\t\tawait weapon.system.toggleEquip();\n\t\t}\n\t}\n}\n","T74FEjfFrh3f6MKv":"args.wpb = args.sb;\n","t8LYOuN5peEdWeXP":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.mNoCuaVbFBflfO6X\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","TAw9vXnfyIAl5DGs":"if (this.item.system.quantity.value) {\n\tgame.wfrp4e.utility.postCorruptionTest(\"minor\", this.script.getChatData());\n\tthis.item.system.reduceQuantity();\n\tconst actor = Array.from(game.user.targets)[0]?.actor || this.actor;\n\tactor.applyEffect({\n\t\teffectData: [this.item.effects.contents[1].convertToApplied()],\n\t});\n} else {\n\tthis.script.scriptNotification(\"None left!\", \"error\");\n}\n","TBpNFRL5uehs0fze":"if (this.item.system.quantity.value) {\n\tthis.item.system.reduceQuantity();\n\tconst actor = Array.from(game.user.targets)[0]?.actor || this.actor;\n\tactor.applyEffect({ effectData: [this.item.effects.contents[0]] });\n} else {\n\tthis.script.scriptNotification(\"None left!\", \"error\");\n}\n","tCIT1a12Gt6k2ohA":"let resistance;\nif (this.item.name.includes(\"(\")) {\n\tresistance = this.item.parenthesesText;\n} else {\n\tresistance = await ValueDialog.create(\"Enter Resistance\", \"Resistance\");\n\n\tif (resistance) {\n\t\tthis.item.updateSource({ name: `${this.item.name} (${resistance})` });\n\t\tthis.effect.updateSource({ name: `${this.effect.name} (${resistance})` });\n\t}\n}\nthis.item.updateSource({\n\t\"system.tests.value\": this.item.system.tests.value.replace(\n\t\t\"the associated Threat\",\n\t\tresistance,\n\t),\n});\n\nif (resistance && !this.effect.name.includes(\"(\")) {\n\tthis.effect.updateSource({ name: (this.effect.name += ` (${resistance})`) });\n}\n","TcqumwUFAL6V0cty":"if (this.item.getFlag(\"wfrp4e\", \"failedCool\")) {\n\tthis.item.system.AP = {\n\t\thead: 0,\n\t\tlArm: 0,\n\t\trArm: 0,\n\t\tlLeg: 0,\n\t\trLeg: 0,\n\t\tbody: 0,\n\t};\n}\n","tcZug8ehU6lyYBd9":"return args.skill?.name !== \"Ranged (Blackpowder)\"\n","tdICiJ26rJrDbxT6":"return args.characteristic !== \"i\"\n","TdjlJro0RRVSh8g8":"return args.skill?.name !== game.i18n.localize(\"NAME.Gamble\") && args.skill?.name !== game.i18n.localize(\"NAME.SleightOfHand\");\n","tDrs0aNIYmZPsOoS":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"prone\");\n}\n","TEiNj5FgkoD3YbhS":"this.actor.hasCondition(\"bleeding\")?.delete();\n","tFAKRRRfTjQfdQz3":"this.actor\n\t.getActiveTokens()\n\t.forEach((t) => t.document.update({ \"texture.tint\": \"\" }));\n","tG1qGqzBLmAR3WHm":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tlet add = 0;\n\n\tif (test.result.roll % 11 === 0 || test.result.roll === 100) {\n\t\tadd = 1; // can't use isFumble if no hit location\n\t}\n\n\tawait this.actor.addCondition(\n\t\t\"stunned\",\n\t\tMath.max(1, Math.abs(test.result.SL)) + add,\n\t);\n\tawait this.actor.addCondition(\n\t\t\"blinded\",\n\t\tMath.max(1, Math.abs(test.result.SL)),\n\t);\n}\n","TGN070HeJLl3gSMY":"const test = await this.actor.setupCharacteristic(\"ag\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tcontext: { failure: \"Goes Prone\" },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"prone\");\n}\n","tGVEV6TLl310mFLP":"const nonmagical = args.modifiers.ap.value - args.modifiers.ap.magical;\nif (args.applyAP && nonmagical) {\n\tconst nonmagical = args.modifiers.ap.value - args.modifiers.ap.magical;\n\targs.modifiers.ap.ignored += nonmagical;\n\targs.modifiers.ap.details.push(\n\t\t`<strong>${this.effect.name}</strong>: Ignore Non-Magical AP (${nonmagical})`,\n\t);\n}\n","tKBq1nGZo8t6vvQ6":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.5hH73j2NgPdsLCZN\");\nthis.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], {\n\tfromEffect: this.effect.id,\n});\n","TmaS8o33825QUMrx":"const stomp = game.wfrp4e.config.systemItems.stomp;\nconst test = await this.actor.setupTrait(stomp);\nawait test.roll();\n","tn6SwmjAuNzqE6dx":"let damage = 0;\nconst test = await this.actor.setupSkill(\"Уклонение\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n\nif (test.succeeded) {\n\tdamage = 10;\n} else if (test.failed) {\n\tdamage = 20;\n}\n\nthis.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(damage, {\n\t\tloc: \"roll\",\n\t\thideDSN: true,\n\t\tsuppressMsg: true,\n\t}),\n);\n","tnE8LF6E3svIlLca":"return args.skill?.name === game.i18n.localize(\"NAME.Research\");\n","TnFobCxG4pxlYmKr":"const gorCharacteristics = {\n\tws: 45,\n\tbs: 30,\n\ts: 35,\n\tt: 45,\n\ti: 30,\n\tag: 35,\n\tdex: 25,\n\tint: 25,\n\twp: 30,\n\tfel: 25,\n};\nfor (const char in this.actor.characteristics) {\n\tif (this.actor.characteristics[char].initial < gorCharacteristics[char])\n\t\tthis.actor.characteristics[char].initial = gorCharacteristics[char];\n}\n","tnilBagajWM8UGQt":"return args.item?.name !== game.i18n.localize(\"NAME.ConsumeAlcohol\")\n","tNTO1LVN7JqHf4YN":"if (args.test.characteristicKey === \"wp\") {\n\tif (args.test.failed) {\n\t\tthis.actor.createEmbeddedDocuments(\"ActiveEffect\", [\n\t\t\tgame.wfrp4e.config.symptomEffects.malaise,\n\t\t]);\n\t\tthis.script.scriptMessage(\n\t\t\t`Willpower Test failed, <b>${this.actor.prototypeToken.name}</b> gains @Condition[Malaise] for [[1d10]] hours`,\n\t\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t\t);\n\t}\n}\n","TNWmIkuubqBn38he":"this.effect.deleteCreatedItems();\n","ToKlHDAjJOsC51ag":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.GlShFJF2TpsNh1FX\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"hard\" },\n});\nawait test.roll();\nif (test.failed) {\n\targs.actor.addCondition(\"unconscious\");\n}\n","tolkNN5P7oOC8GKZ":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"difficult\" },\n});\nawait test.roll();\n\nif (test.failed) {\n\tconst sourceActor = this.effect.sourceActor;\n\tif (sourceActor) {\n\t\tthis.script.scriptMessage(\n\t\t\tawait this.actor.applyBasicDamage(\n\t\t\t\tsourceActor.system.characteristics.wp.bonus,\n\t\t\t\t{\n\t\t\t\t\tsuppressMsg: true,\n\t\t\t\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n}\n","toSrgcvWq9b5eN0K":"const location = await game.wfrp4e.tables.rollTable(\"hitloc\", {\n\thideDSN: true,\n});\n\nthis.item.updateSource({ name: `${this.item.name} (${location.description})` });\nthis.script.scriptMessage(\n\t`<strong>Location:</strong> ${location.description}`,\n\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n);\n","TOyQLrugFGzwc5nY":"return !(args.skill?.name.includes(game.i18n.localize(\"NAME.Melee\")) || args.item?.isMelee || args.options.corruption);\n","TpZItJ5Ugbazaobd":"const locations = [];\n\nwhile (locations.length < 2) {\n\tconst loc = await game.wfrp4e.tables.rollTable(\"hitloc\", { hideDSN: true });\n\tif (!locations.includes(loc.result)) {\n\t\tlocations.push(loc.result);\n\t}\n}\n\nlocationText = locations.map((i) => game.wfrp4e.config.locations[i]).join(\", \");\n\nthis.item.updateSource({\n\tname: (this.item.name += ` (${locationText})`),\n\t\"flags.wfrp4e.locations\": locations,\n});\nthis.effect.updateSource({ \"flags.wfrp4e.locations\": locations });\n","Tq45Nd8J3eTvHT41":"return args.skill?.name !== game.i18n.localize(\"NAME.Perception\") && args.skill?.name !== game.i18n.localize(\"NAME.SetTrap\");\n","TQRL4mZhZohXg1Au":"const test = await this.actor.setupCharacteristic(\"wp\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\ntest.roll();\n","TrIYdcG3jDER4WgY":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.xsGbDFqK2qh7lsIj\");\nconst data = item.toObject();\ndata.system.specification.value = \"Minor\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","TU2xjbJ0zFtytF3J":"return args.skill?.name === game.i18n.localize(\"NAME.CharmAnimal\");\n","tUwP7TjrOOOnaCYJ":"const fatigued = this.actor.hasCondition(\"fatigued\");\nif (fatigued) {\n\tthis.script.scriptNotification(\n\t\t`Cleared ${fatigued.conditionValue} Fatigued Conditions`,\n\t);\n\tfatigued.delete();\n} else {\n\tthis.script.scriptNotification(\"No Fatigued Conditions\");\n}\n","TwgdEucxcHloc4cX":"const choice1 = [\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Mail Chausses\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Mail Coat\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Mail Coif\",\n\t},\n];\nconst choice2 = [\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Mail Chausses\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Mail Coat\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Mail Coif\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Leather Leggings\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Leather Skullcap\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Leather Jack\",\n\t},\n];\nconst choice3 = [\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Plate Breastplate\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Plate Bracers\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Plate Helm\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Plate Leggings\",\n\t},\n];\n\nconst choice = await new Promise((resolve, reject) => {\n\tnew Dialog({\n\t\ttitle: \"Choice\",\n\t\tcontent: `<p>\n        Select your choice\n        </p>\n        <ol>\n        <li>Mail</li>\n        <li>Mail & Leather</li>\n        <li>Plate</li>\n        </ol> \n        `,\n\t\tbuttons: {\n\t\t\t1: {\n\t\t\t\tlabel: \"Mail\",\n\t\t\t\tcallback: () => {\n\t\t\t\t\tresolve(choice1);\n\t\t\t\t},\n\t\t\t},\n\t\t\t2: {\n\t\t\t\tlabel: \"Mail & Leather\",\n\t\t\t\tcallback: () => {\n\t\t\t\t\tresolve(choice2);\n\t\t\t\t},\n\t\t\t},\n\t\t\t3: {\n\t\t\t\tlabel: \"Plate\",\n\t\t\t\tcallback: () => {\n\t\t\t\t\tresolve(choice3);\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}).render(true);\n});\n\nconst updateObj = this.actor.toObject();\nconst items = [];\nfor (const c of choice) {\n\tlet existing;\n\tif (c.type === \"skill\") {\n\t\texisting = updateObj.items.find(\n\t\t\t(i) => i.name === c.name && i.type === c.type,\n\t\t);\n\t\tif (existing && c.diff?.system?.advances?.value) {\n\t\t\texisting.system.advances.value += c.diff.system.advances.value;\n\t\t}\n\t}\n\n\tif (!existing) {\n\t\tlet item = await game.wfrp4e.utility.find(c.name, c.type);\n\t\tif (item) {\n\t\t\titem = item.toObject();\n\t\t\tequip(item);\n\t\t\titems.push(mergeObject(item, c.diff || {}));\n\t\t} else\n\t\t\tui.notifications.warn(`Could not find ${c.name}`, { permanent: true });\n\t}\n}\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","TwwKxFjK6TNGKbRB":"this.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(12, {\n\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP,\n\t\tsuppressMsg: true,\n\t}),\n);\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tfields: { difficulty: \"hard\" },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addSystemEffect(\"cold1\");\n}\n","TxfmxDGBj04AQQpt":"const weapon = args.opposedTest.defenderTest.weapon;\nif (\n\t!args.opposedTest.result.swapped &&\n\targs.opposedTest.result.winner === \"defender\" &&\n\targs.opposedTest.attackerTest.result.damage &&\n\tweapon &&\n\tweapon?.system.properties.qualities.fast\n) {\n\targs.opposedTest.swap(this.effect.label);\n}\n","TY0xSQ00XXyEr49r":"args.fields.slBonus += 1;\n","TzgmYRXFXRspIo1i":"this.effect.delete();\n","U1RUcgP8LD2qeGTm":"return !args.options.reload\n","U1UpSRJOSjPpO4HS":"const mutations = await game.wfrp4e.utility.findAll(\n\t\"mutation\",\n\t\"Loading Mutations\",\n);\nconst roll = Math.floor(CONFIG.Dice.randomUniform() * mutations.length);\nthis.actor.createEmbeddedDocuments(\"Item\", [mutations[roll]]);\nthis.script.scriptNotification(`Added ${mutations[roll].name}`);\n","U26XMie3Kjoddisj":"const stunned = this.actor.hasCondition(\"stunned\");\nif (stunned) {\n\tthis.script.scriptNotification(\"Cleared 1 Stunned Condition\");\n\tthis.actor.removeCondition(\"stunned\");\n} else {\n\tthis.script.scriptNotification(\"No Stunned Conditions\");\n}\n","U2xKn7R1gm8kiQm8":"this.actor.hasCondition(\"broken\")?.delete();\n\nconst item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.8pVzgPkgWpTJvfhG\",\n);\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","u3olS2p7Ls1JXfAH":"this.script.scriptMessage(\n\tawait game.wfrp4e.tables.formatChatRoll(\"mutatephys\", {}, \"Tzeentch\"),\n);\n","U4A8FDNmwBGTuQZO":"if (args.attacker.has(\"Undead\") && !args.attacker.has(\"Ethereal\")) {\n\targs.totalWoundLoss = Math.floor(args.totalWoundLoss / 2);\n\targs.modifiers.other.push({\n\t\tlabel: this.effect.name,\n\t\tdetails: \"Halved\",\n\t\tvalue: \"× 0.5\",\n\t});\n}\n","u5dNZ0s3lWfL8KFb":"return args.fields.charging\n","U5ndCwcJ1s3Ns26w":"args.item.system.qualities.value.push({ name: \"magical\" });\nargs.item.system.damage.value += ` + ${Number.parseInt(\n\tthis.effect.sourceTest.result.SL,\n)}`;\nargs.item.name += ` (${this.effect.name})`;\n","u6CYMSZADrfXd48Q":"args.fields.modifier += 20;\n","U78c4oUjKwyUu6jT":"return (args.skill?.name !== game.i18n.localize(\"NAME.Perception\") && args.characteristic !== \"fel\")\n","U9xh2wriSqCosugW":"if (args.test.options.stag) {\n\tif (Number.parseInt(args.test.result.SL) < 0 || args.test.failed) {\n\t\tif (Number.parseInt(args.test.result.SL) < 0) {\n\t\t\targs.test.result.SL = \"+0\";\n\t\t\targs.test.result.description = game.i18n.localize(\"ROLL.MarginalSuccess\");\n\t\t}\n\t\targs.test.result.outcome = \"success\";\n\t\targs.test.result.other.push(\n\t\t\t`<strong>${this.effect.name}</strong>: Minimum +0 SL`,\n\t\t);\n\t}\n}\n","uACa6u4JLNMRgFlr":"const talents = await Promise.all(\n\t[\"Furious Assault\", \"Sea Legs\"].map(game.wfrp4e.utility.findTalent),\n);\nthis.actor.createEmbeddedDocuments(\"Item\", talents, {\n\tfromEffect: this.effect.id,\n});\n","UaImulhbPURkLJg2":"return this.actor.attacker && (args.skill?.name.includes(\"Melee (Basic)\") || (args.type === \"weapon\" && args.item?.system.weaponGroup.value === \"basic\"))\n","uAy4w7y8Uu9POF8C":"args.item.system.qualities.value.push({ name: \"impact\" });\n","UC6G3pFQwzUhrw6F":"return args.skill?.name !== game.i18n.localize(\"NAME.CharmAnimal\");\n","ucF4aiJ1gpDB333G":"if (\n\targs.test.options.catfall &&\n\t(args.test.result.roll <= game.settings.get(\"wfrp4e\", \"automaticSuccess\") ||\n\t\targs.test.result.roll <= args.test.target) &&\n\t!args.test.result.catfall\n) {\n\targs.test.result.other.push(\n\t\t`<b>${this.effect.name}</b>: Fall distance damage reduced by ${\n\t\t\tNumber(args.test.result.SL) + 1\n\t\t} yards`,\n\t);\n\targs.test.result.catfall = true; // Prevent duplicate messages\n}\n","ugL5IBB6R2yWyMWd":"if (args.totalWoundLoss > 0) {\n\tconst apply = await Dialog.confirm({\n\t\ttitle: this.effect.name,\n\t\tcontent: `<p>Appy ${this.effect.name} Damage? Attacker must have used bare hands or a melee weapon made of metal.`,\n\t});\n\tif (apply) {\n\t\tlet damage = 5 + this.actor.characteristics.wp.bonus;\n\n\t\tconst loc =\n\t\t\targs.opposedTest.attackerTest.weapon?.system.usesHands[0] || \"rArm\";\n\n\t\tconst APatLoc = args.opposedTest.attacker.system.status.armour[loc];\n\n\t\tconst metalAP = APatLoc.layers.reduce(\n\t\t\t(metal, layer) => (metal += layer.metal ? layer.value : 0),\n\t\t\t0,\n\t\t);\n\n\t\tconst APused = Math.max(0, APatLoc.value - metalAP); // remove metal AP at location;\n\n\t\tdamage -= APused + args.opposedTest.attacker.system.characteristics.t.bonus;\n\n\t\tlet msg = await args.opposedTest.attacker.applyBasicDamage(damage, {\n\t\t\tsuppressMsg: true,\n\t\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\t\t});\n\t\tmsg += ` (ignored ${metalAP} metal AP on ${game.wfrp4e.config.locations[loc]})`;\n\t\tthis.script.scriptMessage(msg);\n\t}\n}\n","UgQW0UMPOZ0jwfVJ":"const current = this.actor.status.fortune.value;\n\nthis.actor.update({ \"system.status.fortune.value\": 1 + current });\n\nthis.script.scriptMessage(\n\t`<b>${\n\t\tthis.actor.prototypeToken.name\n\t}</b> fortune points increased from ${current} to ${1 + current}`,\n);\n","UH5MIzqi2MvEqTwj":"if (args.totalWoundLoss > 0) {\n\tconst roll = await new Roll(\"1d10\").roll();\n\troll.toMessage(this.script.getChatData());\n\targs.totalWoundLoss += roll.total;\n\targs.modifiers.other.push({ label: this.effect.name, value: roll.total });\n}\n","uLBDnWC3S0lRitbj":"const test = await this.actor.setupCharacteristic(\"int\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n\nconst opposedResult = test.opposedMessages[0]\n\t?.getOppose()\n\t?.resultMessage?.getOpposedTest()?.result;\n\nif (opposedResult?.winner === \"attacker\") {\n\tif (\n\t\ttest.failed &&\n\t\t(test.result.roll % 11 === 0 || test.result.roll === 100)\n\t) {\n\t\tthis.actor.addCondition(\"unconscious\");\n\t\tawait this.actor.update({\n\t\t\t\"system.status.corruption.value\":\n\t\t\t\tNumber.parseInt(this.actor.status.corruption.value) + 1,\n\t\t});\n\t\tthis.script.scriptMessage(\"Gained a Corruption point\", {\n\t\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t\t});\n\t} else {\n\t\tawait this.actor.addCondition(\"stunned\", 1 + opposedResult.differenceSL);\n\t}\n} else {\n\treturn false;\n}\n","ULmZMLezDamerN04":"const spells = await game.wfrp4e.utility.findAll(\"spell\", \"Loading Spells\");\n\nlet lore = (\n\tawait game.wfrp4e.tables.rollTable(\"random-caster\", { hideDSN: true })\n).text;\nthis.script.scriptNotification(lore);\nif (lore === \"GM's Choice\") {\n\treturn\n} else if (lore === \"Arcane Magic\") {\n\tlore = \"Arcane\";\n} else if (lore === \"Petty Magic\") {\n\tlore = \"petty\";\n} else {\n\tlore = lore.toLowerCase();\n}\n\nlet spellsWithLore = [];\nif (lore === \"Arcane\") {\n\tspellsWithLore = spells.filter((i) => !i.system.lore.value);\n} else {\n\tspellsWithLore = spells.filter((i) => i.system.lore.value === lore);\n}\n\nconst selectedSpell =\n\tspellsWithLore[\n\t\tMath.floor(CONFIG.Dice.randomUniform() * spellsWithLore.length)\n\t];\nItem.implementation\n\t.create(selectedSpell.toObject(), { parent: this.actor })\n\t.then((item) => {\n\t\tthis.actor.setupCast(item).then((test) => test.roll());\n\t});\n","Um6xMMiUftLXJxEt":"return [\"fel\", \"dex\"].includes(args.characteristic)\n","UnqnWi0dZYLf5fTT":"const choice1 = [\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Mail Chausses\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Mail Coat\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Mail Coif\",\n\t},\n];\nconst choice2 = [\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Mail Chausses\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Mail Coat\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Mail Coif\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Leather Leggings\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Leather Skullcap\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Leather Jack\",\n\t},\n];\nconst choice3 = [\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Plate Breastplate\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Plate Bracers\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Plate Helm\",\n\t},\n\t{\n\t\ttype: \"armour\",\n\t\tname: \"Plate Leggings\",\n\t},\n];\n\nconst choice = await Dialog.wait({\n\ttitle: \"Choice\",\n\tcontent: `<p>\n    Select your choice\n    </p>\n    <ol>\n    <li>Mail</li>\n    <li>Mail & Leather</li>\n    <li>Plate</li>\n    </ol> \n    `,\n\tbuttons: {\n\t\t1: {\n\t\t\tlabel: \"Mail\",\n\t\t\tcallback: () => {\n\t\t\t\treturn choice1;\n\t\t\t},\n\t\t},\n\t\t2: {\n\t\t\tlabel: \"Mail & Leather\",\n\t\t\tcallback: () => {\n\t\t\t\treturn choice2;\n\t\t\t},\n\t\t},\n\t\t3: {\n\t\t\tlabel: \"Plate\",\n\t\t\tcallback: () => {\n\t\t\t\treturn choice3;\n\t\t\t},\n\t\t},\n\t},\n});\n\nconst updateObj = this.actor.toObject();\nconst items = [];\nfor (const c of choice) {\n\tlet existing;\n\tif (c.type === \"skill\") {\n\t\texisting = updateObj.items.find(\n\t\t\t(i) => i.name === c.name && i.type === c.type,\n\t\t);\n\t\tif (existing && c.diff?.system?.advances?.value) {\n\t\t\texisting.system.advances.value += c.diff.system.advances.value;\n\t\t}\n\t}\n\n\tif (!existing) {\n\t\tlet item = await game.wfrp4e.utility.find(c.name, c.type);\n\t\tif (item) {\n\t\t\titem = item.toObject();\n\t\t\tequip(item);\n\t\t\titems.push(mergeObject(item, c.diff || {}));\n\t\t} else\n\t\t\tui.notifications.warn(`Could not find ${c.name}`, { permanent: true });\n\t}\n}\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","uNYstk3eXmWamhzs":"args.actor.addCondition(\"blinded\");\n","uOHAsKlkFuIaAmjb":"args.actor.modifyWounds(1);\n","upfK6GM33qZCZjll":"return args.item?.name !== \"Play (Lute)\"\n","UsAHQecRlWL5PhP6":"this.actor\n\t.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t\tfields: { difficulty: \"average\" },\n\t})\n\t.then(async (test) => {\n\t\tawait test.roll();\n\t\tif (test.failed) {\n\t\t\tthis.actor.corruptionDialog(\"moderate\");\n\t\t}\n\t});\n","UsuwsmU1TUQLQVM2":"const lore = this.effect.name.split(\"(\")[1].split(\")\")[0].toLowerCase();\nreturn !args.spell || (args.type === \"cast\" && [\"petty\", lore].includes(args.spell.system.lore.value));\n","uSwkYENTOcnfRrqA":"return !args.skill?.name.includes(game.i18n.localize(\"NAME.Melee\")) && args.weapon?.system?.attackType !== \"melee\"\n","UTlgF4azrGQZsoDv":"const talents = await Promise.all(\n\t[\"Ambidextrous\", \"Distract\"].map(game.wfrp4e.utility.findTalent),\n);\nthis.actor.createEmbeddedDocuments(\"Item\", talents, {\n\tfromEffect: this.effect.id,\n});\n","UvycHOjSPm5Zv9KJ":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Dodge\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nlet baseDamage = \"4\";\nif (test.succeeded) baseDamage = \"0\";\n\nconst damage =\n\tthis.effect.sourceItem.system.computeSpellDamage(baseDamage, true) +\n\tNumber.parseInt(this.effect.sourceTest.result.SL);\n\nthis.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(damage, { suppressMsg: true }),\n);\nthis.actor.addCondition(\"ablaze\");\n","uwdQvZtzy2HVeEzx":"if (args.totalWoundLoss > 0) {\n\tconst roll = await new Roll(\"1d10\").roll();\n\troll.toMessage(this.script.getChatData());\n\targs.modifiers.other.push({ label: this.effect.name, value: roll.total });\n\n\targs.actor\n\t\t.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\t\t\tfields: { difficulty: \"hard\" },\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: ` - ${this.effect.name}`,\n\t\t})\n\t\t.then(async (test) => {\n\t\t\tawait test.roll();\n\t\t\tif (test.failed) {\n\t\t\t\tthis.script.scriptMessage(\n\t\t\t\t\t`<strong>${args.actor.name}</strong> takes a @Table[critbody]{Critical Hit} to the torse`,\n\t\t\t\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t\t\t\t);\n\t\t\t}\n\t\t});\n}\n","UwjkHRAQHESdYXJs":"this.actor.getActiveTokens().forEach((t) =>\n\tt.document.update({\n\t\tlight: {\n\t\t\tdim: 2,\n\t\t\tbright: 1,\n\t\t\talpha: 0.5,\n\t\t\tanimation: {\n\t\t\t\tspeed: 4,\n\t\t\t\tintensity: 4,\n\t\t\t\ttype: \"pulse\",\n\t\t\t},\n\t\t\tcolor: \"#949bff\",\n\t\t},\n\t}),\n);\n","UWrzokgabRKUpnkG":"return [\"t\", \"wp\", \"ag\", \"i\", \"int\"].includes(args.characteristic)\n","ux3jaLpAUhZ5YqA6":"return args.item?.name !== game.i18n.localize(\"NAME.Leadership\") && args.item?.name !== game.i18n.localize(\"NAME.Cool\")\n","Ux4buMc7llF1Kg8p":"if (\n\t!this.actor.hasCondition(\"stunned\") &&\n\t!this.actor.hasCondition(\"unconcscious\")\n) {\n\tthis.effect.delete();\n}\n","UYLXm2W6jVn21Age":"args.fields.modifier += 40;\n","v00nVCRKqqRvY28t":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"hard\" },\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"stunned\", 3);\n}\n","V1D2Uo3WDKYQePU3":"let damage = this.effect.sourceTest.result.damage;\n\nconst loc = \"head\";\nconst APatLoc = this.actor.system.status.armour[loc];\n\nconst metalAP = APatLoc.layers.reduce(\n\t(metal, layer) => (metal += layer.metal ? layer.value : 0),\n\t0,\n);\n\nconst APused = Math.max(0, APatLoc.value - metalAP); // remove metal AP at location;\n\ndamage -= APused + this.actor.system.characteristics.t.bonus;\n\nlet msg = await this.actor.applyBasicDamage(damage, {\n\tsuppressMsg: true,\n\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n});\nmsg += ` (ignored ${metalAP} metal AP on ${game.wfrp4e.config.locations[loc]})`;\nthis.script.scriptMessage(msg);\n","V2lsVTi6q28eL5jl":"args.fields.slBonus += Number.parseInt(this.effect.sourceTest.result.SL);\n","v4CCxVaVGf9i8U7X":"const cured = await Dialog.wait({\n\ttitle: this.effect.name,\n\tcontent:\n\t\t\"<p>Enter the number of diseases/poisons cured</p><input type='number'>\",\n\tbuttons: {\n\t\tconfirm: {\n\t\t\tlabel: \"Confirm\",\n\t\t\tcallback: (dlg) => {\n\t\t\t\tconst input = dlg.find(\"input\");\n\t\t\t\tvalue = Number.parseInt(input[0].value);\n\t\t\t\treturn value;\n\t\t\t},\n\t\t},\n\t},\n});\n\nconst damage = 0;\n\nconst rolls = new Array(cured)\n\t.fill(\"\")\n\t.map((i) => `max(0, 1d10 - ${this.actor.system.characteristics.fel.bonus})`);\n\nconst test = new Roll(`${rolls.join(\" + \")}`);\nawait test.roll();\ntest.toMessage({\n\tspeaker: { alias: this.actor.name },\n\tflavor: this.effect.name,\n});\nthis.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(test.total, {\n\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\t\tsuppressMsg: true,\n\t}),\n);\n","v4ITTsSY9EvCbhZP":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.9h82z72XGo9tfgQS\",\n);\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","v5xrDWcrTNFJkyQB":"const choice1 = [\n\t{\n\t\ttype: \"skill\",\n\t\tname: \"Ranged (Bow)\",\n\t\tdiff: {\n\t\t\tsystem: {\n\t\t\t\tadvances: {\n\t\t\t\t\tvalue: 10,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\ttype: \"weapon\",\n\t\tname: \"Longbow\",\n\t},\n\t{\n\t\ttype: \"ammunition\",\n\t\tname: \"Arrow\",\n\t},\n];\nconst choice2 = [];\n\nconst choice = await Dialog.wait({\n\ttitle: \"Option\",\n\tcontent: `<p>\n    Add Option?\n    </p>\n    <ol>\n    <li>Ranged (Bow) +10 and a Longbow with 12 Arrows</li>\n    </ol> \n    `,\n\tbuttons: {\n\t\t1: {\n\t\t\tlabel: \"Yes\",\n\t\t\tcallback: () => {\n\t\t\t\treturn choice1;\n\t\t\t},\n\t\t},\n\t\t2: {\n\t\t\tlabel: \"No\",\n\t\t\tcallback: () => {\n\t\t\t\treturn choice2;\n\t\t\t},\n\t\t},\n\t},\n});\n\nconst updateObj = this.actor.toObject();\nconst items = [];\nfor (const c of choice) {\n\tlet existing;\n\tif (c.type === \"skill\") {\n\t\texisting = updateObj.items.find(\n\t\t\t(i) => i.name === c.name && i.type === c.type,\n\t\t);\n\t\tif (existing && c.diff?.system?.advances?.value) {\n\t\t\texisting.system.advances.value += c.diff.system.advances.value;\n\t\t}\n\t}\n\n\tif (!existing) {\n\t\tlet item = await game.wfrp4e.utility.find(c.name, c.type);\n\t\tif (item) {\n\t\t\titem = item.toObject();\n\t\t\tequip(item);\n\t\t\titems.push(mergeObject(item, c.diff || {}));\n\t\t} else\n\t\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","v6LIG7EwWYALxCpP":"return !this.effect.getFlag(\"wfrp4e\", \"trained\")?.includes(\"Артистизм\") || (!args.skill?.name.includes(game.i18n.localize(\"NAME.Entertain\")) && !args.skill?.name.includes(game.i18n.localize(\"NAME.Perform\")) && !args.skill?.name.includes(game.i18n.localize(\"NAME.Play\")))\n","V7qmFwUMCY2tfziH":"this.actor.addCondition(\"stunned\");\n","V9wD9FWHWxZUOGSI":"const roll = await new Roll(\n\t`max(0, 1d10 - ${this.actor.characteristics.wp.bonus})`,\n).roll();\nlet fatigued = roll.total;\nroll.toMessage(this.script.getChatData());\nif (fatigued > this.actor.characteristics.wp.bonus) {\n\tthis.actor.addCondition(\"unconscious\");\n\tthis.script.scriptNotification(\"Fell Unconscious\");\n} else {\n\tfatigued = Math.max(0, fatigued);\n\tif (fatigued) this.actor.addCondition(\"fatigued\", fatigued);\n\tthis.script.scriptNotification(`Gained ${fatigued} conditions`);\n}\n","V9xm4X1x3lPYTQaI":"if (args.extendedTest?.getFlag(\"wfrp4e\", \"fear\")) {\n\tthis.script.scriptNotification(\"Immune to Fear\");\n\targs.extendedTest.delete();\n\targs.abort = true;\n}\n","V9zm2hKUVLVZtAcN":"const characteristics = {\n\tws: -10,\n\tbs: -10,\n\ts: 0,\n\tt: 15,\n\ti: 15,\n\tag: -20,\n\tdex: 0,\n\tint: 20,\n\twp: 10,\n\tfel: 10,\n};\nconst skills = [\"Charm\", \"Концентрация\", \"Entertain (Prophecy)\", \"Intuition\"];\nconst skillAdvancements = [0, 0, 20, 10];\nconst talents = [\"Detect Artefact\", \"Menacing\", \"Sixth Sense\"];\nconst traits = [\"Dooming\", \"Spellcaster (Lore of Life)\", \"Ward\"];\nconst trappings = [];\nconst items = [];\nconst spells = [\"Forest of Thorns\"];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nconst traitRegex =\n\t/(?:,?(.+?)(\\+?\\d{1,2}\\+?)?\\s*?(?:\\((.+?)\\)\\s*(\\+?\\d{1,2})?|,|$))/gm;\nfor (const trait of traits) {\n\tconst traitMatches = trait.matchAll(traitRegex).next().value;\n\tconst traitName = traitMatches[1];\n\tconst traitVal = traitMatches[2] || traitMatches[4]; // could be match 2 or 4 depending on if there's a specialization\n\tconst traitSpec = traitMatches[3];\n\n\tlet traitItem;\n\ttry {\n\t\ttraitItem = await WFRP_Utility.findItem(traitName, \"trait\");\n\t} catch {}\n\tif (!traitItem) {\n\t\tui.notifications.warn(`Could not find ${trait}`, { permanent: true });\n\t}\n\ttraitItem = traitItem.toObject();\n\n\tif (Number.isNumeric(traitVal)) {\n\t\ttraitItem.system.specification.value = traitName.includes(\n\t\t\t\"Weapon\",\n\t\t\t\"Horns\",\n\t\t\t\"Tail\",\n\t\t\t\"Tentacles\",\n\t\t\t\"Bite\",\n\t\t)\n\t\t\t? traitVal - Number.parseInt(characteristicValues[3] / 10)\n\t\t\t: traitVal;\n\t\ttraitItem.name = `${traitItem.name} ${\n\t\t\ttraitSpec ? `(${traitSpec})` : \"\"\n\t\t}`.trim();\n\t} else traitItem.system.specification.value = traitSpec;\n\n\titems.push(traitItem);\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${trapping}`, { permanent: true });\n\t}\n}\n\nfor (const spell of spells) {\n\tlet spellItem = await game.wfrp4e.utility.findItem(spell);\n\tif (spellItem) {\n\t\tspellItem = spellItem.toObject();\n\n\t\titems.push(spellItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${spell}`, { permanent: true });\n\t}\n}\n\nupdateObj.name = updateObj.name += ` ${this.effect.name}`;\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.worn = true;\n\telse if (item.type === \"weapon\") item.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.trappingType?.value === \"clothingAccessories\"\n\t)\n\t\titem.worn = true;\n}\n","VAPsww9x3HAw1sKP":"return !args.options.dodge\n","VAs1nXvicdQK18Do":"return args.skill?.name.includes(game.i18n.localize(\"NAME.Language\"));\n","Vb7rgl8T4VRswbnZ":"this.actor.status.addArmour(\n\tNumber.parseInt(this.item.system.specification.value) || 0,\n\t{ source: this.effect, damage: this.item.getFlag(\"wfrp4e\", \"APdamage\") },\n);\n","VbL0TgaBAmYjrezZ":"const talents = await Promise.all(\n\t[\"Hardy\"].map(game.wfrp4e.utility.findTalent),\n);\nthis.actor.createEmbeddedDocuments(\"Item\", talents, {\n\tfromEffect: this.effect.id,\n});\n","vc4bELo0cWYoILfB":"const choice = await ItemDialog.create(\n\tthis.actor.itemTypes.disease,\n\t1,\n\t\"Choose a disease to heal (must be naturally occuring)\",\n);\n\nthis.script.scriptMessage(`Cured <strong>${choice[0]?.name}</strong>`);\nchoice[0].delete();\n","vc8eVKtyjtOGvWlK":"if (!this.actor.hasCondition(\"entangled\")) {\n\tthis.effect.delete();\n}\n","vcM0IgsYVmfWrlO3":"fromUuid(\"Compendium.wfrp4e-core.items.rOV2s6PQBBrhpMOv\").then((item) => {\n\tthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\t\tfromEffect: this.effect.id,\n\t});\n});\n","vFUVWZ1l8wpTjLcx":"if (!this.actor.has(game.i18n.localize(\"NAME.Daemonic\"))) return\n\nconst caster = this.effect.sourceActor;\nif (caster) {\n\tconst wp = caster.system.characteristics.wp;\n\tif (this.actor.system.characteristics.wp.value >= wp.value) {\n\t\tthis.script.scriptNotification(\"Target has higher Willpower, no effect\");\n\t\treturn\n\t}\n\tthis.actor.applyBasicDamage(wp.bonus, {\n\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\t});\n}\n","vgfs0DXvF5iKrz1M":"return args.characteristic !== \"ag\" || this.item.getFlag(\"wfrp4e\", \"passed\")\n","vj3zArmX27vCxYJW":"return ![\"NAME.Perception\", \"NAME.Navigation\"].map(i => game.i18n.localize(i)).includes(args.skill?.name)\n","vJQRBxDfPwHens0a":"if (args.totalWoundLoss > 0) {\n\targs.actor\n\t\t.setupCharacteristic(\"t\", {\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: ` - ${this.effect.name}`,\n\t\t\tfields: { difficulty: \"difficult\" },\n\t\t})\n\t\t.then(async (test) => {\n\t\t\tawait test.roll();\n\t\t\tif (test.failed) {\n\t\t\t\tawait args.actor.addCondition(\"poisoned\");\n\t\t\t\tthis.script.scriptMessage(\n\t\t\t\t\tawait args.actor.applyBasicDamage(3, {\n\t\t\t\t\t\tsuppressMsg: true,\n\t\t\t\t\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n}\n","vjyTKcNrJzX4XWnS":"let SL = Number.parseInt(this.effect.sourceTest.result.SL);\nif (SL < 0) SL = 0;\nthis.actor.addCondition(\"fatigued\", 1 + SL);\n","VKpKq4RSbI1KkUQK":"this.actor.flags.useless[this.effect.getFlag(\"wfrp4e\", \"location\")] = true;\n","Vkuu70BZV4DPYO2Q":"return args.item?.system?.attackType !== \"ranged\"\n","VlFUDaKUYoBYKYn0":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tcontext: { failure: \"1 Corruption Point Gained\" },\n});\nawait test.roll();\nif (test.failed && this.actor.type === \"character\") {\n\tthis.actor.update({\n\t\t\"system.status.corruption.value\":\n\t\t\tNumber.parseInt(this.actor.status.corruption.value) + 1,\n\t});\n\tthis.script.scriptMessage(\"Gained a Corruption point\", {\n\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t});\n}\n","vM2BPwYhHQaBAt2C":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.KII1gWnxIZ8HzmU5\",\n);\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","VNOKTzCrFbZ6PJUj":"return ![\"Charm Animal\", \"Endurance\", \"Outdoor Survival\"].includes(args.skill?.name)\n","vNp9wgdSvnNEjZyS":"args.fields.slBonus -= 2;\n","vPG4rV640aSzKzxe":"return !this.actor.flags.useless[`${this.item.system.location.key[0]}Arm`] || [\"fel\", \"wp\", \"int\", \"t\"].includes(args.characteristic)\n","VQaC6ynouW5EQCbC":"const roll = await new Roll(\"1d10\").roll();\n\nawait roll.toMessage(this.script.getChatData());\n\nthis.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(roll.total, {\n\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\t\tsuppressMsg: true,\n\t}),\n);\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n\nif (test.succeeded) {\n\treturn false;\n}\n","VqTrKPtxv9hpn0Hr":"return args.skill?.name !== \"Language (Magick)\"\n","vS2D9QUslR7ZtXXm":"const test = await this.actor.setupCharacteristic(\"t\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"hard\" },\n});\nawait test.roll();\nif (test.failed) {\n\tconst roll = await new Roll(\"1d10\").roll();\n\troll.toMessage(this.script.getChatData());\n\n\tthis.script.scriptMessage(\n\t\tawait this.actor.applyBasicDamage(roll.total, {\n\t\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP,\n\t\t\tsuppressMsg: true,\n\t\t}),\n\t);\n}\n","vSDMygIT9nNvEGWG":"// Each time the blade is used, the GM should secretly roll a d10.\n// On a 1, its poison has run dry,\n// and the next time it is employed it will shatter.\n\nif (Math.ceil(CONFIG.Dice.randomUniform() * 10) === 1) {\n\tthis.item.setFlag(\"wfrp4e\", \"brittle\", true);\n\tChatMessage.create({\n\t\tcontent: `\n      <strong>${this.item.name}</strong> has run out of poison. It will shatter the next time it is used.`,\n\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t\tblind: true,\n\t});\n}\n","VuE1mhrB6X6MYTzg":"return args.characteristic === \"fel\"\n","VurA2XNqC0d9U49C":"this.actor\n\t.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t})\n\t.then(async (test) => {\n\t\tawait test.roll();\n\t\tif (test.failed) {\n\t\t\tthis.actor.addCondition(\"fatigued\");\n\t\t}\n\t});\n","vuzRRj5d9XdNYx3o":"const broken = this.actor.hasCondition(\"broken\");\nif (broken) {\n\tbroken.delete();\n\tthis.script.scriptNotification(\"Removed Broken\");\n}\n","vvdo1NxjmGVkmFCT":"await this.actor.addCondition(\"stunned\");\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tfields: { difficulty: \"hard\" },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\nif (test.failed) {\n\tawait this.actor.addCondition(\"prone\");\n\tawait this.actor.addCondition(\"stunned\");\n}\n\nconst location = this.item.system.location.key;\n\nif (location) {\n\tconst dropped = this.item.system.weaponsAtLocation;\n\n\tif (dropped.length) {\n\t\tthis.script.scriptNotification(\n\t\t\t`Dropped ${dropped.map((i) => i.name).join(\", \")}!`,\n\t\t);\n\t\tfor (const weapon of dropped) {\n\t\t\tawait weapon.system.toggleEquip();\n\t\t}\n\t}\n}\n","vvVhAqreedtmOR9b":"args.totalWoundLoss = Math.max(0, args.totalWoundLoss - 1);\nargs.modifiers.other.push({label : this.effect.name, value : -1)\n","vY3xeTTL3ghPrJpN":"this.actor.addCondition(\"entangled\");\n","vZ5HCrhY8e4R1TrG":"const eye = await fromUuid(\"Compendium.wfrp4e-core.items.weczkAMPlTjX7lqU\");\nconst nose = await fromUuid(\"Compendium.wfrp4e-core.items.SpPRZZRHxly7uo2G\");\nthis.actor.createEmbeddedDocuments(\"Item\", [eye, nose]);\n","VzgTGb5QXKoyPNh3":"if (args.attackerTest.weapon && args.defenderTest.weapon) {\n\tlet attackerReach =\n\t\tgame.wfrp4e.config.reachNum[args.attackerTest.weapon.reach.value];\n\tlet defenderReach =\n\t\tgame.wfrp4e.config.reachNum[args.defenderTest.weapon.reach.value];\n\n\tif (attackerReach === defenderReach)\n\t\tdefenderReach = defenderReach < 7 ? defenderReach + 1 : defenderReach;\n\n\tattackerReach = game.wfrp4e.utility.findKey(\n\t\tattackerReach,\n\t\tgame.wfrp4e.config.reachNum,\n\t);\n\tdefenderReach = game.wfrp4e.utility.findKey(\n\t\tdefenderReach,\n\t\tgame.wfrp4e.config.reachNum,\n\t);\n\n\targs.attackerTest.weapon.reach.value = attackerReach;\n\targs.defenderTest.weapon.reach.value = defenderReach;\n}\n","vzMxIDjRlQSxXtCW":"// Remove the miscast if doubles rolled and succeeded\nif (\n\targs.test.succeeded &&\n\targs.test.result.minormis &&\n\targs.test.result.roll % 11 === 0\n) {\n\targs.test.result.minormis = undefined;\n}\n// Decrement the major miscast to minor miscast\nelse if (\n\targs.test.succeeded &&\n\targs.test.result.majormis &&\n\targs.test.result.roll % 11 === 0\n) {\n\targs.test.result.majormis = undefined;\n\targs.test.result.minormis = game.i18n.localize(\"ROLL.MinorMis\");\n}\n","VzO0ZDcTWvaBn4vm":"if (\n\targs.test.preData.skillName?.includes(game.i18n.localize(\"NAME.Language\")) ||\n\targs.test instanceof CastTest\n) {\n\tif (Number.parseInt(args.test.result.SL) > 0 || args.test.succeeded) {\n\t\tif (Number.parseInt(args.test.result.SL) > 0) {\n\t\t\targs.test.result.SL = \"-0\";\n\t\t\targs.test.result.description = game.i18n.localize(\"ROLL.MarginalFailure\");\n\t\t}\n\t\targs.test.result.outcome = \"failure\";\n\t\targs.test.result.other.push(\n\t\t\t`<strong>${this.effect.name}</strong>: Maximum -0 SL`,\n\t\t);\n\t}\n}\n","w3r54pKZQKaH2Yer":"const item = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.Item.pTorrE0l3VybAbtn\",\n);\nconst data = item.toObject();\nlet slOver = this.effect.sourceTest.result.slOver;\nconst overcast = this.effect.sourceTest.result.overcast;\nslOver -= (overcast.total - overcast.available) * 2; // If they used an overcast, subtract 2 SL for each one\nconst added = Math.floor(slOver / 3) || 0;\ndata.system.specification.value = 1 + added; // For each +3 SL, add 1 specification\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","w4JKuTECFmu3YmTR":"return !args.skill?.name?.includes(game.i18n.localize(\"NAME.Ride\"))\n","w4zubIHP0XgMXsFe":"return !args.options.terror && !args.extendedTest?.getFlag(\"wfrp4e\", \"fear\");\n","w7K0lbxQKJ2tsc6f":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.EO05HX7jql0g605A\");\nconst data = item.toObject();\ndata.system.specification.value = 60;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","W9nyUNQStMr1pUHJ":"if (args.opposedTest.result.hitloc.value === this.item.system.location.key) {\n\targs.actor.addCondition(\"bleeding\", 1);\n\tthis.script.scriptNotification(\"Added Bleeding\");\n}\n","wAETU6aTRr9d4oCU":"args.fields.slBonus++;\n","wAntJhgb8Og5vJXh":"args.options.staunchBleeding = true;\n","WB6sIpLEPC8YPX67":"if (args.options.dodge) {\n\targs.abort = true;\n\tthis.script.scriptNotification(\"Cannot Dodge!\");\n}\nreturn [\"t\", \"int\", \"wp\", \"fel\"].includes(args.characteristic)\n","wbM7tpw4TxvadcWm":"const items = this.effect.itemTargets;\nlet msg = \"\";\nfor (const item of items) {\n\tif (item.system.properties.qualities.durable) {\n\t\tawait item.update({ \"system.qualities.value\": [] });\n\t\tmsg += `<p>${item.name} loses all Qualities</p>`;\n\t} else {\n\t\tmsg += `<p>${item.name} crumbles into dust!</p>`;\n\t\tawait item.update({ name: `${item.name} (Dust)` });\n\t}\n}\nif (msg) {\n\tthis.script.scriptMessage(msg);\n}\n","whUSkaR1yem21bXp":"const characteristics = {\n\tws: 10,\n\tbs: 5,\n\ts: 0,\n\tt: 5,\n\ti: 10,\n\tag: 0,\n\tdex: 6,\n\tint: -5,\n\twp: 0,\n\tfel: 10,\n};\nconst skills = [\"Melee (Basic)\", \"Track\"];\nconst skillAdvancements = [8, 7];\nconst talents = [\"Berserk Charge\", \"Careful Strike\", \"Strike to Injure\"];\nconst traits = [\"Flight (8)\", \"Fury\", \"Swarm\", \"Tracker\"];\nconst trappings = [];\nconst items = [];\nconst spells = [];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nconst traitRegex =\n\t/(?:,?(.+?)(\\+?\\d{1,2}\\+?)?\\s*?(?:\\((.+?)\\)\\s*(\\+?\\d{1,2})?|,|$))/gm;\nfor (const trait of traits) {\n\tconst traitMatches = trait.matchAll(traitRegex).next().value;\n\tconst traitName = traitMatches[1];\n\tconst traitVal = traitMatches[2] || traitMatches[4]; // could be match 2 or 4 depending on if there's a specialization\n\tconst traitSpec = traitMatches[3];\n\n\tlet traitItem;\n\ttry {\n\t\ttraitItem = await WFRP_Utility.findItem(traitName, \"trait\");\n\t} catch {}\n\tif (!traitItem) {\n\t\tui.notifications.warn(`Could not find ${trait}`, { permanent: true });\n\t}\n\ttraitItem = traitItem.toObject();\n\n\tif (Number.isNumeric(traitVal)) {\n\t\ttraitItem.system.specification.value = traitName.includes(\n\t\t\t\"Weapon\",\n\t\t\t\"Horns\",\n\t\t\t\"Tail\",\n\t\t\t\"Tentacles\",\n\t\t\t\"Bite\",\n\t\t)\n\t\t\t? traitVal - Number.parseInt(characteristicValues[3] / 10)\n\t\t\t: traitVal;\n\t\ttraitItem.name = `${traitItem.name} ${\n\t\t\ttraitSpec ? `(${traitSpec})` : \"\"\n\t\t}`.trim();\n\t} else traitItem.system.specification.value = traitSpec;\n\n\titems.push(traitItem);\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${trapping}`, { permanent: true });\n\t}\n}\n\nfor (const spell of spells) {\n\tlet spellItem = await game.wfrp4e.utility.findItem(spell);\n\tif (spellItem) {\n\t\tspellItem = spellItem.toObject();\n\n\t\titems.push(spellItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${spell}`, { permanent: true });\n\t}\n}\n\nupdateObj.name = updateObj.name += ` ${this.effect.name}`;\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.worn = true;\n\telse if (item.type === \"weapon\") item.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.trappingType?.value === \"clothingAccessories\"\n\t)\n\t\titem.worn = true;\n}\n","WiYtNU2Y5BJfIpeM":"const location = this.item.system.location.key;\n\nif (location) {\n\tconst dropped = this.item.system.weaponsAtLocation;\n\n\tif (dropped.length) {\n\t\tthis.script.scriptNotification(\n\t\t\t`Dropped ${dropped.map((i) => i.name).join(\", \")}!`,\n\t\t);\n\t\tfor (const weapon of dropped) {\n\t\t\tawait weapon.system.toggleEquip();\n\t\t}\n\t}\n}\n","WKXyVHQwQCNTfSKv":"if (\n\t(args.item.type === \"weapon\" || args.item.system.attackType) &&\n\t!args.item.isMagical\n) {\n\targs.item.system.qualities.value.push({ name: \"magical\" });\n}\n","WnWA0e0bgqBsZp2L":"this.item.update({\n\t\"system.twohanded.value\": !this.item.system.twohanded.value,\n});\n","Wo4wQKUxSItAhRzZ":"const lore = this.effect.name.split(\"(\")[1].split(\")\")[0].toLowerCase();\n\n// If channelling corresponding lore\nif (args.type === \"channelling\" && args.spell.system.lore.value === lore)\n\targs.prefillModifiers.slBonus += 3;\n// If channelling or casting different lore\nelse if (\n\targs.spell.system.lore.value !== lore &&\n\targs.spell.system.lore.value !== \"petty\"\n)\n\targs.prefillModifiers.slBonus -= 1;\n","WO5n7Vbx8AgoVrwC":"const characteristics = {\n\tws: 0,\n\tbs: 0,\n\ts: 0,\n\tt: 0,\n\ti: 10,\n\tag: 0,\n\tdex: 0,\n\tint: 10,\n\twp: 5,\n\tfel: 5,\n};\nconst skills = [\"Intuition\", \"Lore (Local)\", \"Perception\"];\nconst skillAdvancements = [10, 10, 10];\nconst talents = [];\nconst trappings = [\"Mail Coat\", \"Mail Chausses\", \"Mail Coif\", \"Hand Weapon\"];\nconst items = [];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${trapping}`, { permanent: true });\n\t}\n}\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","WPQbVpD1uwSLAXq1":"if (this.actor.system.status.wounds.value === 0) {\n\tthis.actor.addCondition(\"dead\");\n}\n","WRe1eGmGVGejPcS8":"const wind = this.effect.name.split(\" \")[2];\nreturn args.type === \"cast\" && game.wfrp4e.config.magicWind[args.item.system.lore.value] === wind;\n","wS6OIR3QN4mOUHn0":"if (args.totalWoundLoss > args.actor.characteristics.t.bonus) {\n\targs.actor\n\t\t.setupSkill(game.i18n.localize(\"NAME.Endurance\"))\n\t\t.then(async (test) => {\n\t\t\tawait test.roll();\n\t\t\tif (test.failed) {\n\t\t\t\tlet disease = await fromUuid(\n\t\t\t\t\t\"Compendium.wfrp4e-core.items.M8XyRs9DN12XsFTQ\",\n\t\t\t\t);\n\t\t\t\tdisease = disease.toObject();\n\t\t\t\tdisease.system.duration.active = true;\n\t\t\t\targs.actor.createEmbeddedDocuments(\"Item\", [disease]);\n\t\t\t}\n\t\t});\n}\n","wsqNM4NHnwaAAQym":"args.applyAP = false;\n\nthis.script.scriptNotification(\n\t\"This test only applies to criminals, otherwise close the dialog.\",\n);\nthis.actor\n\t.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\t\tfields: { difficulty: \"average\" },\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t})\n\t.then(async (test) => {\n\t\tawait test.roll();\n\t\tif (test.failed) {\n\t\t\targs.actor.addCondition(\"unconscious\");\n\t\t}\n\t});\n","WTRYAEzwxRuGENyI":"// Every living creature within 10 yards, other than the wielder of the hammer,\n// must make a Challenging (+0) Endurance Test\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"challenging\" },\n});\n\nawait test.roll();\nif (test.failed) {\n\t// or gain a Deafened Condition\n\tthis.actor.addCondition(\"deafened\");\n\t// and suffer 1d10 Wounds which bypass armour but not Toughness Bonus.\n\tconst damage = await new Roll(\"1d10\").roll();\n\tawait damage.toMessage(this.script.getChatData());\n\tthis.script.scriptMessage(\n\t\tawait this.actor.applyBasicDamage(damage.total, {\n\t\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP,\n\t\t\tsuppressMsg: true,\n\t\t}),\n\t);\n}\n","wUlYLBT59Efys5aS":"args.actor.addCondition(\"prone\");\n","WwxXgsNxlccmqTze":"this.actor.addCondition(\"dead\");\n","WY3DajPRGcMNt158":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.MVI0lXcg6vvtooAF\");\nthis.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], {\n\tfromEffect: this.effect.id,\n});\n","wyTCozh9qGTx6yK0":"if (args.options.terror || args.extendedTest?.getFlag(\"wfrp4e\", \"fear\")) {\n\targs.abort = true;\n\tthis.script.scriptNotification(\"Does not need to make Fear or Terror tests\");\n}\n","wzkxiKjxVEeNS1di":"const roll = await new Roll(\"1d10\").roll();\nthis.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(roll.total, {\n\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\t\tsuppressMsg: true,\n\t}),\n);\n\nawait this.actor.addCondition(\"deafened\", 3);\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tfields: { difficulty: \"average\" },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tcontext: {\n\t\tfailure: \"Gain a Broken Condition\",\n\t\tsuccess: \"Avoided Broken Condition\",\n\t},\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"broken\");\n}\n","WzMmwjZbhyCbHxyZ":"this.actor.status.encumbrance.state += 2;\nthis.actor.status.encumbrance.pct = 100;\n","x2RLUUNB7BiIDYCP":"let difficulty = \"\";\nif (this.effect.name.includes(\"Moderate\")) difficulty = \"easy\";\nelse if (this.effect.name.includes(\"Severe\")) difficulty = \"average\";\nelse difficulty = \"veasy\";\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tcontext: { failure: `${this.actor.name} dies from Blight` },\n\tfields: { difficulty },\n\tskipTargets: true,\n\tappendTitle: \" - Blight\",\n});\nawait test.roll();\nif (test.failed) {\n\tthis.actor.addCondition(\"dead\");\n}\n","X3bLbOfcJAftOMa7":"return [\"ws\", \"bs\", \"ag\"].includes(args.characteristic)\n","x76tKw4L8dX00ikE":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.uqGxFOEqeurwkAO3\");\nconst data = item.toObject();\nsetProperty(data, \"flags.wfrp4e.breath\", \"fire\");\ndata.system.specification.value = 5;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","X7ikFOGKYzTMr4d1":"args.fields.difficulty = \"difficult\";\n","x8XK2fzzXCnSwfjt":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Athletics\"));\nawait test.roll();\n\nif (test.succeeded) {\n\tthis.actor.removeCondition(\"prone\");\n}\n","x9G6Du5EWV6byf4C":"if (Number.parseInt(this.effect.sourceTest.result.SL) >= 3) {\n\tthis.actor.modifyWounds(this.actor.system.characteristics.t.bonus * 2);\n} else {\n\tthis.actor.modifyWounds(this.actor.system.characteristics.t.bonus);\n}\n","x9iKFYYc4Ocy8PTS":"let item = this.effect.getCreatedItems()?.[0];\nChatMessage.create(\n\t{\n\t\tcontent: \"<em>Grace is beyond style</em>\",\n\t\tspeaker: ChatMessage.getSpeaker({\n\t\t\ttoken: this.actor.getActiveTokens()[0]?.document,\n\t\t\tactor: this.actor,\n\t\t}),\n\t},\n\t{ chatBubble: true },\n);\n\nconst choice = await ItemDialog.create(\n\tItemDialog.objectToArray({\n\t\tnobles: \"Nobles\",\n\t\tguilders: \"Guilders\",\n\t\tservants: \"Servants\",\n\t}),\n\t1,\n\t\"Choose Group\",\n);\n\nconst name = choice[0]?.name;\n\nif (!name) {\n\treturn;\n}\n\nif (item) {\n\titem.update({\n\t\tname: `${item.name.split(\"(\")[0]} (${name})`,\n\t\t\"system.tests.value\": `${item.system.tests.value.split(\"(\")[0]} (${name}`,\n\t});\n} else {\n\titem = await fromUuid(\"Compendium.wfrp4e-core.items.Item.sYbgpSnRqSZWgwFP\");\n\tconst data = item.toObject();\n\tdata.name += ` (${name})`;\n\tthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\t\tfromEffect: this.effect.id,\n\t});\n}\n","xBpLQa7yBPczDMY8":"const scythe = (\n\tawait fromUuid(\"Compendium.wfrp4e-core.items.CXg7XOFJwu4LZ9LM\")\n).toObject();\nscythe.name = \"Scythe of Shyish\";\nscythe.system.damage.value = \"WPB + 3\";\nscythe.system.equipped = true;\nscythe.img = this.effect.icon;\nscythe.system.qualities.value.push({ name: \"magical\" });\nthis.actor.createEmbeddedDocuments(\"Item\", [scythe], {\n\tfromEffect: this.effect.id,\n});\n","XClTZOjuhcxWLF51":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\tfields: { difficulty: \"difficult\" },\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n\nif (test.failed) {\n\tthis.actor.addCondition(\"stunned\");\n}\n\nconst item = await fromUuid(\"Compendium.wfrp4e-core.items.4lj1ik958mbgAlaF\");\nconst data = item.toObject();\ndata.system.location.key = this.item.system.location.key;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","XcvDYNZgJ2rpAdDV":"const fatigued = this.actor.hasCondition(\"fatigued\");\nif (!fatigued) {\n\tthis.actor.addCondition(\"fatigued\");\n\tui.notifications.notify(\n\t\t`Fatigued added to ${this.actor.name} which cannot be removed until the Malaise symptom is gone.`,\n\t);\n}\n","xcy5GOUSZ0meIejZ":"if (args.test.isFumble) {\n\targs.test.result.other.push(\"@Table[warp-grinder-fumble]\");\n}\n","Xe8ijqWU3bbtq7ZY":"if (\n\targs.opposedTest.defenderTest.actor.Species.toLowerCase().includes(\"skaven\")\n) {\n\targs.addImpact = true;\n\targs.opposedTest.result.other.push(\"Impact against Skaven\");\n}\n","Xf4FcZ4ZLdWmOXBa":"return args.skill?.name !== game.i18n.localize(\"NAME.Perception\") && !args.skill?.name.includes(game.i18n.localize(\"NAME.Stealth\"));\n","XfRvVBTVIuAm8RaZ":"return args.item?.name !== game.i18n.localize(\"NAME.CharmAnimal\")\n","Xg4qHLsyXGuUZfT8":"this.actor.hasCondition(\"ablaze\")?.delete();\n","xgdhf0wlNP2cHIQx":"await this.actor.addCondition(\n\t\"entangled\",\n\tthis.effect.sourceTest.result.overcast.usage.other.current,\n);\n","xgplXZMs459X7XXM":"// Apply changes when the mask is worn\n\nif (args.equipped) {\n\tthis.actor.createEmbeddedDocuments(\"ActiveEffect\", [\n\t\tthis.item.effects.contents[1]?.convertToApplied(),\n\t]);\n\tthis.script.scriptMessage(\n\t\t`${this.actor.name} dons the <strong>${this.item.name}</strong>. <br>\n        They suffer –20 to all attempts to resist Disease.<br>\n        If they wear the mask for more than an hour or benefit from any of its effects, they are exposed to @Corruption[moderate]{Moderate Corruption}. \n        `,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n\n// Notify of lingering effects when mask is removed\nelse if (!args.equipped) {\n\tawait this.item.effects.contents[0].delete();\n\tawait this.item.update({ name: (this.item.name += \" (Used)\") });\n\tthis.script.scriptMessage(\n\t\t`<strong>${this.item.name}</strong> on ${this.actor.name} has been taken off and loses its properties. However, the effects last for [[1d10+4]] days, after which they should be manually removed.`,\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n}\n","xIRU2SaqLeWmqGDI":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.vMYEkrWj0ip6ZOdv\");\nconst data = item.toObject();\ndata.name += \" (Disease)\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","Xk9XPklxxTvFlwpI":"args.options.useOnesArgumentative = true;\n","xklncIMwQIespDxS":"const test = await this.actor.setupCharacteristic(\"t\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"vhard\" },\n});\nawait test.roll();\ngame.wfrp4e.utility.postCorruptionTest(\"minor\", this.script.getChatData());\n\nif (test.failed) {\n\tthis.actor.addCondition(\"unconscious\");\n}\n","xL4S0H1RP8hhXW7c":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.xneBqGOs1QS7kfUr\");\nconst data = item.toObject();\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","xLKAuD6yzwjAL6tJ":"return !args.weapon || args.weapon?.system.properties?.qualities.shield || !this.item.system.usesLocation(args.weapon)\n","xMhhVol8Is3DJ3gb":"if (this.effect.sourceTest.succeeded) {\n\tconst blinded = 1 + this.effect.sourceTest.result.overcast.usage.other.count;\n\tthis.actor.addCondition(\"blinded\", blinded);\n}\n","xnHobI9HojObLHMp":"args.applyTB = false;\nargs.applyAP = false;\n","XO9m2AvFRAAeEuty":"if (args.test.options.fieldDressing && args.test.result.reversed) {\n\targs.test.data.result.SL = `+${Math.min(\n\t\t1,\n\t\tNumber(args.test.data.result.SL),\n\t)}`;\n\targs.test.result.other.push(`<b>${this.effect.name}</b>: SL limited to 1`);\n}\n","xobGBJbgFjQCrwvq":"let roll;\nif (\n\tthis.actor.has(game.i18n.localize(\"NAME.Daemonic\")) ||\n\tthis.actor.has(game.i18n.localize(\"NAME.Undead\")) ||\n\t[\"Goblin\", \"Orc\", \"Undead\"].includes(this.actor.system.details.species.value)\n) {\n\troll = await new Roll(\n\t\t`1d10 + ${this.effect.sourceTest.result.overcast.usage.other.current}`,\n\t).roll();\n} else {\n\troll = await new Roll(\"1d10\").roll();\n}\n\nroll.toMessage(this.script.getChatData());\nawait this.actor.applyBasicDamage(roll.total, {\n\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\tsuppressMsg: true,\n});\n\nif (this.actor.has(\"Undead\") || args.actor.has(\"Daemonic\")) {\n\tthis.actor.addCondition(\"ablaze\");\n}\n","xPDMpOvC1ZBVxrNg":"args.fields.modifier += 10;\n","xpgXWoK2zDnG1uiF":"const stunned = args.actor.hasCondition(\"stunned\");\nif (stunned)\n\tsetProperty(\n\t\tstunned,\n\t\t\"flags.wfrp4e.scriptData\",\n\t\tgetProperty(stunned, \"flags.wfrp4e.scriptData\").filter(\n\t\t\t(s) => s.trigger !== \"dialog\",\n\t\t),\n\t);\n\nconst poisoned = args.actor.hasCondition(\"poisoned\");\nif (poisoned)\n\tsetProperty(\n\t\tpoisoned,\n\t\t\"flags.wfrp4e.scriptData\",\n\t\tgetProperty(poisoned, \"flags.wfrp4e.scriptData\").filter(\n\t\t\t(s) => s.trigger !== \"dialog\",\n\t\t),\n\t);\n\nconst deafened = args.actor.hasCondition(\"deafened\");\nif (deafened)\n\tsetProperty(\n\t\tdeafened,\n\t\t\"flags.wfrp4e.scriptData\",\n\t\tgetProperty(deafened, \"flags.wfrp4e.scriptData\").filter(\n\t\t\t(s) => s.trigger !== \"dialog\",\n\t\t),\n\t);\n\nconst entangled = args.actor.hasCondition(\"entangled\");\nif (entangled)\n\tsetProperty(\n\t\tentangled,\n\t\t\"flags.wfrp4e.scriptData\",\n\t\tgetProperty(entangled, \"flags.wfrp4e.scriptData\").filter(\n\t\t\t(s) => s.trigger !== \"dialog\",\n\t\t),\n\t);\n\nconst fatigued = args.actor.hasCondition(\"fatigued\");\nif (fatigued)\n\tsetProperty(\n\t\tfatigued,\n\t\t\"flags.wfrp4e.scriptData\",\n\t\tgetProperty(fatigued, \"flags.wfrp4e.scriptData\").filter(\n\t\t\t(s) => s.trigger !== \"dialog\",\n\t\t),\n\t);\n\nconst blinded = args.actor.hasCondition(\"blinded\");\nif (blinded)\n\tsetProperty(\n\t\tblinded,\n\t\t\"flags.wfrp4e.scriptData\",\n\t\tgetProperty(blinded, \"flags.wfrp4e.scriptData\").filter(\n\t\t\t(s) => s.trigger !== \"dialog\",\n\t\t),\n\t);\n\nconst broken = args.actor.hasCondition(\"broken\");\nif (broken)\n\tsetProperty(\n\t\tbroken,\n\t\t\"flags.wfrp4e.scriptData\",\n\t\tgetProperty(broken, \"flags.wfrp4e.scriptData\").filter(\n\t\t\t(s) => s.trigger !== \"dialog\",\n\t\t),\n\t);\n\nconst prone = args.actor.hasCondition(\"prone\");\nif (prone)\n\tsetProperty(\n\t\tprone,\n\t\t\"flags.wfrp4e.scriptData\",\n\t\tgetProperty(prone, \"flags.wfrp4e.scriptData\").filter(\n\t\t\t(s) => s.trigger !== \"dialog\",\n\t\t),\n\t);\n","xPwa3NftkpMBc2AO":"return ![\"ws\", \"s\", \"ag\"].includes(args.characteristic)\n","XPxAKqPpPYE4E6B5":"args.fields.modifier -= 10 * this.effect.conditionValue;\n","xq3RANOtmPhy77ne":"args.update({ texture: { tint: \"#FFBF00\" } });\n","xQ3xR2Wf0wHFa76H":"return [\"ws\", \"bs\", \"fel\", \"dex\"].includes(args.characteristic) || args.weapon\n","xQnoRTHotZKrwPrx":"return args.type === \"cast\" && args.item?.system.lore?.value === \"shadow\"\n","xqWxV9w5ezBQdJkZ":"return args.options.corruption;\n","xRd6oA1QWLVpfoBm":"if (!this.actor.has(\"Night Vision\")) {\n\tconst item = await fromUuid(\"Compendium.wfrp4e-core.items.FmHDbCOy3pH8yKhm\");\n\tconst data = item.toObject();\n\tthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\t\tfromEffect: this.effect.id,\n\t});\n}\n","XRrGBbplNLZpXnCH":"let item;\nconst items = [];\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.rOV2s6PQBBrhpMOv\");\n{\n\tconst data = item.toObject();\n\titems.push(data);\n}\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.VUJUZVN3VYhOaPjj\");\n{\n\tconst data = item.toObject();\n\tdata.system.specification.value = 2;\n\titems.push(data);\n}\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.GbDyBCu8ZjDp6dkj\");\n{\n\tconst data = item.toObject();\n\titems.push(data);\n}\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.a8MC97PLzl10WocT\");\n{\n\tconst data = item.toObject();\n\titems.push(data);\n}\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\");\n{\n\tconst data = item.toObject();\n\tdata.system.specification.value = 1;\n\titems.push(data);\n}\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.pTorrE0l3VybAbtn\");\n{\n\tconst data = item.toObject();\n\tdata.system.specification.value = 1;\n\titems.push(data);\n}\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.fjd1u9VAgiYzhBRp\");\n{\n\tconst data = item.toObject();\n\titems.push(data);\n}\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.mDgEMOoJpi8DkRYb\");\n{\n\tconst data = item.toObject();\n\titems.push(data);\n}\nitem = await fromUuid(\"Compendium.wfrp4e-core.items.AtpAudHA4ybXVlWM\");\n{\n\tconst data = item.toObject();\n\tdata.system.specification.value = 2;\n\titems.push(data);\n}\n\nthis.actor.createEmbeddedDocuments(\"Item\", items, {\n\tfromEffect: this.effect.id,\n});\n","xRTmMwNfdirjsi8X":"this.actor.addCondition(\"ablaze\");\n\nthis.actor.applyBasicDamage(this.effect.sourceTest.result.damage);\n","xS2su09zcza9du09":"if (\n\t[\"Minor\", \"Moderate\", \"Major\"].includes(this.item.system.specification.value)\n) {\n\treturn\n}\n\nconst choice = await ItemDialog.create(\n\tItemDialog.objectToArray(\n\t\t{ minor: \"Minor\", moderate: \"Moderate\", major: \"Major\" },\n\t\tthis.item.img,\n\t),\n\t1,\n\t\"Choose Corruption Severity\",\n);\n\nthis.item.updateSource({ \"system.specification.value\": choice[0]?.name || \"\" });\n","XthZ3GCC3WhsEI2g":"args.update({\n\tlight: {\n\t\tdim: 10,\n\t\tbright: 5,\n\t\talpha: 0.5,\n\t\tanimation: {\n\t\t\tspeed: 4,\n\t\t\tintensity: 4,\n\t\t\ttype: \"flame\",\n\t\t},\n\t\tcolor: \"#ac9e6c\",\n\t},\n});\n","Xu5cED1MhT4ba7da":"args.fields.modifier += 10;\n","XuFxKPYheYF4WMmQ":"return args.skill?.name !== game.i18n.localize(\"NAME.Cool\");\n","xUpKYT7BZCSmAfUy":"if (this.item.system.quantity.value) {\n\tthis.item.system.reduceQuantity();\n\tconst actor = Array.from(game.user.targets)[0]?.actor || this.actor;\n\tactor.applyEffect({\n\t\teffectData: [this.item.effects.contents[0].convertToApplied()],\n\t});\n} else {\n\tthis.script.scriptNotification(\"None left!\", \"error\");\n}\n","xvGxwv7X0Vq3vNqb":"args.fields.modifier -= 10;\n","xvH4PKJasHcehOZz":"return args.skill?.name === `${game.i18n.localize(\"NAME.Lore\")} (${this.item.parenthesesText})`\n","XXnzUdsIYQ9Wjyu0":"return args.item?.system.attackType !== \"ranged\" || args.flags.howlingWarpGale || this.actor.sameSideAs(this.effect.sourceActor)\n","XYaYeiVkc5GKYTjC":"return args.spell?.system.lore.value !== \"fire\"\n","xYTkj8jhSVOSoLbC":"this.actor.flags.useless[`${this.item.system.location.key[0]}Arm`] = true;\n","y3agVFVBR8tVqWyx":"const test = await this.actor.setupCharacteristic(\"wp\", {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n});\nawait test.roll();\n","Y6ppJBerpM3TtSic":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.g4Q6AtzZuo5iIvD4\");\nthis.actor.createEmbeddedDocuments(\"Item\", [item.toObject()], {\n\tfromEffect: this.effect.id,\n});\n","Y7McxsHFeGhwQx0J":"this.actor.createEmbeddedDocuments(\n\t\"Item\",\n\t[\n\t\texpandObject({\n\t\t\tname: \"Ghostly Flame\",\n\t\t\ttype: \"weapon\",\n\t\t\timg: this.effect.img,\n\t\t\tsystem: {\n\t\t\t\t\"weaponGroup.value\": \"throwing\",\n\t\t\t\t\"damage.value\": \"SB + WPB\",\n\t\t\t\t\"qualities.value\": [{ name: \"magical\" }],\n\t\t\t\tequipped: true,\n\t\t\t},\n\t\t}),\n\t],\n\t{ fromEffect: this.effect.id },\n);\n","Y8J66v8VTKUASGuK":"if (!this.actor.effects.find((e) => e.isCondition)) {\n\treturn this.script.scriptNotification(\"No Conditions on this Actor\")\n}\n\nconst choice = await ItemDialog.create(\n\tthis.actor.effects.filter((i) => i.isCondition),\n\t1,\n\t\"Choose a Condition\",\n);\n\nif (choice[0]) {\n\tawait this.actor.removeCondition(choice[0].conditionId);\n}\n\nif (this.actor.effects.find((e) => e.isCondition)) {\n\treturn false; // Delete the effect if there are still conditions, otherwise, effect remains and provides the bonus\n}\n","YaKnYEbmmZZtByJc":"if (args.opposedTest.attackerTest.options.ballockKnife) {\n\targs.weaponProperties.impale = true;\n\targs.extraMessages.push(`<strong>${this.item.name}</strong>: Impale Added`);\n}\n","yAL0YwZWVm8o1nxa":"if (this.actor.hasCondition(\"dead\") && !this.actor.gardenOfCorpses) {\n\tthis.script.scriptMessage(\n\t\t\"[[3d10]] @UUID[Compendium.wfrp4e-core.actors.T79RqnDOAQLn3I1s]{zombies} spring forth from the remains.\",\n\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t);\n\tthis.actor.gardenOfCorpses = true;\n\t// local storage is sufficient to prevent multiple messages\n}\n","yatUu0cd7iKs50rq":"return args.skill?.name !== game.i18n.localize(\"NAME.Track\");\n","ybxDG2ezvRx02LYx":"return !args.options.corruption\n","yCgH3N9AurIiAv0i":"if (\n\t!this.item.name.includes(\"(\") ||\n\tthis.item.system.tests.value.includes(\"(Sense)\")\n) {\n\tlet tests = this.item.system.tests.value;\n\tlet name = this.item.name;\n\n\t// If name already specifies, make sure tests value reflects that\n\tif (name.includes(\"(\")) {\n\t\tconst sense = name.split(\"(\")[1].split(\")\")[0];\n\t\ttests = `${tests.split(\"(\")[0].trim()} (${sense})`;\n\t} // If no sense specified, provide dialog choice\n\telse {\n\t\tconst choice = await ItemDialog.create(\n\t\t\tItemDialog.objectToArray(\n\t\t\t\t{\n\t\t\t\t\ttaste: \"Taste\",\n\t\t\t\t\tsight: \"Sight\",\n\t\t\t\t\tsmell: \"Smell\",\n\t\t\t\t\thearing: \"Hearing\",\n\t\t\t\t\ttouch: \"Touch\",\n\t\t\t\t},\n\t\t\t\tthis.item.img,\n\t\t\t),\n\t\t\t1,\n\t\t\t\"Choose Sense\",\n\t\t);\n\t\tif (choice[0]) {\n\t\t\tname = `${name.split(\"(\")[0].trim()} (${choice[0].name})`;\n\t\t\ttests = `${tests.split(\"(\")[0].trim()} (${choice[0].name})`;\n\t\t}\n\t}\n\n\tthis.item.updateSource({ name, \"system.tests.value\": tests });\n}\n","YDqpKJVy8ijEKdLX":"return !(this.actor.attacker && (args.skill?.name.includes(\"Melee (Basic)\") || (args.type === \"weapon\" && args.item?.system.weaponGroup.value === \"basic\")))\n","yDvxF9llUYwJg0sE":"if (getProperty(args.data, \"system.loaded.value\") === true) {\n\tconst repeaterValue = Math.ceil(CONFIG.Dice.randomUniform() * 10);\n\tconst qualities = foundry.utils.deepClone(this.item.system.qualities.value);\n\tconst repeater = qualities.find((i) => i.name === \"repeater\");\n\tif (repeater) {\n\t\trepeater.value = repeaterValue;\n\t} else {\n\t\tqualities.push({ name: \"repeater\", value: repeaterValue });\n\t}\n\tsetProperty(args.data, \"system.loaded.amt\", repeaterValue);\n\tthis.item.update({ \"system.qualities.value\": qualities });\n\tthis.script.scriptNotification(`Repeater ${repeaterValue}`);\n} else if (getProperty(args.data, \"system.loaded.value\") === false) {\n\tconst qualities = foundry.utils\n\t\t.deepClone(this.item.system.qualities.value)\n\t\t.filter((i) => i.name !== \"repeater\");\n\tthis.item.update({ \"system.qualities.value\": qualities });\n}\n","YEBw2CzHYxsTpTy5":"return args.skill?.name === game.i18n.localize(\"NAME.Haggle\");\n","Yf2MmOzazzMdmoPU":"const armour = await fromUuid(\"Compendium.wfrp4e-core.items.VUJUZVN3VYhOaPjj\");\nconst armourData = armour.toObject();\narmourData.system.specification.value = 1;\n\nconst fury = await fromUuid(\"Compendium.wfrp4e-core.items.fjd1u9VAgiYzhBRp\");\nconst furyData = fury.toObject();\n\nconst horns = await fromUuid(\"Compendium.wfrp4e-core.items.BqPZn6q3VHn9HUrW\");\nconst hornsData = horns.toObject();\nhornsData.system.specification.value = 6;\n\nthis.actor.createEmbeddedDocuments(\"Item\", [armourData, furyData, hornsData], {\n\tfromEffect: this.effect.id,\n});\n","yFMvxecXAZ6T2O0S":"if (args.totalWoundLoss >= 1) {\n\tconst roll = await new Roll(\"1d10\").roll();\n\tawait roll.toMessage(this.script.getChatData());\n\tif (roll.total === 9) {\n\t\tthis.script.scriptMessage(\n\t\t\t`Two @UUID[Compendium.wfrp4e-eis.actors.cLOGeMqUty61nYB9]{Blue Horror of Tzeentch} claw their way out of ${this.actor.name}'s screaming flesh, killing them in the process.`,\n\t\t\t{ whisper: ChatMessage.getWhisperRecipients(\"GM\") },\n\t\t);\n\t}\n}\n","YFSgWRXel0bWE3EE":"return [\"ag\", \"ws\", \"bs\"].includes(args.characteristic) || args.skill?.name === game.i18n.localize(\"NAME.Climb\");\n","YHEIkBKWXKNPqglh":"if (args.test.result.castOutcome === \"success\") {\n\tgame.wfrp4e.utility.postCorruptionTest(\"moderate\", this.script.getChatData());\n}\n","YhhiWEQbox3WZA3Q":"return args.skill?.name === game.i18n.localize(\"NAME.Heal\") && game.combat?.active\n","yIGItnshXI4W46cp":"return args.skill?.name !== game.i18n.localize(\"NAME.Charm\");\n","YjAIsFlxKTJvYs60":"this.item.system.reduceQuantity();\n","YjJcRdytVRm88qLn":"args.options.additionalDamage = 1;\n","YMaxpXnml01bLGpO":"return args.item?.name.includes(game.i18n.localize(\"NAME.Stealth\"))\n","yMMzZ7daCqRlGT3N":"const item = args.opposedTest.attackerTest.item;\nif (!item.isMagical && (item.type === \"weapon\" || item.type === \"trait\")) {\n\targs.modifiers.other.push({\n\t\tlabel: this.effect.name,\n\t\tdetails: \"Remove Damage Rating\",\n\t\tvalue: -1 * (args.totalWoundLoss - args.opposedTest.result.differenceSL),\n\t});\n}\n","ynNCBAYwJFkTiXV1":"this.actor.system.status.addArmour(4, { source: this.effect });\n","ynoHNXXCGRS6fTqF":"let msg = \"\";\n\nlet i_gain = (await new Roll(\"1d10\").roll()).total;\n\nif (args.actor.characteristics.i.value <= 0) {\n\ti_gain += (await new Roll(\"2d10\").roll()).total;\n}\n\nmsg = `<b>${this.actor.prototypeToken.name}</b> gains ${i_gain} Initiative`;\n\nconst newValue = i_gain + args.actor.characteristics.i.modifier;\n\nthis.actor.update({ \"system.characteristics.i.modifier\": newValue });\n\nconst hitloc = await game.wfrp4e.tables.rollTable(\"hitloc\");\n\nconst value = hitloc.result;\nconst desc = hitloc.description;\n\nthis.effect.updateSource({ \"flags.wfrp4e.location\": value });\n\nmsg += ` as eyes push out of their ${desc}`;\n\nthis.script.scriptMessage(msg);\n","ynV7tz0OdCwlsQp6":"let msg = \"\";\nmsg += `<p>${await this.actor.applyBasicDamage(8, {\n\tloc: \"roll\",\n\tsuppressMsg: true,\n\thideDSN: true,\n})}</p>`;\nmsg += `<p>${await this.actor.applyBasicDamage(8, {\n\tloc: \"roll\",\n\tsuppressMsg: true,\n\thideDSN: true,\n})}</p>`;\nmsg += `<p>${await this.actor.applyBasicDamage(8, {\n\tloc: \"roll\",\n\tsuppressMsg: true,\n\thideDSN: true,\n})}</p>`;\n\nthis.script.scriptMessage(msg);\n","YOKoZFlBEpFavfOS":"return args.type === \"channelling\"\n","yPxYRObUiqAIhlNB":"this.actor.system.status.encumbrance.max += 1;\n","YQ2LnLxp0xgy3meI":"if (args.test.preData.options?.corruption && args.test.failed) {\n\targs.test?.result?.other.push(\n\t\t`Gain additional +1 Corruption from ${this.effect.name}`,\n\t);\n}\n","yRRzSKlcN3L7rEEe":"return args.skill?.name.includes(game.i18n.localize(\"NAME.Entertain\")) || args.skill?.name.includes(game.i18n.localize(\"NAME.Perform\")) || args.skill?.name.includes(game.i18n.localize(\"NAME.Play\"));\n","YRUTliBzAQvncGNX":"this.actor.addCondition(\"fatigued\");\nthis.script.scriptNotification(\"Added Fatigued\");\n","YsS2RZsl2ZsqjhWV":"return !args.fields.charging\n","yTmRoUstxHMso91c":"if (args.item.name === \"Magic Resistance\" && args.item.type === \"trait\") {\n\targs.item.system.specification.value =\n\t\tNumber(args.item.system.specification.value) + 1;\n}\n","YwLEw4BiKq4EMy57":"const i_gain = (await new Roll(\"2d10\").roll()).total;\nlet fel_gain = 0;\nif (args.actor.characteristics.fel.value <= 0) {\n\tfel_gain += (await new Roll(\"2d10\").roll()).total;\n}\n\nlet msg = `<b>${this.actor.prototypeToken.name}</b> gains ${i_gain} Intelligence`;\n\nif (fel_gain) msg += ` and ${fel_gain} Fellowship`;\n\nconst newInt = i_gain + args.actor.characteristics.int.modifier;\nconst newFel = fel_gain + args.actor.characteristics.fel.modifier;\n\nargs.actor.update({\n\t\"system.characteristics.int.modifier\": newInt,\n\t\"system.characteristics.fel.modifier\": newFel,\n});\n\nthis.script.scriptMessage(msg);\n","yXUPiWuQ5o0JBY4i":"return args.skill?.name === game.i18n.localize(\"Endurance\") || args.characteristic === \"int\"\n","YyKU2rIRmFSCqSlW":"const newEffect = this.effect.sourceItem.effects?.contents[1];\n\nif (newEffect) {\n\tthis.actor.createEmbeddedDocuments(\"ActiveEffect\", [\n\t\tnewEffect.convertToApplied(),\n\t]);\n}\n","yzN7ZNlgCiSVJqsU":"const sourceItem = this.effect.sourceItem;\n\nif (sourceItem) {\n\tthis.actor.applyEffect({\n\t\teffectUuids: [sourceItem.effects.contents[1].uuid],\n\t});\n\tthis.script.scriptNotification(\"Applied after effects\");\n}\n","Z1zriXibT0mAmdhb":"let item = await fromUuid(\"Compendium.wfrp4e-core.items.BqPZn6q3VHn9HUrW\");\nitem = item.toObject();\nitem.name = this.effect.name;\nitem.system.specification.value = this.actor.characteristics.s.bonus;\nitem.system.description.value = \"\";\nthis.actor.createEmbeddedDocuments(\"Item\", [item], {\n\tfromEffect: this.effect.id,\n});\n","Z30zYayPryXOjT5N":"args.item.system.damage.value = \"SB + 6\";\n","Z4WrrlVGpPY4iUbG":"await this.actor.addCondition(\"ablaze\");\n","Z52yZDm6lP6fOP3O":"const ablaze = this.actor.hasCondition(\"ablaze\");\nif (ablaze) {\n\tthis.script.scriptNotification(\"Immune to Ablaze\");\n\tablaze.delete();\n}\n","z5HfNUrHy5MS3K7a":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tcontext: { failure: \"1 Corruption Point Gained\" },\n});\nawait test.roll();\nif (test.failed && this.actor.type === \"character\") {\n\tthis.actor.update({\n\t\t\"system.status.corruption.value\":\n\t\t\tNumber.parseInt(this.actor.status.corruption.value) + 1,\n\t});\n\tthis.script.scriptMessage(\"Gained a Corruption point\", {\n\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t});\n}\n","Z6jNlyZMECkW4Hon":"const spells = await game.wfrp4e.utility.findAll(\n\t\"spell\",\n\t\"Loading Spells\",\n\ttrue,\n);\n\nconst choice = await ItemDialog.create(spells, 1);\n\nif (choice[0]) {\n\tthis.script.scriptMessage(\n\t\t`Chose @UUID[${choice[0].uuid}]{${choice[0].name}}`,\n\t);\n\tconst spell = (await fromUuid(choice[0].uuid)).toObject(); // Might be an index so retrieve item object for sure\n\tsetProperty(spell, \"flags.wfrp4e.boonOfTzeentch\", true);\n\tspell.system.wind.value = \"Channelling (Dhar)\";\n\tspell.system.memorized.value = true;\n\tthis.actor.createEmbeddedDocuments(\"Item\", [spell], {\n\t\tfromEffect: this.effect.id,\n\t});\n}\n","Z6OmmC0irJzxSnMH":"const chatData = { whisper: ChatMessage.getWhisperRecipients(\"GM\") };\nlet message = \"\";\n\nconst wounds = duplicate(this.actor.status.wounds);\nconst regenRoll = await new Roll(\"1d10\").roll();\nconst regen = regenRoll.total;\n\nif (wounds.value >= wounds.max) return\n\nif (wounds.value > 0) {\n\twounds.value += regen;\n\tif (wounds.value > wounds.max) {\n\t\twounds.value = wounds.max;\n\t}\n\tmessage += `<b>${this.actor.name}</b> regains ${regen} Wounds.`;\n\n\tif (regen === 10) {\n\t\tmessage += \"<br>Additionally, they regenerate a Critical Wound.\";\n\t}\n} else if (regen >= 8) {\n\tmessage += `<b>${this.actor.name}</b> rolled a ${regen} and regains 1 Wound.`;\n\twounds.value += 1;\n\tif (regen === 10) {\n\t\tmessage += \"<br>Additionally, they regenerate a Critical Wound.\";\n\t}\n} else {\n\tmessage += `<b>${this.actor.name}</b> Regenerate roll of ${regen} - No effect.`;\n}\n\nawait this.actor.update({ \"system.status.wounds\": wounds });\nthis.script.scriptMessage(message, {\n\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n});\n\nif (this.actor.Species?.toLowerCase() !== \"ogre\") {\n\tthis.actor\n\t\t.setupSkill(game.i18n.localize(\"NAME.Endurance\"), {\n\t\t\tskipTargets: true,\n\t\t\tappendTitle: ` - ${this.effect.name}`,\n\t\t\tfields: { difficulty: \"average\" },\n\t\t})\n\t\t.then((test) => {\n\t\t\ttest.roll();\n\t\t});\n}\n","z926Cl2vxUfyLY0V":"if (![\"rArm\", \"lArm\"].includes(this.effect.getFlag(\"wfrp4e\", \"location\")))\n\treturn true\n\nreturn [\"fel\", \"wp\", \"int\", \"t\"].includes(args.characteristic)\n","z9NEbIUBsKMaTuCz":"if (\n\targs.opposedTest.result.hitloc &&\n\targs.opposedTest.result.hitloc.value === \"head\"\n) {\n\targs.actor.addCondition(\"entangled\");\n}\n","zA6TDttpwMSMl7D8":"// An imbiber must take a Consume Alcohol Test.\nthis.actor\n\t.setupSkill(game.i18n.localize(\"NAME.ConsumeAlcohol\"), {\n\t\tskipTargets: true,\n\t\tappendTitle: ` - ${this.effect.name}`,\n\t})\n\t.then(async (test) => {\n\t\tawait test.roll();\n\t\t// If they succeed,\n\t\t// as a result of whatever potential futures they glimpse,\n\t\t// they can spend a Fortune Point within the next hour to reverse the dice of any failed Test.\n\t\tif (test.succeeded) {\n\t\t\tthis.script.scriptMessage(\n\t\t\t\t`As a result of whatever potential futures they glimpse, <strong>${this.actor.prototypeToken.name}</strong> can spend a Fortune Point within the next hour to reverse the dice of any failed Test.`,\n\t\t\t\t{\n\t\t\t\t\twhisper: ChatMessage.getWhisperRecipients(\"GM\"),\n\t\t\t\t\tblind: true,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t});\n","zadppy7FEbXvgUON":"const characteristics = {\n\tws: 5,\n\tbs: 0,\n\ts: 0,\n\tt: 0,\n\ti: 0,\n\tag: 10,\n\tdex: 10,\n\tint: 0,\n\twp: 0,\n\tfel: 5,\n};\nconst skills = [\"Perception\", \"Sleight of Hand\", \"Stealth (Urban)\"];\nconst skillAdvancements = [10, 10, 10];\nconst talents = [\"Criminal\", \"Etiquette (Criminals)\"];\nconst trappings = [\"Rope, 10 yards\", \"Lockpick\", \"Mask\"];\nconst items = [];\n\nconst updateObj = this.actor.toObject();\n\nfor (const ch in characteristics) {\n\tupdateObj.system.characteristics[ch].modifier += characteristics[ch];\n}\n\nfor (let index = 0; index < skills.length; index++) {\n\tconst skill = skills[index];\n\tlet skillItem;\n\tskillItem = updateObj.items.find(\n\t\t(i) => i.name === skill && i.type === \"skill\",\n\t);\n\tif (skillItem) skillItem.system.advances.value += skillAdvancements[index];\n\telse {\n\t\tskillItem = await game.wfrp4e.utility.findSkill(skill);\n\t\tskillItem = skillItem.toObject();\n\t\tskillItem.system.advances.value = skillAdvancements[index];\n\t\titems.push(skillItem);\n\t}\n}\n\nfor (const talent of talents) {\n\tconst talentItem = await game.wfrp4e.utility.findTalent(talent);\n\tif (talentItem) {\n\t\titems.push(talentItem.toObject());\n\t} else {\n\t\tui.notifications.warn(`Could not find ${talent}`, { permanent: true });\n\t}\n}\n\nfor (const trapping of trappings) {\n\tlet trappingItem = await game.wfrp4e.utility.findItem(trapping);\n\tif (trappingItem) {\n\t\ttrappingItem = trappingItem.toObject();\n\n\t\tequip(trappingItem);\n\n\t\titems.push(trappingItem);\n\t} else {\n\t\tui.notifications.warn(`Could not find ${trapping}`, { permanent: true });\n\t}\n}\n\nawait this.actor.update(updateObj);\nthis.actor.createEmbeddedDocuments(\"Item\", items);\n\nfunction equip(item) {\n\tif (item.type === \"armour\") item.system.worn.value = true;\n\telse if (item.type === \"weapon\") item.system.equipped = true;\n\telse if (\n\t\titem.type === \"trapping\" &&\n\t\titem.system.trappingType.value === \"clothingAccessories\"\n\t)\n\t\titem.system.worn = true;\n}\n","zBHTIBU8OlYj1YIO":"args.fields.modifier +=\n\tthis.effect.sourceActor?.system.characteristics.wp.value;\n","ZbuW8y7t9Y8oUFWq":"return !((args.type === \"weapon\" && (args.item.system.weaponGroup.value === \"blackpowder\" || args.item.system.weaponGroup.value === \"engineering\")) || (args.type === \"cast\" && args.item.system.lore.value === \"fire\"))\n","ZCkYe5XMVY1RWMXG":"args.options.wallcrawler = true;\n","ZCrfdLPOxiNDCDSg":"this.actor.effects.get(this.effect.id).delete(); // can't use this.effect because it thinks it's parent is the item, but it actually is the actor\n","ZCuOjLAeENKN1Q4L":"let halve;\nif (args.opposedTest.attackerTest.item?.type !== \"spell\") {\n\thalve = await Dialog.confirm({\n\t\ttitle: this.effect.name,\n\t\tcontent: \"Halve Damage? (Halves Damage from all fire)\",\n\t});\n} else {\n\thalve = args.opposedTest.attackerTest.item?.system.lore?.value === \"fire\";\n}\n\nif (halve) {\n\targs.totalWoundLoss /= 2;\n\targs.modifiers.other.push({\n\t\tlabel: this.effect.name,\n\t\tdetails: \"Halved\",\n\t\tvalue: \"× 0.5\",\n\t});\n}\n","ZdHvGvSJBsIuPphF":"return !args.fields.dualWielding && !args.options.dualWieldOffhand\n","Ze9E2zR1GFGWGMVH":"return [\"Pick Lock\", \"Sleight of Hand\", \"Channelling (Ulgu)\"].includes(args.skill?.name)\n","ZEdDcBka21rnMuz5":"const initiativeSetting = game.settings.get(\"wfrp4e\", \"initiativeRule\");\n\nswitch (initiativeSetting) {\n\tcase \"default\":\n\t\targs.initiative += \"+10\";\n\t\tbreak;\n\n\tcase \"sl\":\n\t\targs.initiative += \"+1\";\n\t\tbreak;\n\n\tcase \"d10Init\":\n\t\targs.initiative += \"+10\";\n\t\tbreak;\n\n\tcase \"d10InitAgi\":\n\t\targs.initiative += \"+1\";\n\t\tbreak;\n}\n","ZEXhYJqqxF6QAixX":"return args.options.terror || args.extendedTest?.getFlag(\"wfrp4e\", \"fear\");\n","zFYCaGR0wbFWjl4T":"return args.skill?.name !== game.i18n.localize(\"NAME.OutdoorSurvival\");\n","ZGlJnrIemqul24j7":"const infected = await fromUuid(\n\t\"Compendium.wfrp4e-core.items.V0c3qBU1CMm8bmsW\",\n);\nconst bite = await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\");\nconst biteData = bite.toObject();\nconst infectedData = infected.toObject();\n\nbiteData.system.specification.value = 4 - this.actor.characteristics.s.bonus;\n\nthis.actor.createEmbeddedDocuments(\"Item\", [biteData, infectedData], {\n\tfromEffect: this.effect.id,\n});\n","ZhuitY1KOU1Xe7cP":"return !args.weapon?.system.properties.qualities.pummel\n","ZI2YnAAGoLpmVDIL":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.aE3pyW20Orvdjzj0\");\nconst data = item.toObject();\ndata.system.specification.value = \"Religion\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","zi8Z3NlwVj3IfgAW":"if (this.item.system.quantity.value) {\n\tthis.item.system.reduceQuantity();\n\tconst actor = Array.from(game.user.targets)[0]?.actor || this.actor;\n\tactor.applyEffect({\n\t\teffectData: [this.item.effects.contents[3].convertToApplied()],\n\t});\n} else {\n\tthis.script.scriptNotification(\"None left!\", \"error\");\n}\n","ziG9H5Kdb7xC3dFE":"return !args.skill?.name.includes(game.i18n.localize(\"NAME.Art\"));\n","ZJy2rvpKmUHXGrAi":"args.actor.details.move.run *= 1.5;\n","zK38Rl5t9zbFi4Se":"if (\n\targs.opposedTest.result.hitloc.value === this.item.system.location.key &&\n\targs.totalWoundLoss > 0\n) {\n\targs.actor.addCondition(\"bleeding\", 1);\n\tthis.script.scriptNotification(\"Added Bleeding\");\n}\n","zk44dFEGkylB7kW6":"let modifier;\nconst target = args.data.targets[0];\nif (target.actor.details.size.value === \"tiny\") modifier = 30;\nif (target.actor.details.size.value === \"ltl\") modifier = 20;\nif (target.actor.details.size.value === \"sml\") modifier = 10;\n\nargs.fields.modifier += modifier || 0; // Offset size modifier\n","ZMwJad6v4G13SgjR":"return args.type === \"cast\" || args.type === \"channelling\"\n","ZNu4B0OdjkM9lmtu":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.9h82z72XGo9tfgQS\");\nconst data = item.toObject();\ndata.name = data.name += \" (Vision)\";\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","ZNW3ubbKIYXAyE48":"const wounds = this.actor.itemTypes.disease.filter(\n\t(i) => i.name === \"Festering Wound\" && i.system.duration.active,\n);\nlet selected;\nif (wounds.length === 0) {\n\treturn this.script.scriptNotification(\"No Festering Wounds!\");\n} else if (wounds.length === 1) {\n\tselected = wounds[0];\n} else if (wounds.length >= 2) {\n\tselected = (await ItemDialog.create(wounds, 1))[0];\n}\n\nif (selected) {\n\tconst test = await this.actor.setupSkill(\n\t\tgame.i18n.localize(\"NAME.Endurance\"),\n\t\t{ fields: { difficulty: \"average\" } },\n\t);\n\tawait test.roll();\n\tif (test.succeeded) {\n\t\tconst SL = Number.parseInt(test.result.SL);\n\t\tif (SL >= 0) {\n\t\t\tselected.update({\n\t\t\t\t\"system.duration.value\": selected.system.duration.value - SL,\n\t\t\t});\n\t\t\tthis.script.scriptMessage(\n\t\t\t\t`<strong>${selected.name}</strong> duration reduced by ${SL}!`,\n\t\t\t);\n\t\t}\n\t}\n}\n","zphxI8VSWbNQCMBy":"args.size = \"lrg\";\n","zqShIJnrRReGgP94":"const { added, removed } = this.effect.getFlag(\"wfrp4e\", \"propertiesChanged\");\n\nfor (const property of added || []) {\n\tconst hasValue = game.wfrp4e.config.propertyHasValue[property];\n\tif (!args.item.system.qualities.value.find((i) => i.name === property)) {\n\t\targs.item.system.qualities.value.push({\n\t\t\tname: property,\n\t\t\tvalue: hasValue ? 2 : null,\n\t\t});\n\t}\n}\n\nfor (const property of removed || []) {\n\targs.item.system.flaws.value = args.item.system.flaws.value.filter(\n\t\t(i) => i.name !== property,\n\t);\n}\n","ZqTW093qENOwGONP":"let msg = \"\";\n\nconst SL = Number.parseInt(this.effect.sourceTest.result.SL);\n\nfor (let i = 0; i < SL; i++) {\n\tmsg += `<p>${await this.actor.applyBasicDamage(3, {\n\t\tsuppressMsg: true,\n\t\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP,\n\t})}</p>`;\n}\n\nthis.script.scriptMessage(msg);\n","zR4WAjzXHTZuiu5G":"const actor = this.actor;\nconst effect = this.effect;\nlet bleedingAmt;\nlet bleedingRoll;\nlet msg = \"\";\n\nlet damage = effect.conditionValue;\nconst scriptArgs = { msg, damage };\nawait Promise.all(\n\tactor.runScripts(\"preApplyCondition\", { effect, data: scriptArgs }),\n);\nmsg = scriptArgs.msg;\ndamage = scriptArgs.damage;\nmsg += await actor.applyBasicDamage(damage, {\n\tdamageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_ALL,\n\tminimumOne: false,\n\tsuppressMsg: true,\n});\n\nif (actor.status.wounds.value === 0 && !actor.hasCondition(\"unconscious\")) {\n\tawait actor.addCondition(\"unconscious\");\n\tmsg += `<br>${game.i18n.format(\"BleedUnc\", {\n\t\tname: actor.prototypeToken.name,\n\t})}`;\n}\n\nif (actor.hasCondition(\"unconscious\")) {\n\tbleedingAmt = effect.conditionValue;\n\tbleedingRoll = (await new Roll(\"1d100\").roll()).total;\n\tif (bleedingRoll <= bleedingAmt * 10) {\n\t\tmsg += `<br>${game.i18n.format(\"BleedFail\", {\n\t\t\tname: actor.prototypeToken.name,\n\t\t})} (${game.i18n.localize(\"Rolled\")} ${bleedingRoll})`;\n\t\tawait actor.addCondition(\"dead\");\n\t} else if (bleedingRoll % 11 === 0) {\n\t\tmsg += `<br>${game.i18n.format(\"BleedCrit\", {\n\t\t\tname: actor.prototypeToken.name,\n\t\t})} (${game.i18n.localize(\"Rolled\")}${bleedingRoll})`;\n\t\tawait actor.removeCondition(\"bleeding\");\n\t} else {\n\t\tmsg += `<br>${game.i18n.localize(\"BleedRoll\")}: ${bleedingRoll}`;\n\t}\n}\n\nawait Promise.all(\n\tactor.runScripts(\"applyCondition\", { effect, data: { bleedingRoll } }),\n);\nif (args.suppressMessage) {\n\tconst messageData = game.wfrp4e.utility.chatDataSetup(msg);\n\tmessageData.speaker = { alias: this.effect.name };\n\tmessageData.flavor = this.effect.name;\n\treturn messageData\n} else {\n\treturn this.script.scriptMessage(msg)\n}\n","ZrePyV2spv3v65Tg":"return args.type !== \"weapon\" && !this.actor.statuses.has(\"infighting\")\n","zsiV6XEHlCNGLLPl":"return args.skill?.name ===  game.i18n.localize(\"NAME.SetTrap\");\n","zsoTVkHe4nHY1M52":"this.script.scriptMessage(\n\tawait this.actor.applyBasicDamage(\n\t\t10 + Number.parseInt(this.effect.sourceTest.result.SL),\n\t\t{ damageType: game.wfrp4e.config.DAMAGE_TYPE.IGNORE_AP },\n\t),\n);\n","ZsQR3AVKi0v5U593":"args.actor.addCondition(\"ablaze\", 2);\n","ZTE8LdRblyG4yYoE":"if (args.test.result.castOutcome === \"success\") {\n\t// Wait till after chat card is posted\n\tgame.wfrp4e.utility.sleep(500).then(() => {\n\t\tgame.wfrp4e.utility.postTerror(1, this.effect.name);\n\t\tgame.wfrp4e.utility.postTerror(2, this.effect.name);\n\t});\n}\n","zUv9e0A3OEXWY9Mv":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.pLW9SVX0TVTYPiPv\");\nconst data = item.toObject();\ndata.system.specification.value = 9 - this.actor.system.characteristics.s.bonus;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","ZvbBM4gTJHPdU8jU":"const test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"hard\" },\n});\nawait test.roll();\nreturn test.failed\n","Zxh4RAENoaAQAaNg":"return !this.actor.flags.useless.rEye || !this.actor.flags.useless.lEye || [\"wp\", \"t\", \"s\"].includes(args.characteristic)\n","ZxtOdwsM2Sqj9Zam":"const item = await fromUuid(\"Compendium.wfrp4e-core.items.AtpAudHA4ybXVlWM\");\nconst data = item.toObject();\ndata.system.specification.value = 0;\ndata.name = this.effect.name;\nthis.actor.createEmbeddedDocuments(\"Item\", [data], {\n\tfromEffect: this.effect.id,\n});\n","zY4ZjY7uyKIKMYmX":"this.script.scriptMessage(\n\tawait game.wfrp4e.tables.formatChatRoll(\"fleshy-curse\"),\n);\n\nconst test = await this.actor.setupSkill(game.i18n.localize(\"NAME.Cool\"), {\n\tskipTargets: true,\n\tappendTitle: ` - ${this.effect.name}`,\n\tfields: { difficulty: \"hard\" },\n});\nawait test.roll();\nif (test.succeeded) {\n\tthis.effect.delete();\n}\n","ZYsMgB4BwXBJcpYf":"// The wearer of the cloak causes Fear 2\n// in Wolves, Lions, Goats, and Chimeras.\ngame.wfrp4e.utility.postFear(2, this.effect.name);\n","zzk2uRSFjFHB5kjw":"const roll = Math.ceil(CONFIG.Dice.randomUniform() * 10);\nif (args.test.isFumble && roll === 1 && !args.test.result.misfire) {\n\targs.test.result.misfire = `${game.i18n.localize(\"Misfire\")} (Rolled 1)`;\n\targs.test.result.misfireDamage = eval(\n\t\tNumber.parseInt(args.test.result.roll.toString().split(\"\").pop()) +\n\t\t\targs.test.item.Damage,\n\t);\n} else if (args.test.isFumble && roll !== 1)\n\targs.test.result.other.push(`Misfire Roll: ${roll}`);\n"};	
	}